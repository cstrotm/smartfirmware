_FLOAT_MINLONGS = 2
BITSPERLONG = 32
LONGMSB = 0x80000000
Testing FloatClass construction
fc_mini.bits() = 5
fc_mini.mantissa() = 2
fc_mini.exponent() = 2
fc_mini.size() = 1
fc_mini.msize() = 1
fc_mini.esize() = 1
fc_mini.alloc() = FALSE
fc_mini.mhind() = 0
fc_mini.mhshift() = 30
fc_mini.mhmask() = 0x00000003
fc_mini.mlind() = 0
fc_mini.mlshift() = 0
fc_mini.mlmask() = 0x00000003
fc_mini.ehind() = 0
fc_mini.ehshift() = 28
fc_mini.ehmask() = 0x0000000C
fc_mini.elind() = 0
fc_mini.elshift() = 2
fc_mini.elmask() = 0x0000000C
fc_mini.efmask() = 0x00000003
fc_mini.sind() = 0
fc_mini.sshift() = 4
fc_mini.smask() = 0x00000010
fc_mini.zero() = { 0x00000000 }
fc_mini.one() = { 0x00000004 }
fc_mini.two() = { 0x00000008 }
fc_mini.four() = { 0x0000000C }
fc_mini.minusone() = { 0x00000014 }
fc_mini.ten() = { 0x00000001 }
fc_mini.half() = { 0x00000000 }
fc_mini.fourth() = { 0x0000000C }
fc_mini.tenth() = { 0x00000000 }
fc_mini.posinf() = { 0x0000000C }
fc_mini.neginf() = { 0x0000001C }
fc_mini.nan() = { 0x0000000E }
fc_mini.qnan() = { 0x0000000D }
fc_mini.trapenable(FormatMismatch) = disabled
fc_mini.trapenable(FormatMismatch) = NULL
fc_mini.trapenable(InvalidOperation) = disabled
fc_mini.trapenable(InvalidOperation) = NULL
fc_mini.trapenable(DivideByZero) = disabled
fc_mini.trapenable(DivideByZero) = NULL
fc_mini.trapenable(Overflow) = disabled
fc_mini.trapenable(Overflow) = NULL
fc_mini.trapenable(Underflow) = disabled
fc_mini.trapenable(Underflow) = NULL
fc_mini.trapenable(Inexact) = disabled
fc_mini.trapenable(Inexact) = NULL
fc_single.bits() = 32
fc_single.mantissa() = 23
fc_single.exponent() = 8
fc_single.size() = 1
fc_single.msize() = 1
fc_single.esize() = 1
fc_single.alloc() = FALSE
fc_single.mhind() = 0
fc_single.mhshift() = 9
fc_single.mhmask() = 0x007FFFFF
fc_single.mlind() = 0
fc_single.mlshift() = 0
fc_single.mlmask() = 0x007FFFFF
fc_single.ehind() = 0
fc_single.ehshift() = 1
fc_single.ehmask() = 0x7F800000
fc_single.elind() = 0
fc_single.elshift() = 23
fc_single.elmask() = 0x7F800000
fc_single.efmask() = 0x000000FF
fc_single.sind() = 0
fc_single.sshift() = 31
fc_single.smask() = 0x80000000
fc_single.zero() = { 0x00000000 } (0)
fc_single.one() = { 0x3F800000 } ( 1.0000000E+00)
fc_single.two() = { 0x40000000 } ( 2.0000000E+00)
fc_single.four() = { 0x40800000 } ( 4.0000000E+00)
fc_single.minusone() = { 0xBF800000 } (-1.0000000E+00)
fc_single.ten() = { 0x41200000 } ( 1.0000000E+01)
fc_single.half() = { 0x3F000000 } ( 5.0000000E-01)
fc_single.fourth() = { 0x3E800000 } ( 2.5000000E-01)
fc_single.tenth() = { 0x3DCCCCCD } ( 1.0000000E-01)
fc_single.posinf() = { 0x7F800000 } (+Inf)
fc_single.neginf() = { 0xFF800000 } (-Inf)
fc_single.nan() = { 0x7F800002 } (NaN)
fc_single.qnan() = { 0x7F800001 } (QNaN)
fc_single.trapenable(FormatMismatch) = disabled
fc_single.trapenable(FormatMismatch) = NULL
fc_single.trapenable(InvalidOperation) = disabled
fc_single.trapenable(InvalidOperation) = NULL
fc_single.trapenable(DivideByZero) = disabled
fc_single.trapenable(DivideByZero) = NULL
fc_single.trapenable(Overflow) = disabled
fc_single.trapenable(Overflow) = NULL
fc_single.trapenable(Underflow) = disabled
fc_single.trapenable(Underflow) = NULL
fc_single.trapenable(Inexact) = disabled
fc_single.trapenable(Inexact) = NULL
fc_double.bits() = 64
fc_double.mantissa() = 52
fc_double.exponent() = 11
fc_double.size() = 2
fc_double.msize() = 2
fc_double.esize() = 1
fc_double.alloc() = FALSE
fc_double.mhind() = 1
fc_double.mhshift() = 12
fc_double.mhmask() = 0x000FFFFF
fc_double.mlind() = 0
fc_double.mlshift() = 0
fc_double.mlmask() = 0xFFFFFFFF
fc_double.ehind() = 1
fc_double.ehshift() = 1
fc_double.ehmask() = 0x7FF00000
fc_double.elind() = 1
fc_double.elshift() = 20
fc_double.elmask() = 0x7FF00000
fc_double.efmask() = 0x000007FF
fc_double.sind() = 1
fc_double.sshift() = 31
fc_double.smask() = 0x80000000
fc_double.zero() = { 0x00000000, 0x00000000 } (0)
fc_double.one() = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fc_double.two() = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fc_double.four() = { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fc_double.minusone() = { 0xBFF00000, 0x00000000 } ( -1.0000000000000000E+00)
fc_double.ten() = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fc_double.half() = { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
fc_double.fourth() = { 0x3FD00000, 0x00000000 } (  2.5000000000000000E-01)
fc_double.tenth() = { 0x3FB99999, 0x9999999A } (  1.0000000000000001E-01)
fc_double.posinf() = { 0x7FF00000, 0x00000000 } (+Inf)
fc_double.neginf() = { 0xFFF00000, 0x00000000 } (-Inf)
fc_double.nan() = { 0x7FF00000, 0x00000002 } (NaN)
fc_double.qnan() = { 0x7FF00000, 0x00000001 } (QNaN)
fc_double.trapenable(FormatMismatch) = disabled
fc_double.trapenable(FormatMismatch) = NULL
fc_double.trapenable(InvalidOperation) = disabled
fc_double.trapenable(InvalidOperation) = NULL
fc_double.trapenable(DivideByZero) = disabled
fc_double.trapenable(DivideByZero) = NULL
fc_double.trapenable(Overflow) = disabled
fc_double.trapenable(Overflow) = NULL
fc_double.trapenable(Underflow) = disabled
fc_double.trapenable(Underflow) = NULL
fc_double.trapenable(Inexact) = disabled
fc_double.trapenable(Inexact) = NULL
fc_extended.bits() = 80
fc_extended.mantissa() = 64
fc_extended.exponent() = 15
fc_extended.size() = 3
fc_extended.msize() = 2
fc_extended.esize() = 1
fc_extended.alloc() = TRUE
fc_extended.mhind() = 1
fc_extended.mhshift() = 0
fc_extended.mhmask() = 0xFFFFFFFF
fc_extended.mlind() = 0
fc_extended.mlshift() = 0
fc_extended.mlmask() = 0xFFFFFFFF
fc_extended.ehind() = 2
fc_extended.ehshift() = 17
fc_extended.ehmask() = 0x00007FFF
fc_extended.elind() = 2
fc_extended.elshift() = 0
fc_extended.elmask() = 0x00007FFF
fc_extended.efmask() = 0x00007FFF
fc_extended.sind() = 2
fc_extended.sshift() = 15
fc_extended.smask() = 0x00008000
fc_extended.zero() = { 0x00000000, 0x00000000, 0x00000000 }
fc_extended.one() = { 0x00003FFF, 0x00000000, 0x00000000 }
fc_extended.two() = { 0x00004000, 0x00000000, 0x00000000 }
fc_extended.four() = { 0x00004001, 0x00000000, 0x00000000 }
fc_extended.minusone() = { 0x0000BFFF, 0x00000000, 0x00000000 }
fc_extended.ten() = { 0x00004002, 0x40000000, 0x00000000 }
fc_extended.half() = { 0x00003FFE, 0x00000000, 0x00000000 }
fc_extended.fourth() = { 0x00003FFD, 0x00000000, 0x00000000 }
fc_extended.tenth() = { 0x00003FFB, 0x99999999, 0x9999999A }
fc_extended.posinf() = { 0x00007FFF, 0x00000000, 0x00000000 }
fc_extended.neginf() = { 0x0000FFFF, 0x00000000, 0x00000000 }
fc_extended.nan() = { 0x00007FFF, 0x00000000, 0x00000002 }
fc_extended.qnan() = { 0x00007FFF, 0x00000000, 0x00000001 }
fc_extended.trapenable(FormatMismatch) = disabled
fc_extended.trapenable(FormatMismatch) = NULL
fc_extended.trapenable(InvalidOperation) = disabled
fc_extended.trapenable(InvalidOperation) = NULL
fc_extended.trapenable(DivideByZero) = disabled
fc_extended.trapenable(DivideByZero) = NULL
fc_extended.trapenable(Overflow) = disabled
fc_extended.trapenable(Overflow) = NULL
fc_extended.trapenable(Underflow) = disabled
fc_extended.trapenable(Underflow) = NULL
fc_extended.trapenable(Inexact) = disabled
fc_extended.trapenable(Inexact) = NULL
fc_quad1.bits() = 128
fc_quad1.mantissa() = 112
fc_quad1.exponent() = 15
fc_quad1.size() = 4
fc_quad1.msize() = 4
fc_quad1.esize() = 1
fc_quad1.alloc() = TRUE
fc_quad1.mhind() = 3
fc_quad1.mhshift() = 16
fc_quad1.mhmask() = 0x0000FFFF
fc_quad1.mlind() = 0
fc_quad1.mlshift() = 0
fc_quad1.mlmask() = 0xFFFFFFFF
fc_quad1.ehind() = 3
fc_quad1.ehshift() = 1
fc_quad1.ehmask() = 0x7FFF0000
fc_quad1.elind() = 3
fc_quad1.elshift() = 16
fc_quad1.elmask() = 0x7FFF0000
fc_quad1.efmask() = 0x00007FFF
fc_quad1.sind() = 3
fc_quad1.sshift() = 31
fc_quad1.smask() = 0x80000000
fc_quad1.zero() = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.one() = { 0x3FFF0000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.two() = { 0x40000000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.four() = { 0x40010000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.minusone() = { 0xBFFF0000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.ten() = { 0x40024000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.half() = { 0x3FFE0000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.fourth() = { 0x3FFD0000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.tenth() = { 0x3FFB9999, 0x99999999, 0x99999999, 0x9999999A }
fc_quad1.posinf() = { 0x7FFF0000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.neginf() = { 0xFFFF0000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad1.nan() = { 0x7FFF0000, 0x00000000, 0x00000000, 0x00000002 }
fc_quad1.qnan() = { 0x7FFF0000, 0x00000000, 0x00000000, 0x00000001 }
fc_quad1.trapenable(FormatMismatch) = disabled
fc_quad1.trapenable(FormatMismatch) = NULL
fc_quad1.trapenable(InvalidOperation) = disabled
fc_quad1.trapenable(InvalidOperation) = NULL
fc_quad1.trapenable(DivideByZero) = disabled
fc_quad1.trapenable(DivideByZero) = NULL
fc_quad1.trapenable(Overflow) = disabled
fc_quad1.trapenable(Overflow) = NULL
fc_quad1.trapenable(Underflow) = disabled
fc_quad1.trapenable(Underflow) = NULL
fc_quad1.trapenable(Inexact) = disabled
fc_quad1.trapenable(Inexact) = NULL
fc_quad2.bits() = 128
fc_quad2.mantissa() = 96
fc_quad2.exponent() = 31
fc_quad2.size() = 4
fc_quad2.msize() = 3
fc_quad2.esize() = 1
fc_quad2.alloc() = TRUE
fc_quad2.mhind() = 2
fc_quad2.mhshift() = 0
fc_quad2.mhmask() = 0xFFFFFFFF
fc_quad2.mlind() = 0
fc_quad2.mlshift() = 0
fc_quad2.mlmask() = 0xFFFFFFFF
fc_quad2.ehind() = 3
fc_quad2.ehshift() = 1
fc_quad2.ehmask() = 0x7FFFFFFF
fc_quad2.elind() = 3
fc_quad2.elshift() = 0
fc_quad2.elmask() = 0x7FFFFFFF
fc_quad2.efmask() = 0x7FFFFFFF
fc_quad2.sind() = 3
fc_quad2.sshift() = 31
fc_quad2.smask() = 0x80000000
fc_quad2.zero() = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.one() = { 0x3FFFFFFF, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.two() = { 0x40000000, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.four() = { 0x40000001, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.minusone() = { 0xBFFFFFFF, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.ten() = { 0x40000002, 0x40000000, 0x00000000, 0x00000000 }
fc_quad2.half() = { 0x3FFFFFFE, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.fourth() = { 0x3FFFFFFD, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.tenth() = { 0x3FFFFFFB, 0x99999999, 0x99999999, 0x9999999A }
fc_quad2.posinf() = { 0x7FFFFFFF, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.neginf() = { 0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000 }
fc_quad2.nan() = { 0x7FFFFFFF, 0x00000000, 0x00000000, 0x00000002 }
fc_quad2.qnan() = { 0x7FFFFFFF, 0x00000000, 0x00000000, 0x00000001 }
fc_quad2.trapenable(FormatMismatch) = disabled
fc_quad2.trapenable(FormatMismatch) = NULL
fc_quad2.trapenable(InvalidOperation) = disabled
fc_quad2.trapenable(InvalidOperation) = NULL
fc_quad2.trapenable(DivideByZero) = disabled
fc_quad2.trapenable(DivideByZero) = NULL
fc_quad2.trapenable(Overflow) = disabled
fc_quad2.trapenable(Overflow) = NULL
fc_quad2.trapenable(Underflow) = disabled
fc_quad2.trapenable(Underflow) = NULL
fc_quad2.trapenable(Inexact) = disabled
fc_quad2.trapenable(Inexact) = NULL
fc_t1.bits() = 65
fc_t1.mantissa() = 32
fc_t1.exponent() = 32
fc_t1.size() = 3
fc_t1.msize() = 1
fc_t1.esize() = 1
fc_t1.alloc() = TRUE
fc_t1.mhind() = 0
fc_t1.mhshift() = 0
fc_t1.mhmask() = 0xFFFFFFFF
fc_t1.mlind() = 0
fc_t1.mlshift() = 0
fc_t1.mlmask() = 0xFFFFFFFF
fc_t1.ehind() = 1
fc_t1.ehshift() = 0
fc_t1.ehmask() = 0xFFFFFFFF
fc_t1.elind() = 1
fc_t1.elshift() = 0
fc_t1.elmask() = 0xFFFFFFFF
fc_t1.efmask() = 0xFFFFFFFF
fc_t1.sind() = 2
fc_t1.sshift() = 0
fc_t1.smask() = 0x00000001
fc_t1.zero() = { 0x00000000, 0x00000000, 0x00000000 }
fc_t1.one() = { 0x00000000, 0x7FFFFFFF, 0x00000000 }
fc_t1.two() = { 0x00000000, 0x80000000, 0x00000000 }
fc_t1.four() = { 0x00000000, 0x80000001, 0x00000000 }
fc_t1.minusone() = { 0x00000001, 0x7FFFFFFF, 0x00000000 }
fc_t1.ten() = { 0x00000000, 0x80000002, 0x40000000 }
fc_t1.half() = { 0x00000000, 0x7FFFFFFE, 0x00000000 }
fc_t1.fourth() = { 0x00000000, 0x7FFFFFFD, 0x00000000 }
fc_t1.tenth() = { 0x00000000, 0x7FFFFFFB, 0x9999999A }
fc_t1.posinf() = { 0x00000000, 0xFFFFFFFF, 0x00000000 }
fc_t1.neginf() = { 0x00000001, 0xFFFFFFFF, 0x00000000 }
fc_t1.nan() = { 0x00000000, 0xFFFFFFFF, 0x00000002 }
fc_t1.qnan() = { 0x00000000, 0xFFFFFFFF, 0x00000001 }
fc_t1.trapenable(FormatMismatch) = disabled
fc_t1.trapenable(FormatMismatch) = NULL
fc_t1.trapenable(InvalidOperation) = disabled
fc_t1.trapenable(InvalidOperation) = NULL
fc_t1.trapenable(DivideByZero) = disabled
fc_t1.trapenable(DivideByZero) = NULL
fc_t1.trapenable(Overflow) = disabled
fc_t1.trapenable(Overflow) = NULL
fc_t1.trapenable(Underflow) = disabled
fc_t1.trapenable(Underflow) = NULL
fc_t1.trapenable(Inexact) = disabled
fc_t1.trapenable(Inexact) = NULL
fc_t2.bits() = 119
fc_t2.mantissa() = 48
fc_t2.exponent() = 70
fc_t2.size() = 4
fc_t2.msize() = 2
fc_t2.esize() = 3
fc_t2.alloc() = TRUE
fc_t2.mhind() = 1
fc_t2.mhshift() = 16
fc_t2.mhmask() = 0x0000FFFF
fc_t2.mlind() = 0
fc_t2.mlshift() = 0
fc_t2.mlmask() = 0xFFFFFFFF
fc_t2.ehind() = 3
fc_t2.ehshift() = 10
fc_t2.ehmask() = 0x003FFFFF
fc_t2.elind() = 1
fc_t2.elshift() = 16
fc_t2.elmask() = 0xFFFF0000
fc_t2.efmask() = 0x0000003F
fc_t2.sind() = 3
fc_t2.sshift() = 22
fc_t2.smask() = 0x00400000
fc_t2.zero() = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2.one() = { 0x001FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.two() = { 0x00200000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2.four() = { 0x00200000, 0x00000000, 0x00010000, 0x00000000 }
fc_t2.minusone() = { 0x005FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.ten() = { 0x00200000, 0x00000000, 0x00024000, 0x00000000 }
fc_t2.half() = { 0x001FFFFF, 0xFFFFFFFF, 0xFFFE0000, 0x00000000 }
fc_t2.fourth() = { 0x001FFFFF, 0xFFFFFFFF, 0xFFFD0000, 0x00000000 }
fc_t2.tenth() = { 0x001FFFFF, 0xFFFFFFFF, 0xFFFB9999, 0x9999999A }
fc_t2.posinf() = { 0x003FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.neginf() = { 0x007FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.nan() = { 0x003FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000002 }
fc_t2.qnan() = { 0x003FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000001 }
fc_t2.trapenable(FormatMismatch) = disabled
fc_t2.trapenable(FormatMismatch) = NULL
fc_t2.trapenable(InvalidOperation) = disabled
fc_t2.trapenable(InvalidOperation) = NULL
fc_t2.trapenable(DivideByZero) = disabled
fc_t2.trapenable(DivideByZero) = NULL
fc_t2.trapenable(Overflow) = disabled
fc_t2.trapenable(Overflow) = NULL
fc_t2.trapenable(Underflow) = disabled
fc_t2.trapenable(Underflow) = NULL
fc_t2.trapenable(Inexact) = disabled
fc_t2.trapenable(Inexact) = NULL
fc_t3.bits() = 109
fc_t3.mantissa() = 48
fc_t3.exponent() = 60
fc_t3.size() = 4
fc_t3.msize() = 2
fc_t3.esize() = 2
fc_t3.alloc() = TRUE
fc_t3.mhind() = 1
fc_t3.mhshift() = 16
fc_t3.mhmask() = 0x0000FFFF
fc_t3.mlind() = 0
fc_t3.mlshift() = 0
fc_t3.mlmask() = 0xFFFFFFFF
fc_t3.ehind() = 3
fc_t3.ehshift() = 20
fc_t3.ehmask() = 0x00000FFF
fc_t3.elind() = 1
fc_t3.elshift() = 16
fc_t3.elmask() = 0xFFFF0000
fc_t3.efmask() = 0x0FFFFFFF
fc_t3.sind() = 3
fc_t3.sshift() = 12
fc_t3.smask() = 0x00001000
fc_t3.zero() = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3.one() = { 0x000007FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.two() = { 0x00000800, 0x00000000, 0x00000000, 0x00000000 }
fc_t3.four() = { 0x00000800, 0x00000000, 0x00010000, 0x00000000 }
fc_t3.minusone() = { 0x000017FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.ten() = { 0x00000800, 0x00000000, 0x00024000, 0x00000000 }
fc_t3.half() = { 0x000007FF, 0xFFFFFFFF, 0xFFFE0000, 0x00000000 }
fc_t3.fourth() = { 0x000007FF, 0xFFFFFFFF, 0xFFFD0000, 0x00000000 }
fc_t3.tenth() = { 0x000007FF, 0xFFFFFFFF, 0xFFFB9999, 0x9999999A }
fc_t3.posinf() = { 0x00000FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.neginf() = { 0x00001FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.nan() = { 0x00000FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000002 }
fc_t3.qnan() = { 0x00000FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000001 }
fc_t3.trapenable(FormatMismatch) = disabled
fc_t3.trapenable(FormatMismatch) = NULL
fc_t3.trapenable(InvalidOperation) = disabled
fc_t3.trapenable(InvalidOperation) = NULL
fc_t3.trapenable(DivideByZero) = disabled
fc_t3.trapenable(DivideByZero) = NULL
fc_t3.trapenable(Overflow) = disabled
fc_t3.trapenable(Overflow) = NULL
fc_t3.trapenable(Underflow) = disabled
fc_t3.trapenable(Underflow) = NULL
fc_t3.trapenable(Inexact) = disabled
fc_t3.trapenable(Inexact) = NULL
Testing Float construction
Float() = { 0x00000000, 0x00000000 } (0)
Float(20) = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
Float(200) = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
f0 = { 0x00000000, 0x00000000 } (0)
f20 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
f200 = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
f200x = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fstr = { 0xC3B12210, 0xF47DE97E } ( -1.2345678901234560E+18)
(fx = fstr) = { 0xC3B12210, 0xF47DE97E } ( -1.2345678901234560E+18)
Testing protected member functions
fc_t1.setmbit(-1) = { 0x00000000, 0x00000000, 0x00000000 }
fc_t1.setmbit(0) = { 0x00000000, 0x00000000, 0x00000001 }
fc_t1.setmbit(1) = { 0x00000000, 0x00000000, 0x00000003 }
fc_t1.setmbit(2) = { 0x00000000, 0x00000000, 0x00000007 }
fc_t1.setmbit(3) = { 0x00000000, 0x00000000, 0x0000000F }
fc_t1.setmbit(4) = { 0x00000000, 0x00000000, 0x0000001F }
fc_t1.setmbit(5) = { 0x00000000, 0x00000000, 0x0000003F }
fc_t1.setmbit(6) = { 0x00000000, 0x00000000, 0x0000007F }
fc_t1.setmbit(7) = { 0x00000000, 0x00000000, 0x000000FF }
fc_t1.setmbit(8) = { 0x00000000, 0x00000000, 0x000001FF }
fc_t1.setmbit(9) = { 0x00000000, 0x00000000, 0x000003FF }
fc_t1.setmbit(10) = { 0x00000000, 0x00000000, 0x000007FF }
fc_t1.setmbit(11) = { 0x00000000, 0x00000000, 0x00000FFF }
fc_t1.setmbit(12) = { 0x00000000, 0x00000000, 0x00001FFF }
fc_t1.setmbit(13) = { 0x00000000, 0x00000000, 0x00003FFF }
fc_t1.setmbit(14) = { 0x00000000, 0x00000000, 0x00007FFF }
fc_t1.setmbit(15) = { 0x00000000, 0x00000000, 0x0000FFFF }
fc_t1.setmbit(16) = { 0x00000000, 0x00000000, 0x0001FFFF }
fc_t1.setmbit(17) = { 0x00000000, 0x00000000, 0x0003FFFF }
fc_t1.setmbit(18) = { 0x00000000, 0x00000000, 0x0007FFFF }
fc_t1.setmbit(19) = { 0x00000000, 0x00000000, 0x000FFFFF }
fc_t1.setmbit(20) = { 0x00000000, 0x00000000, 0x001FFFFF }
fc_t1.setmbit(21) = { 0x00000000, 0x00000000, 0x003FFFFF }
fc_t1.setmbit(22) = { 0x00000000, 0x00000000, 0x007FFFFF }
fc_t1.setmbit(23) = { 0x00000000, 0x00000000, 0x00FFFFFF }
fc_t1.setmbit(24) = { 0x00000000, 0x00000000, 0x01FFFFFF }
fc_t1.setmbit(25) = { 0x00000000, 0x00000000, 0x03FFFFFF }
fc_t1.setmbit(26) = { 0x00000000, 0x00000000, 0x07FFFFFF }
fc_t1.setmbit(27) = { 0x00000000, 0x00000000, 0x0FFFFFFF }
fc_t1.setmbit(28) = { 0x00000000, 0x00000000, 0x1FFFFFFF }
fc_t1.setmbit(29) = { 0x00000000, 0x00000000, 0x3FFFFFFF }
fc_t1.setmbit(30) = { 0x00000000, 0x00000000, 0x7FFFFFFF }
fc_t1.setmbit(31) = { 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t1.setmbit(32) = { 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t1.setebit(-1) = { 0x00000000, 0x00000000, 0x00000000 }
fc_t1.setebit(0) = { 0x00000000, 0x00000001, 0x00000000 }
fc_t1.setebit(1) = { 0x00000000, 0x00000003, 0x00000000 }
fc_t1.setebit(2) = { 0x00000000, 0x00000007, 0x00000000 }
fc_t1.setebit(3) = { 0x00000000, 0x0000000F, 0x00000000 }
fc_t1.setebit(4) = { 0x00000000, 0x0000001F, 0x00000000 }
fc_t1.setebit(5) = { 0x00000000, 0x0000003F, 0x00000000 }
fc_t1.setebit(6) = { 0x00000000, 0x0000007F, 0x00000000 }
fc_t1.setebit(7) = { 0x00000000, 0x000000FF, 0x00000000 }
fc_t1.setebit(8) = { 0x00000000, 0x000001FF, 0x00000000 }
fc_t1.setebit(9) = { 0x00000000, 0x000003FF, 0x00000000 }
fc_t1.setebit(10) = { 0x00000000, 0x000007FF, 0x00000000 }
fc_t1.setebit(11) = { 0x00000000, 0x00000FFF, 0x00000000 }
fc_t1.setebit(12) = { 0x00000000, 0x00001FFF, 0x00000000 }
fc_t1.setebit(13) = { 0x00000000, 0x00003FFF, 0x00000000 }
fc_t1.setebit(14) = { 0x00000000, 0x00007FFF, 0x00000000 }
fc_t1.setebit(15) = { 0x00000000, 0x0000FFFF, 0x00000000 }
fc_t1.setebit(16) = { 0x00000000, 0x0001FFFF, 0x00000000 }
fc_t1.setebit(17) = { 0x00000000, 0x0003FFFF, 0x00000000 }
fc_t1.setebit(18) = { 0x00000000, 0x0007FFFF, 0x00000000 }
fc_t1.setebit(19) = { 0x00000000, 0x000FFFFF, 0x00000000 }
fc_t1.setebit(20) = { 0x00000000, 0x001FFFFF, 0x00000000 }
fc_t1.setebit(21) = { 0x00000000, 0x003FFFFF, 0x00000000 }
fc_t1.setebit(22) = { 0x00000000, 0x007FFFFF, 0x00000000 }
fc_t1.setebit(23) = { 0x00000000, 0x00FFFFFF, 0x00000000 }
fc_t1.setebit(24) = { 0x00000000, 0x01FFFFFF, 0x00000000 }
fc_t1.setebit(25) = { 0x00000000, 0x03FFFFFF, 0x00000000 }
fc_t1.setebit(26) = { 0x00000000, 0x07FFFFFF, 0x00000000 }
fc_t1.setebit(27) = { 0x00000000, 0x0FFFFFFF, 0x00000000 }
fc_t1.setebit(28) = { 0x00000000, 0x1FFFFFFF, 0x00000000 }
fc_t1.setebit(29) = { 0x00000000, 0x3FFFFFFF, 0x00000000 }
fc_t1.setebit(30) = { 0x00000000, 0x7FFFFFFF, 0x00000000 }
fc_t1.setebit(31) = { 0x00000000, 0xFFFFFFFF, 0x00000000 }
fc_t1.setebit(32) = { 0x00000000, 0xFFFFFFFF, 0x00000000 }
fc_t1.setbit(-1) = { 0x00000000, 0x00000000, 0x00000000 }
fc_t1.setbit(0) = { 0x00000000, 0x00000000, 0x00000001 }
fc_t1.setbit(1) = { 0x00000000, 0x00000000, 0x00000003 }
fc_t1.setbit(2) = { 0x00000000, 0x00000000, 0x00000007 }
fc_t1.setbit(3) = { 0x00000000, 0x00000000, 0x0000000F }
fc_t1.setbit(4) = { 0x00000000, 0x00000000, 0x0000001F }
fc_t1.setbit(5) = { 0x00000000, 0x00000000, 0x0000003F }
fc_t1.setbit(6) = { 0x00000000, 0x00000000, 0x0000007F }
fc_t1.setbit(7) = { 0x00000000, 0x00000000, 0x000000FF }
fc_t1.setbit(8) = { 0x00000000, 0x00000000, 0x000001FF }
fc_t1.setbit(9) = { 0x00000000, 0x00000000, 0x000003FF }
fc_t1.setbit(10) = { 0x00000000, 0x00000000, 0x000007FF }
fc_t1.setbit(11) = { 0x00000000, 0x00000000, 0x00000FFF }
fc_t1.setbit(12) = { 0x00000000, 0x00000000, 0x00001FFF }
fc_t1.setbit(13) = { 0x00000000, 0x00000000, 0x00003FFF }
fc_t1.setbit(14) = { 0x00000000, 0x00000000, 0x00007FFF }
fc_t1.setbit(15) = { 0x00000000, 0x00000000, 0x0000FFFF }
fc_t1.setbit(16) = { 0x00000000, 0x00000000, 0x0001FFFF }
fc_t1.setbit(17) = { 0x00000000, 0x00000000, 0x0003FFFF }
fc_t1.setbit(18) = { 0x00000000, 0x00000000, 0x0007FFFF }
fc_t1.setbit(19) = { 0x00000000, 0x00000000, 0x000FFFFF }
fc_t1.setbit(20) = { 0x00000000, 0x00000000, 0x001FFFFF }
fc_t1.setbit(21) = { 0x00000000, 0x00000000, 0x003FFFFF }
fc_t1.setbit(22) = { 0x00000000, 0x00000000, 0x007FFFFF }
fc_t1.setbit(23) = { 0x00000000, 0x00000000, 0x00FFFFFF }
fc_t1.setbit(24) = { 0x00000000, 0x00000000, 0x01FFFFFF }
fc_t1.setbit(25) = { 0x00000000, 0x00000000, 0x03FFFFFF }
fc_t1.setbit(26) = { 0x00000000, 0x00000000, 0x07FFFFFF }
fc_t1.setbit(27) = { 0x00000000, 0x00000000, 0x0FFFFFFF }
fc_t1.setbit(28) = { 0x00000000, 0x00000000, 0x1FFFFFFF }
fc_t1.setbit(29) = { 0x00000000, 0x00000000, 0x3FFFFFFF }
fc_t1.setbit(30) = { 0x00000000, 0x00000000, 0x7FFFFFFF }
fc_t1.setbit(31) = { 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t1.setbit(32) = { 0x00000000, 0x00000001, 0xFFFFFFFF }
fc_t1.setbit(33) = { 0x00000000, 0x00000003, 0xFFFFFFFF }
fc_t1.setbit(34) = { 0x00000000, 0x00000007, 0xFFFFFFFF }
fc_t1.setbit(35) = { 0x00000000, 0x0000000F, 0xFFFFFFFF }
fc_t1.setbit(36) = { 0x00000000, 0x0000001F, 0xFFFFFFFF }
fc_t1.setbit(37) = { 0x00000000, 0x0000003F, 0xFFFFFFFF }
fc_t1.setbit(38) = { 0x00000000, 0x0000007F, 0xFFFFFFFF }
fc_t1.setbit(39) = { 0x00000000, 0x000000FF, 0xFFFFFFFF }
fc_t1.setbit(40) = { 0x00000000, 0x000001FF, 0xFFFFFFFF }
fc_t1.setbit(41) = { 0x00000000, 0x000003FF, 0xFFFFFFFF }
fc_t1.setbit(42) = { 0x00000000, 0x000007FF, 0xFFFFFFFF }
fc_t1.setbit(43) = { 0x00000000, 0x00000FFF, 0xFFFFFFFF }
fc_t1.setbit(44) = { 0x00000000, 0x00001FFF, 0xFFFFFFFF }
fc_t1.setbit(45) = { 0x00000000, 0x00003FFF, 0xFFFFFFFF }
fc_t1.setbit(46) = { 0x00000000, 0x00007FFF, 0xFFFFFFFF }
fc_t1.setbit(47) = { 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t1.setbit(48) = { 0x00000000, 0x0001FFFF, 0xFFFFFFFF }
fc_t1.setbit(49) = { 0x00000000, 0x0003FFFF, 0xFFFFFFFF }
fc_t1.setbit(50) = { 0x00000000, 0x0007FFFF, 0xFFFFFFFF }
fc_t1.setbit(51) = { 0x00000000, 0x000FFFFF, 0xFFFFFFFF }
fc_t1.setbit(52) = { 0x00000000, 0x001FFFFF, 0xFFFFFFFF }
fc_t1.setbit(53) = { 0x00000000, 0x003FFFFF, 0xFFFFFFFF }
fc_t1.setbit(54) = { 0x00000000, 0x007FFFFF, 0xFFFFFFFF }
fc_t1.setbit(55) = { 0x00000000, 0x00FFFFFF, 0xFFFFFFFF }
fc_t1.setbit(56) = { 0x00000000, 0x01FFFFFF, 0xFFFFFFFF }
fc_t1.setbit(57) = { 0x00000000, 0x03FFFFFF, 0xFFFFFFFF }
fc_t1.setbit(58) = { 0x00000000, 0x07FFFFFF, 0xFFFFFFFF }
fc_t1.setbit(59) = { 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF }
fc_t1.setbit(60) = { 0x00000000, 0x1FFFFFFF, 0xFFFFFFFF }
fc_t1.setbit(61) = { 0x00000000, 0x3FFFFFFF, 0xFFFFFFFF }
fc_t1.setbit(62) = { 0x00000000, 0x7FFFFFFF, 0xFFFFFFFF }
fc_t1.setbit(63) = { 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t1.setbit(64) = { 0x00000001, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t1.setbit(65) = { 0x00000001, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setmbit(-1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2.setmbit(0) = { 0x00000000, 0x00000000, 0x00000000, 0x00000001 }
fc_t2.setmbit(1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000003 }
fc_t2.setmbit(2) = { 0x00000000, 0x00000000, 0x00000000, 0x00000007 }
fc_t2.setmbit(3) = { 0x00000000, 0x00000000, 0x00000000, 0x0000000F }
fc_t2.setmbit(4) = { 0x00000000, 0x00000000, 0x00000000, 0x0000001F }
fc_t2.setmbit(5) = { 0x00000000, 0x00000000, 0x00000000, 0x0000003F }
fc_t2.setmbit(6) = { 0x00000000, 0x00000000, 0x00000000, 0x0000007F }
fc_t2.setmbit(7) = { 0x00000000, 0x00000000, 0x00000000, 0x000000FF }
fc_t2.setmbit(8) = { 0x00000000, 0x00000000, 0x00000000, 0x000001FF }
fc_t2.setmbit(9) = { 0x00000000, 0x00000000, 0x00000000, 0x000003FF }
fc_t2.setmbit(10) = { 0x00000000, 0x00000000, 0x00000000, 0x000007FF }
fc_t2.setmbit(11) = { 0x00000000, 0x00000000, 0x00000000, 0x00000FFF }
fc_t2.setmbit(12) = { 0x00000000, 0x00000000, 0x00000000, 0x00001FFF }
fc_t2.setmbit(13) = { 0x00000000, 0x00000000, 0x00000000, 0x00003FFF }
fc_t2.setmbit(14) = { 0x00000000, 0x00000000, 0x00000000, 0x00007FFF }
fc_t2.setmbit(15) = { 0x00000000, 0x00000000, 0x00000000, 0x0000FFFF }
fc_t2.setmbit(16) = { 0x00000000, 0x00000000, 0x00000000, 0x0001FFFF }
fc_t2.setmbit(17) = { 0x00000000, 0x00000000, 0x00000000, 0x0003FFFF }
fc_t2.setmbit(18) = { 0x00000000, 0x00000000, 0x00000000, 0x0007FFFF }
fc_t2.setmbit(19) = { 0x00000000, 0x00000000, 0x00000000, 0x000FFFFF }
fc_t2.setmbit(20) = { 0x00000000, 0x00000000, 0x00000000, 0x001FFFFF }
fc_t2.setmbit(21) = { 0x00000000, 0x00000000, 0x00000000, 0x003FFFFF }
fc_t2.setmbit(22) = { 0x00000000, 0x00000000, 0x00000000, 0x007FFFFF }
fc_t2.setmbit(23) = { 0x00000000, 0x00000000, 0x00000000, 0x00FFFFFF }
fc_t2.setmbit(24) = { 0x00000000, 0x00000000, 0x00000000, 0x01FFFFFF }
fc_t2.setmbit(25) = { 0x00000000, 0x00000000, 0x00000000, 0x03FFFFFF }
fc_t2.setmbit(26) = { 0x00000000, 0x00000000, 0x00000000, 0x07FFFFFF }
fc_t2.setmbit(27) = { 0x00000000, 0x00000000, 0x00000000, 0x0FFFFFFF }
fc_t2.setmbit(28) = { 0x00000000, 0x00000000, 0x00000000, 0x1FFFFFFF }
fc_t2.setmbit(29) = { 0x00000000, 0x00000000, 0x00000000, 0x3FFFFFFF }
fc_t2.setmbit(30) = { 0x00000000, 0x00000000, 0x00000000, 0x7FFFFFFF }
fc_t2.setmbit(31) = { 0x00000000, 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t2.setmbit(32) = { 0x00000000, 0x00000000, 0x00000001, 0xFFFFFFFF }
fc_t2.setmbit(33) = { 0x00000000, 0x00000000, 0x00000003, 0xFFFFFFFF }
fc_t2.setmbit(34) = { 0x00000000, 0x00000000, 0x00000007, 0xFFFFFFFF }
fc_t2.setmbit(35) = { 0x00000000, 0x00000000, 0x0000000F, 0xFFFFFFFF }
fc_t2.setmbit(36) = { 0x00000000, 0x00000000, 0x0000001F, 0xFFFFFFFF }
fc_t2.setmbit(37) = { 0x00000000, 0x00000000, 0x0000003F, 0xFFFFFFFF }
fc_t2.setmbit(38) = { 0x00000000, 0x00000000, 0x0000007F, 0xFFFFFFFF }
fc_t2.setmbit(39) = { 0x00000000, 0x00000000, 0x000000FF, 0xFFFFFFFF }
fc_t2.setmbit(40) = { 0x00000000, 0x00000000, 0x000001FF, 0xFFFFFFFF }
fc_t2.setmbit(41) = { 0x00000000, 0x00000000, 0x000003FF, 0xFFFFFFFF }
fc_t2.setmbit(42) = { 0x00000000, 0x00000000, 0x000007FF, 0xFFFFFFFF }
fc_t2.setmbit(43) = { 0x00000000, 0x00000000, 0x00000FFF, 0xFFFFFFFF }
fc_t2.setmbit(44) = { 0x00000000, 0x00000000, 0x00001FFF, 0xFFFFFFFF }
fc_t2.setmbit(45) = { 0x00000000, 0x00000000, 0x00003FFF, 0xFFFFFFFF }
fc_t2.setmbit(46) = { 0x00000000, 0x00000000, 0x00007FFF, 0xFFFFFFFF }
fc_t2.setmbit(47) = { 0x00000000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t2.setmbit(48) = { 0x00000000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t2.setebit(-1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2.setebit(0) = { 0x00000000, 0x00000000, 0x00010000, 0x00000000 }
fc_t2.setebit(1) = { 0x00000000, 0x00000000, 0x00030000, 0x00000000 }
fc_t2.setebit(2) = { 0x00000000, 0x00000000, 0x00070000, 0x00000000 }
fc_t2.setebit(3) = { 0x00000000, 0x00000000, 0x000F0000, 0x00000000 }
fc_t2.setebit(4) = { 0x00000000, 0x00000000, 0x001F0000, 0x00000000 }
fc_t2.setebit(5) = { 0x00000000, 0x00000000, 0x003F0000, 0x00000000 }
fc_t2.setebit(6) = { 0x00000000, 0x00000000, 0x007F0000, 0x00000000 }
fc_t2.setebit(7) = { 0x00000000, 0x00000000, 0x00FF0000, 0x00000000 }
fc_t2.setebit(8) = { 0x00000000, 0x00000000, 0x01FF0000, 0x00000000 }
fc_t2.setebit(9) = { 0x00000000, 0x00000000, 0x03FF0000, 0x00000000 }
fc_t2.setebit(10) = { 0x00000000, 0x00000000, 0x07FF0000, 0x00000000 }
fc_t2.setebit(11) = { 0x00000000, 0x00000000, 0x0FFF0000, 0x00000000 }
fc_t2.setebit(12) = { 0x00000000, 0x00000000, 0x1FFF0000, 0x00000000 }
fc_t2.setebit(13) = { 0x00000000, 0x00000000, 0x3FFF0000, 0x00000000 }
fc_t2.setebit(14) = { 0x00000000, 0x00000000, 0x7FFF0000, 0x00000000 }
fc_t2.setebit(15) = { 0x00000000, 0x00000000, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(16) = { 0x00000000, 0x00000001, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(17) = { 0x00000000, 0x00000003, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(18) = { 0x00000000, 0x00000007, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(19) = { 0x00000000, 0x0000000F, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(20) = { 0x00000000, 0x0000001F, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(21) = { 0x00000000, 0x0000003F, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(22) = { 0x00000000, 0x0000007F, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(23) = { 0x00000000, 0x000000FF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(24) = { 0x00000000, 0x000001FF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(25) = { 0x00000000, 0x000003FF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(26) = { 0x00000000, 0x000007FF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(27) = { 0x00000000, 0x00000FFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(28) = { 0x00000000, 0x00001FFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(29) = { 0x00000000, 0x00003FFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(30) = { 0x00000000, 0x00007FFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(31) = { 0x00000000, 0x0000FFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(32) = { 0x00000000, 0x0001FFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(33) = { 0x00000000, 0x0003FFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(34) = { 0x00000000, 0x0007FFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(35) = { 0x00000000, 0x000FFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(36) = { 0x00000000, 0x001FFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(37) = { 0x00000000, 0x003FFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(38) = { 0x00000000, 0x007FFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(39) = { 0x00000000, 0x00FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(40) = { 0x00000000, 0x01FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(41) = { 0x00000000, 0x03FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(42) = { 0x00000000, 0x07FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(43) = { 0x00000000, 0x0FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(44) = { 0x00000000, 0x1FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(45) = { 0x00000000, 0x3FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(46) = { 0x00000000, 0x7FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(47) = { 0x00000000, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(48) = { 0x00000001, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(49) = { 0x00000003, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(50) = { 0x00000007, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(51) = { 0x0000000F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(52) = { 0x0000001F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(53) = { 0x0000003F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(54) = { 0x0000007F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(55) = { 0x000000FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(56) = { 0x000001FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(57) = { 0x000003FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(58) = { 0x000007FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(59) = { 0x00000FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(60) = { 0x00001FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(61) = { 0x00003FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(62) = { 0x00007FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(63) = { 0x0000FFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(64) = { 0x0001FFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(65) = { 0x0003FFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(66) = { 0x0007FFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(67) = { 0x000FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(68) = { 0x001FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(69) = { 0x003FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setebit(70) = { 0x003FFFFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t2.setbit(-1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2.setbit(0) = { 0x00000000, 0x00000000, 0x00000000, 0x00000001 }
fc_t2.setbit(1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000003 }
fc_t2.setbit(2) = { 0x00000000, 0x00000000, 0x00000000, 0x00000007 }
fc_t2.setbit(3) = { 0x00000000, 0x00000000, 0x00000000, 0x0000000F }
fc_t2.setbit(4) = { 0x00000000, 0x00000000, 0x00000000, 0x0000001F }
fc_t2.setbit(5) = { 0x00000000, 0x00000000, 0x00000000, 0x0000003F }
fc_t2.setbit(6) = { 0x00000000, 0x00000000, 0x00000000, 0x0000007F }
fc_t2.setbit(7) = { 0x00000000, 0x00000000, 0x00000000, 0x000000FF }
fc_t2.setbit(8) = { 0x00000000, 0x00000000, 0x00000000, 0x000001FF }
fc_t2.setbit(9) = { 0x00000000, 0x00000000, 0x00000000, 0x000003FF }
fc_t2.setbit(10) = { 0x00000000, 0x00000000, 0x00000000, 0x000007FF }
fc_t2.setbit(11) = { 0x00000000, 0x00000000, 0x00000000, 0x00000FFF }
fc_t2.setbit(12) = { 0x00000000, 0x00000000, 0x00000000, 0x00001FFF }
fc_t2.setbit(13) = { 0x00000000, 0x00000000, 0x00000000, 0x00003FFF }
fc_t2.setbit(14) = { 0x00000000, 0x00000000, 0x00000000, 0x00007FFF }
fc_t2.setbit(15) = { 0x00000000, 0x00000000, 0x00000000, 0x0000FFFF }
fc_t2.setbit(16) = { 0x00000000, 0x00000000, 0x00000000, 0x0001FFFF }
fc_t2.setbit(17) = { 0x00000000, 0x00000000, 0x00000000, 0x0003FFFF }
fc_t2.setbit(18) = { 0x00000000, 0x00000000, 0x00000000, 0x0007FFFF }
fc_t2.setbit(19) = { 0x00000000, 0x00000000, 0x00000000, 0x000FFFFF }
fc_t2.setbit(20) = { 0x00000000, 0x00000000, 0x00000000, 0x001FFFFF }
fc_t2.setbit(21) = { 0x00000000, 0x00000000, 0x00000000, 0x003FFFFF }
fc_t2.setbit(22) = { 0x00000000, 0x00000000, 0x00000000, 0x007FFFFF }
fc_t2.setbit(23) = { 0x00000000, 0x00000000, 0x00000000, 0x00FFFFFF }
fc_t2.setbit(24) = { 0x00000000, 0x00000000, 0x00000000, 0x01FFFFFF }
fc_t2.setbit(25) = { 0x00000000, 0x00000000, 0x00000000, 0x03FFFFFF }
fc_t2.setbit(26) = { 0x00000000, 0x00000000, 0x00000000, 0x07FFFFFF }
fc_t2.setbit(27) = { 0x00000000, 0x00000000, 0x00000000, 0x0FFFFFFF }
fc_t2.setbit(28) = { 0x00000000, 0x00000000, 0x00000000, 0x1FFFFFFF }
fc_t2.setbit(29) = { 0x00000000, 0x00000000, 0x00000000, 0x3FFFFFFF }
fc_t2.setbit(30) = { 0x00000000, 0x00000000, 0x00000000, 0x7FFFFFFF }
fc_t2.setbit(31) = { 0x00000000, 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t2.setbit(32) = { 0x00000000, 0x00000000, 0x00000001, 0xFFFFFFFF }
fc_t2.setbit(33) = { 0x00000000, 0x00000000, 0x00000003, 0xFFFFFFFF }
fc_t2.setbit(34) = { 0x00000000, 0x00000000, 0x00000007, 0xFFFFFFFF }
fc_t2.setbit(35) = { 0x00000000, 0x00000000, 0x0000000F, 0xFFFFFFFF }
fc_t2.setbit(36) = { 0x00000000, 0x00000000, 0x0000001F, 0xFFFFFFFF }
fc_t2.setbit(37) = { 0x00000000, 0x00000000, 0x0000003F, 0xFFFFFFFF }
fc_t2.setbit(38) = { 0x00000000, 0x00000000, 0x0000007F, 0xFFFFFFFF }
fc_t2.setbit(39) = { 0x00000000, 0x00000000, 0x000000FF, 0xFFFFFFFF }
fc_t2.setbit(40) = { 0x00000000, 0x00000000, 0x000001FF, 0xFFFFFFFF }
fc_t2.setbit(41) = { 0x00000000, 0x00000000, 0x000003FF, 0xFFFFFFFF }
fc_t2.setbit(42) = { 0x00000000, 0x00000000, 0x000007FF, 0xFFFFFFFF }
fc_t2.setbit(43) = { 0x00000000, 0x00000000, 0x00000FFF, 0xFFFFFFFF }
fc_t2.setbit(44) = { 0x00000000, 0x00000000, 0x00001FFF, 0xFFFFFFFF }
fc_t2.setbit(45) = { 0x00000000, 0x00000000, 0x00003FFF, 0xFFFFFFFF }
fc_t2.setbit(46) = { 0x00000000, 0x00000000, 0x00007FFF, 0xFFFFFFFF }
fc_t2.setbit(47) = { 0x00000000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t2.setbit(48) = { 0x00000000, 0x00000000, 0x0001FFFF, 0xFFFFFFFF }
fc_t2.setbit(49) = { 0x00000000, 0x00000000, 0x0003FFFF, 0xFFFFFFFF }
fc_t2.setbit(50) = { 0x00000000, 0x00000000, 0x0007FFFF, 0xFFFFFFFF }
fc_t2.setbit(51) = { 0x00000000, 0x00000000, 0x000FFFFF, 0xFFFFFFFF }
fc_t2.setbit(52) = { 0x00000000, 0x00000000, 0x001FFFFF, 0xFFFFFFFF }
fc_t2.setbit(53) = { 0x00000000, 0x00000000, 0x003FFFFF, 0xFFFFFFFF }
fc_t2.setbit(54) = { 0x00000000, 0x00000000, 0x007FFFFF, 0xFFFFFFFF }
fc_t2.setbit(55) = { 0x00000000, 0x00000000, 0x00FFFFFF, 0xFFFFFFFF }
fc_t2.setbit(56) = { 0x00000000, 0x00000000, 0x01FFFFFF, 0xFFFFFFFF }
fc_t2.setbit(57) = { 0x00000000, 0x00000000, 0x03FFFFFF, 0xFFFFFFFF }
fc_t2.setbit(58) = { 0x00000000, 0x00000000, 0x07FFFFFF, 0xFFFFFFFF }
fc_t2.setbit(59) = { 0x00000000, 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(60) = { 0x00000000, 0x00000000, 0x1FFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(61) = { 0x00000000, 0x00000000, 0x3FFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(62) = { 0x00000000, 0x00000000, 0x7FFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(63) = { 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(64) = { 0x00000000, 0x00000001, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(65) = { 0x00000000, 0x00000003, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(66) = { 0x00000000, 0x00000007, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(67) = { 0x00000000, 0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(68) = { 0x00000000, 0x0000001F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(69) = { 0x00000000, 0x0000003F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(70) = { 0x00000000, 0x0000007F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(71) = { 0x00000000, 0x000000FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(72) = { 0x00000000, 0x000001FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(73) = { 0x00000000, 0x000003FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(74) = { 0x00000000, 0x000007FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(75) = { 0x00000000, 0x00000FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(76) = { 0x00000000, 0x00001FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(77) = { 0x00000000, 0x00003FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(78) = { 0x00000000, 0x00007FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(79) = { 0x00000000, 0x0000FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(80) = { 0x00000000, 0x0001FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(81) = { 0x00000000, 0x0003FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(82) = { 0x00000000, 0x0007FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(83) = { 0x00000000, 0x000FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(84) = { 0x00000000, 0x001FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(85) = { 0x00000000, 0x003FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(86) = { 0x00000000, 0x007FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(87) = { 0x00000000, 0x00FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(88) = { 0x00000000, 0x01FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(89) = { 0x00000000, 0x03FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(90) = { 0x00000000, 0x07FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(91) = { 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(92) = { 0x00000000, 0x1FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(93) = { 0x00000000, 0x3FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(94) = { 0x00000000, 0x7FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(95) = { 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(96) = { 0x00000001, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(97) = { 0x00000003, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(98) = { 0x00000007, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(99) = { 0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(100) = { 0x0000001F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(101) = { 0x0000003F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(102) = { 0x0000007F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(103) = { 0x000000FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(104) = { 0x000001FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(105) = { 0x000003FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(106) = { 0x000007FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(107) = { 0x00000FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(108) = { 0x00001FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(109) = { 0x00003FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(110) = { 0x00007FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(111) = { 0x0000FFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(112) = { 0x0001FFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(113) = { 0x0003FFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(114) = { 0x0007FFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(115) = { 0x000FFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(116) = { 0x001FFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(117) = { 0x003FFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(118) = { 0x007FFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t2.setbit(119) = { 0x007FFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setmbit(-1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3.setmbit(0) = { 0x00000000, 0x00000000, 0x00000000, 0x00000001 }
fc_t3.setmbit(1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000003 }
fc_t3.setmbit(2) = { 0x00000000, 0x00000000, 0x00000000, 0x00000007 }
fc_t3.setmbit(3) = { 0x00000000, 0x00000000, 0x00000000, 0x0000000F }
fc_t3.setmbit(4) = { 0x00000000, 0x00000000, 0x00000000, 0x0000001F }
fc_t3.setmbit(5) = { 0x00000000, 0x00000000, 0x00000000, 0x0000003F }
fc_t3.setmbit(6) = { 0x00000000, 0x00000000, 0x00000000, 0x0000007F }
fc_t3.setmbit(7) = { 0x00000000, 0x00000000, 0x00000000, 0x000000FF }
fc_t3.setmbit(8) = { 0x00000000, 0x00000000, 0x00000000, 0x000001FF }
fc_t3.setmbit(9) = { 0x00000000, 0x00000000, 0x00000000, 0x000003FF }
fc_t3.setmbit(10) = { 0x00000000, 0x00000000, 0x00000000, 0x000007FF }
fc_t3.setmbit(11) = { 0x00000000, 0x00000000, 0x00000000, 0x00000FFF }
fc_t3.setmbit(12) = { 0x00000000, 0x00000000, 0x00000000, 0x00001FFF }
fc_t3.setmbit(13) = { 0x00000000, 0x00000000, 0x00000000, 0x00003FFF }
fc_t3.setmbit(14) = { 0x00000000, 0x00000000, 0x00000000, 0x00007FFF }
fc_t3.setmbit(15) = { 0x00000000, 0x00000000, 0x00000000, 0x0000FFFF }
fc_t3.setmbit(16) = { 0x00000000, 0x00000000, 0x00000000, 0x0001FFFF }
fc_t3.setmbit(17) = { 0x00000000, 0x00000000, 0x00000000, 0x0003FFFF }
fc_t3.setmbit(18) = { 0x00000000, 0x00000000, 0x00000000, 0x0007FFFF }
fc_t3.setmbit(19) = { 0x00000000, 0x00000000, 0x00000000, 0x000FFFFF }
fc_t3.setmbit(20) = { 0x00000000, 0x00000000, 0x00000000, 0x001FFFFF }
fc_t3.setmbit(21) = { 0x00000000, 0x00000000, 0x00000000, 0x003FFFFF }
fc_t3.setmbit(22) = { 0x00000000, 0x00000000, 0x00000000, 0x007FFFFF }
fc_t3.setmbit(23) = { 0x00000000, 0x00000000, 0x00000000, 0x00FFFFFF }
fc_t3.setmbit(24) = { 0x00000000, 0x00000000, 0x00000000, 0x01FFFFFF }
fc_t3.setmbit(25) = { 0x00000000, 0x00000000, 0x00000000, 0x03FFFFFF }
fc_t3.setmbit(26) = { 0x00000000, 0x00000000, 0x00000000, 0x07FFFFFF }
fc_t3.setmbit(27) = { 0x00000000, 0x00000000, 0x00000000, 0x0FFFFFFF }
fc_t3.setmbit(28) = { 0x00000000, 0x00000000, 0x00000000, 0x1FFFFFFF }
fc_t3.setmbit(29) = { 0x00000000, 0x00000000, 0x00000000, 0x3FFFFFFF }
fc_t3.setmbit(30) = { 0x00000000, 0x00000000, 0x00000000, 0x7FFFFFFF }
fc_t3.setmbit(31) = { 0x00000000, 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t3.setmbit(32) = { 0x00000000, 0x00000000, 0x00000001, 0xFFFFFFFF }
fc_t3.setmbit(33) = { 0x00000000, 0x00000000, 0x00000003, 0xFFFFFFFF }
fc_t3.setmbit(34) = { 0x00000000, 0x00000000, 0x00000007, 0xFFFFFFFF }
fc_t3.setmbit(35) = { 0x00000000, 0x00000000, 0x0000000F, 0xFFFFFFFF }
fc_t3.setmbit(36) = { 0x00000000, 0x00000000, 0x0000001F, 0xFFFFFFFF }
fc_t3.setmbit(37) = { 0x00000000, 0x00000000, 0x0000003F, 0xFFFFFFFF }
fc_t3.setmbit(38) = { 0x00000000, 0x00000000, 0x0000007F, 0xFFFFFFFF }
fc_t3.setmbit(39) = { 0x00000000, 0x00000000, 0x000000FF, 0xFFFFFFFF }
fc_t3.setmbit(40) = { 0x00000000, 0x00000000, 0x000001FF, 0xFFFFFFFF }
fc_t3.setmbit(41) = { 0x00000000, 0x00000000, 0x000003FF, 0xFFFFFFFF }
fc_t3.setmbit(42) = { 0x00000000, 0x00000000, 0x000007FF, 0xFFFFFFFF }
fc_t3.setmbit(43) = { 0x00000000, 0x00000000, 0x00000FFF, 0xFFFFFFFF }
fc_t3.setmbit(44) = { 0x00000000, 0x00000000, 0x00001FFF, 0xFFFFFFFF }
fc_t3.setmbit(45) = { 0x00000000, 0x00000000, 0x00003FFF, 0xFFFFFFFF }
fc_t3.setmbit(46) = { 0x00000000, 0x00000000, 0x00007FFF, 0xFFFFFFFF }
fc_t3.setmbit(47) = { 0x00000000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t3.setmbit(48) = { 0x00000000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t3.setebit(-1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3.setebit(0) = { 0x00000000, 0x00000000, 0x00010000, 0x00000000 }
fc_t3.setebit(1) = { 0x00000000, 0x00000000, 0x00030000, 0x00000000 }
fc_t3.setebit(2) = { 0x00000000, 0x00000000, 0x00070000, 0x00000000 }
fc_t3.setebit(3) = { 0x00000000, 0x00000000, 0x000F0000, 0x00000000 }
fc_t3.setebit(4) = { 0x00000000, 0x00000000, 0x001F0000, 0x00000000 }
fc_t3.setebit(5) = { 0x00000000, 0x00000000, 0x003F0000, 0x00000000 }
fc_t3.setebit(6) = { 0x00000000, 0x00000000, 0x007F0000, 0x00000000 }
fc_t3.setebit(7) = { 0x00000000, 0x00000000, 0x00FF0000, 0x00000000 }
fc_t3.setebit(8) = { 0x00000000, 0x00000000, 0x01FF0000, 0x00000000 }
fc_t3.setebit(9) = { 0x00000000, 0x00000000, 0x03FF0000, 0x00000000 }
fc_t3.setebit(10) = { 0x00000000, 0x00000000, 0x07FF0000, 0x00000000 }
fc_t3.setebit(11) = { 0x00000000, 0x00000000, 0x0FFF0000, 0x00000000 }
fc_t3.setebit(12) = { 0x00000000, 0x00000000, 0x1FFF0000, 0x00000000 }
fc_t3.setebit(13) = { 0x00000000, 0x00000000, 0x3FFF0000, 0x00000000 }
fc_t3.setebit(14) = { 0x00000000, 0x00000000, 0x7FFF0000, 0x00000000 }
fc_t3.setebit(15) = { 0x00000000, 0x00000000, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(16) = { 0x00000000, 0x00000001, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(17) = { 0x00000000, 0x00000003, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(18) = { 0x00000000, 0x00000007, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(19) = { 0x00000000, 0x0000000F, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(20) = { 0x00000000, 0x0000001F, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(21) = { 0x00000000, 0x0000003F, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(22) = { 0x00000000, 0x0000007F, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(23) = { 0x00000000, 0x000000FF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(24) = { 0x00000000, 0x000001FF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(25) = { 0x00000000, 0x000003FF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(26) = { 0x00000000, 0x000007FF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(27) = { 0x00000000, 0x00000FFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(28) = { 0x00000000, 0x00001FFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(29) = { 0x00000000, 0x00003FFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(30) = { 0x00000000, 0x00007FFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(31) = { 0x00000000, 0x0000FFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(32) = { 0x00000000, 0x0001FFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(33) = { 0x00000000, 0x0003FFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(34) = { 0x00000000, 0x0007FFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(35) = { 0x00000000, 0x000FFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(36) = { 0x00000000, 0x001FFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(37) = { 0x00000000, 0x003FFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(38) = { 0x00000000, 0x007FFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(39) = { 0x00000000, 0x00FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(40) = { 0x00000000, 0x01FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(41) = { 0x00000000, 0x03FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(42) = { 0x00000000, 0x07FFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(43) = { 0x00000000, 0x0FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(44) = { 0x00000000, 0x1FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(45) = { 0x00000000, 0x3FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(46) = { 0x00000000, 0x7FFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(47) = { 0x00000000, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(48) = { 0x00000001, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(49) = { 0x00000003, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(50) = { 0x00000007, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(51) = { 0x0000000F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(52) = { 0x0000001F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(53) = { 0x0000003F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(54) = { 0x0000007F, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(55) = { 0x000000FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(56) = { 0x000001FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(57) = { 0x000003FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(58) = { 0x000007FF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(59) = { 0x00000FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setebit(60) = { 0x00000FFF, 0xFFFFFFFF, 0xFFFF0000, 0x00000000 }
fc_t3.setbit(-1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3.setbit(0) = { 0x00000000, 0x00000000, 0x00000000, 0x00000001 }
fc_t3.setbit(1) = { 0x00000000, 0x00000000, 0x00000000, 0x00000003 }
fc_t3.setbit(2) = { 0x00000000, 0x00000000, 0x00000000, 0x00000007 }
fc_t3.setbit(3) = { 0x00000000, 0x00000000, 0x00000000, 0x0000000F }
fc_t3.setbit(4) = { 0x00000000, 0x00000000, 0x00000000, 0x0000001F }
fc_t3.setbit(5) = { 0x00000000, 0x00000000, 0x00000000, 0x0000003F }
fc_t3.setbit(6) = { 0x00000000, 0x00000000, 0x00000000, 0x0000007F }
fc_t3.setbit(7) = { 0x00000000, 0x00000000, 0x00000000, 0x000000FF }
fc_t3.setbit(8) = { 0x00000000, 0x00000000, 0x00000000, 0x000001FF }
fc_t3.setbit(9) = { 0x00000000, 0x00000000, 0x00000000, 0x000003FF }
fc_t3.setbit(10) = { 0x00000000, 0x00000000, 0x00000000, 0x000007FF }
fc_t3.setbit(11) = { 0x00000000, 0x00000000, 0x00000000, 0x00000FFF }
fc_t3.setbit(12) = { 0x00000000, 0x00000000, 0x00000000, 0x00001FFF }
fc_t3.setbit(13) = { 0x00000000, 0x00000000, 0x00000000, 0x00003FFF }
fc_t3.setbit(14) = { 0x00000000, 0x00000000, 0x00000000, 0x00007FFF }
fc_t3.setbit(15) = { 0x00000000, 0x00000000, 0x00000000, 0x0000FFFF }
fc_t3.setbit(16) = { 0x00000000, 0x00000000, 0x00000000, 0x0001FFFF }
fc_t3.setbit(17) = { 0x00000000, 0x00000000, 0x00000000, 0x0003FFFF }
fc_t3.setbit(18) = { 0x00000000, 0x00000000, 0x00000000, 0x0007FFFF }
fc_t3.setbit(19) = { 0x00000000, 0x00000000, 0x00000000, 0x000FFFFF }
fc_t3.setbit(20) = { 0x00000000, 0x00000000, 0x00000000, 0x001FFFFF }
fc_t3.setbit(21) = { 0x00000000, 0x00000000, 0x00000000, 0x003FFFFF }
fc_t3.setbit(22) = { 0x00000000, 0x00000000, 0x00000000, 0x007FFFFF }
fc_t3.setbit(23) = { 0x00000000, 0x00000000, 0x00000000, 0x00FFFFFF }
fc_t3.setbit(24) = { 0x00000000, 0x00000000, 0x00000000, 0x01FFFFFF }
fc_t3.setbit(25) = { 0x00000000, 0x00000000, 0x00000000, 0x03FFFFFF }
fc_t3.setbit(26) = { 0x00000000, 0x00000000, 0x00000000, 0x07FFFFFF }
fc_t3.setbit(27) = { 0x00000000, 0x00000000, 0x00000000, 0x0FFFFFFF }
fc_t3.setbit(28) = { 0x00000000, 0x00000000, 0x00000000, 0x1FFFFFFF }
fc_t3.setbit(29) = { 0x00000000, 0x00000000, 0x00000000, 0x3FFFFFFF }
fc_t3.setbit(30) = { 0x00000000, 0x00000000, 0x00000000, 0x7FFFFFFF }
fc_t3.setbit(31) = { 0x00000000, 0x00000000, 0x00000000, 0xFFFFFFFF }
fc_t3.setbit(32) = { 0x00000000, 0x00000000, 0x00000001, 0xFFFFFFFF }
fc_t3.setbit(33) = { 0x00000000, 0x00000000, 0x00000003, 0xFFFFFFFF }
fc_t3.setbit(34) = { 0x00000000, 0x00000000, 0x00000007, 0xFFFFFFFF }
fc_t3.setbit(35) = { 0x00000000, 0x00000000, 0x0000000F, 0xFFFFFFFF }
fc_t3.setbit(36) = { 0x00000000, 0x00000000, 0x0000001F, 0xFFFFFFFF }
fc_t3.setbit(37) = { 0x00000000, 0x00000000, 0x0000003F, 0xFFFFFFFF }
fc_t3.setbit(38) = { 0x00000000, 0x00000000, 0x0000007F, 0xFFFFFFFF }
fc_t3.setbit(39) = { 0x00000000, 0x00000000, 0x000000FF, 0xFFFFFFFF }
fc_t3.setbit(40) = { 0x00000000, 0x00000000, 0x000001FF, 0xFFFFFFFF }
fc_t3.setbit(41) = { 0x00000000, 0x00000000, 0x000003FF, 0xFFFFFFFF }
fc_t3.setbit(42) = { 0x00000000, 0x00000000, 0x000007FF, 0xFFFFFFFF }
fc_t3.setbit(43) = { 0x00000000, 0x00000000, 0x00000FFF, 0xFFFFFFFF }
fc_t3.setbit(44) = { 0x00000000, 0x00000000, 0x00001FFF, 0xFFFFFFFF }
fc_t3.setbit(45) = { 0x00000000, 0x00000000, 0x00003FFF, 0xFFFFFFFF }
fc_t3.setbit(46) = { 0x00000000, 0x00000000, 0x00007FFF, 0xFFFFFFFF }
fc_t3.setbit(47) = { 0x00000000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF }
fc_t3.setbit(48) = { 0x00000000, 0x00000000, 0x0001FFFF, 0xFFFFFFFF }
fc_t3.setbit(49) = { 0x00000000, 0x00000000, 0x0003FFFF, 0xFFFFFFFF }
fc_t3.setbit(50) = { 0x00000000, 0x00000000, 0x0007FFFF, 0xFFFFFFFF }
fc_t3.setbit(51) = { 0x00000000, 0x00000000, 0x000FFFFF, 0xFFFFFFFF }
fc_t3.setbit(52) = { 0x00000000, 0x00000000, 0x001FFFFF, 0xFFFFFFFF }
fc_t3.setbit(53) = { 0x00000000, 0x00000000, 0x003FFFFF, 0xFFFFFFFF }
fc_t3.setbit(54) = { 0x00000000, 0x00000000, 0x007FFFFF, 0xFFFFFFFF }
fc_t3.setbit(55) = { 0x00000000, 0x00000000, 0x00FFFFFF, 0xFFFFFFFF }
fc_t3.setbit(56) = { 0x00000000, 0x00000000, 0x01FFFFFF, 0xFFFFFFFF }
fc_t3.setbit(57) = { 0x00000000, 0x00000000, 0x03FFFFFF, 0xFFFFFFFF }
fc_t3.setbit(58) = { 0x00000000, 0x00000000, 0x07FFFFFF, 0xFFFFFFFF }
fc_t3.setbit(59) = { 0x00000000, 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(60) = { 0x00000000, 0x00000000, 0x1FFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(61) = { 0x00000000, 0x00000000, 0x3FFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(62) = { 0x00000000, 0x00000000, 0x7FFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(63) = { 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(64) = { 0x00000000, 0x00000001, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(65) = { 0x00000000, 0x00000003, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(66) = { 0x00000000, 0x00000007, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(67) = { 0x00000000, 0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(68) = { 0x00000000, 0x0000001F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(69) = { 0x00000000, 0x0000003F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(70) = { 0x00000000, 0x0000007F, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(71) = { 0x00000000, 0x000000FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(72) = { 0x00000000, 0x000001FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(73) = { 0x00000000, 0x000003FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(74) = { 0x00000000, 0x000007FF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(75) = { 0x00000000, 0x00000FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(76) = { 0x00000000, 0x00001FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(77) = { 0x00000000, 0x00003FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(78) = { 0x00000000, 0x00007FFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(79) = { 0x00000000, 0x0000FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(80) = { 0x00000000, 0x0001FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(81) = { 0x00000000, 0x0003FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(82) = { 0x00000000, 0x0007FFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(83) = { 0x00000000, 0x000FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(84) = { 0x00000000, 0x001FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(85) = { 0x00000000, 0x003FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(86) = { 0x00000000, 0x007FFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(87) = { 0x00000000, 0x00FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(88) = { 0x00000000, 0x01FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(89) = { 0x00000000, 0x03FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(90) = { 0x00000000, 0x07FFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(91) = { 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(92) = { 0x00000000, 0x1FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(93) = { 0x00000000, 0x3FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(94) = { 0x00000000, 0x7FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(95) = { 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(96) = { 0x00000001, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(97) = { 0x00000003, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(98) = { 0x00000007, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(99) = { 0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(100) = { 0x0000001F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(101) = { 0x0000003F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(102) = { 0x0000007F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(103) = { 0x000000FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(104) = { 0x000001FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(105) = { 0x000003FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(106) = { 0x000007FF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(107) = { 0x00000FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(108) = { 0x00001FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
fc_t3.setbit(109) = { 0x00001FFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF }
f1 = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
f16 = { 0x40300000, 0x00000000 } (  1.6000000000000000E+01)
f1.incexp(4) = { 0x40300000, 0x00000000 } (  1.6000000000000000E+01)
f16.decexp(4) = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fc, fx = { 0xDEADBEEF, 0x5555AAAA }
fc, fx.mlshift(0) = (out = 0x00000000), { 0xDEADBEEF, 0x5555AAAA }
fc, fx.mlshift(1) = (out = 0x00000001), { 0xDEAB7DDE, 0xAAAB5554 }
fc, fx.mlshift(2) = (out = 0x00000003), { 0xDEA6FBBD, 0x5556AAA8 }
fc, fx.mlshift(3) = (out = 0x00000006), { 0xDEADF77A, 0xAAAD5550 }
fc, fx.mlshift(4) = (out = 0x0000000D), { 0xDEABEEF5, 0x555AAAA0 }
fc, fx.mlshift(5) = (out = 0x0000001B), { 0xDEA7DDEA, 0xAAB55540 }
fc, fx.mlshift(6) = (out = 0x00000036), { 0xDEAFBBD5, 0x556AAA80 }
fc, fx.mlshift(7) = (out = 0x0000006D), { 0xDEAF77AA, 0xAAD55500 }
fc, fx.mlshift(8) = (out = 0x000000DB), { 0xDEAEEF55, 0x55AAAA00 }
fc, fx.mlshift(9) = (out = 0x000001B7), { 0xDEADDEAA, 0xAB555400 }
fc, fx.mlshift(10) = (out = 0x0000036F), { 0xDEABBD55, 0x56AAA800 }
fc, fx.mlshift(11) = (out = 0x000006DF), { 0xDEA77AAA, 0xAD555000 }
fc, fx.mlshift(12) = (out = 0x00000DBE), { 0xDEAEF555, 0x5AAAA000 }
fc, fx.mlshift(13) = (out = 0x00001B7D), { 0xDEADEAAA, 0xB5554000 }
fc, fx.mlshift(14) = (out = 0x000036FB), { 0xDEABD555, 0x6AAA8000 }
fc, fx.mlshift(15) = (out = 0x00006DF7), { 0xDEA7AAAA, 0xD5550000 }
fc, fx.mlshift(16) = (out = 0x0000DBEE), { 0xDEAF5555, 0xAAAA0000 }
fc, fx.mlshift(17) = (out = 0x0001B7DD), { 0xDEAEAAAB, 0x55540000 }
fc, fx.mlshift(18) = (out = 0x00036FBB), { 0xDEAD5556, 0xAAA80000 }
fc, fx.mlshift(19) = (out = 0x0006DF77), { 0xDEAAAAAD, 0x55500000 }
fc, fx.mlshift(20) = (out = 0x000DBEEF), { 0xDEA5555A, 0xAAA00000 }
fc, fx.mlshift(21) = (out = 0x001B7DDE), { 0xDEAAAAB5, 0x55400000 }
fc, fx.mlshift(22) = (out = 0x0036FBBD), { 0xDEA5556A, 0xAA800000 }
fc, fx.mlshift(23) = (out = 0x006DF77A), { 0xDEAAAAD5, 0x55000000 }
fc, fx.mlshift(24) = (out = 0x00DBEEF5), { 0xDEA555AA, 0xAA000000 }
fc, fx.mlshift(25) = (out = 0x01B7DDEA), { 0xDEAAAB55, 0x54000000 }
fc, fx.mlshift(26) = (out = 0x036FBBD5), { 0xDEA556AA, 0xA8000000 }
fc, fx.mlshift(27) = (out = 0x06DF77AA), { 0xDEAAAD55, 0x50000000 }
fc, fx.mlshift(28) = (out = 0x0DBEEF55), { 0xDEA55AAA, 0xA0000000 }
fc, fx.mlshift(29) = (out = 0x1B7DDEAA), { 0xDEAAB555, 0x40000000 }
fc, fx.mlshift(30) = (out = 0x36FBBD55), { 0xDEA56AAA, 0x80000000 }
fc, fx.mlshift(31) = (out = 0x6DF77AAA), { 0xDEAAD555, 0x00000000 }
fc, fx.mlshift(32) = (out = 0xDBEEF555), { 0xDEA5AAAA, 0x00000000 }
fc, fx.mlshift(33) = (out = 0xB7DDEAAA), { 0xDEAB5554, 0x00000000 }
fc, fx.mlshift(34) = (out = 0xEFBBD555), { 0xDEA6AAA8, 0x00000000 }
fc, fx.mlshift(35) = (out = 0xDF77AAAA), { 0xDEAD5550, 0x00000000 }
fc, fx.mlshift(36) = (out = 0xBEEF5555), { 0xDEAAAAA0, 0x00000000 }
fc, fx.mlshift(37) = (out = 0xFDDEAAAB), { 0xDEA55540, 0x00000000 }
fc, fx.mlshift(38) = (out = 0xFBBD5556), { 0xDEAAAA80, 0x00000000 }
fc, fx.mlshift(39) = (out = 0xF77AAAAD), { 0xDEA55500, 0x00000000 }
fc, fx.mlshift(40) = (out = 0xEEF5555A), { 0xDEAAAA00, 0x00000000 }
fc, fx.mlshift(41) = (out = 0xDDEAAAB5), { 0xDEA55400, 0x00000000 }
fc, fx.mlshift(42) = (out = 0xBBD5556A), { 0xDEAAA800, 0x00000000 }
fc, fx.mlshift(43) = (out = 0xF7AAAAD5), { 0xDEA55000, 0x00000000 }
fc, fx.mlshift(44) = (out = 0xEF5555AA), { 0xDEAAA000, 0x00000000 }
fc, fx.mlshift(45) = (out = 0xDEAAAB55), { 0xDEA54000, 0x00000000 }
fc, fx.mlshift(46) = (out = 0xBD5556AA), { 0xDEAA8000, 0x00000000 }
fc, fx.mlshift(47) = (out = 0xFAAAAD55), { 0xDEA50000, 0x00000000 }
fc, fx.mlshift(48) = (out = 0xF5555AAA), { 0xDEAA0000, 0x00000000 }
fc, fx.mlshift(49) = (out = 0xEAAAB555), { 0xDEA40000, 0x00000000 }
fc, fx.mlshift(50) = (out = 0xD5556AAA), { 0xDEA80000, 0x00000000 }
fc, fx.mlshift(51) = (out = 0xAAAAD555), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(52) = (out = 0xD555AAAA), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(53) = (out = 0xAAAB5554), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(54) = (out = 0xD556AAA8), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(55) = (out = 0xAAAD5550), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(56) = (out = 0xD55AAAA0), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(57) = (out = 0xAAB55540), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(58) = (out = 0xD56AAA80), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(59) = (out = 0xAAD55500), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(60) = (out = 0xD5AAAA00), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(61) = (out = 0xAB555400), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(62) = (out = 0xD6AAA800), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(63) = (out = 0xAD555000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(64) = (out = 0xDAAAA000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(65) = (out = 0xB5554000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(66) = (out = 0xEAAA8000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(67) = (out = 0xD5550000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(68) = (out = 0xAAAA0000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(69) = (out = 0xD5540000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(70) = (out = 0xAAA80000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(71) = (out = 0xD5500000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(72) = (out = 0xAAA00000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(73) = (out = 0xD5400000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(74) = (out = 0xAA800000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(75) = (out = 0xD5000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(76) = (out = 0xAA000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(77) = (out = 0xD4000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(78) = (out = 0xA8000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(79) = (out = 0xD0000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(80) = (out = 0xA0000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(81) = (out = 0xC0000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(82) = (out = 0x80000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(83) = (out = 0x80000000), { 0xDEA00000, 0x00000000 }
fc, fx.mlshift(84) = (out = 0x80000000), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(0) = (out = 0x00000000), { 0xDEADBEEF, 0x5555AAAA }
fc, fx.mrshift(1) = (out = 0x00000000), { 0xDEA6DF77, 0xAAAAD555 }
fc, fx.mrshift(2) = (out = 0x80000000), { 0xDEA36FBB, 0xD5556AAA }
fc, fx.mrshift(3) = (out = 0x40000000), { 0xDEA1B7DD, 0xEAAAB555 }
fc, fx.mrshift(4) = (out = 0xA0000000), { 0xDEA0DBEE, 0xF5555AAA }
fc, fx.mrshift(5) = (out = 0x50000000), { 0xDEA06DF7, 0x7AAAAD55 }
fc, fx.mrshift(6) = (out = 0xA8000000), { 0xDEA036FB, 0xBD5556AA }
fc, fx.mrshift(7) = (out = 0x54000000), { 0xDEA01B7D, 0xDEAAAB55 }
fc, fx.mrshift(8) = (out = 0xAA000000), { 0xDEA00DBE, 0xEF5555AA }
fc, fx.mrshift(9) = (out = 0x55000000), { 0xDEA006DF, 0x77AAAAD5 }
fc, fx.mrshift(10) = (out = 0xAA800000), { 0xDEA0036F, 0xBBD5556A }
fc, fx.mrshift(11) = (out = 0x55400000), { 0xDEA001B7, 0xDDEAAAB5 }
fc, fx.mrshift(12) = (out = 0xAAA00000), { 0xDEA000DB, 0xEEF5555A }
fc, fx.mrshift(13) = (out = 0x55500000), { 0xDEA0006D, 0xF77AAAAD }
fc, fx.mrshift(14) = (out = 0xAAA80000), { 0xDEA00036, 0xFBBD5556 }
fc, fx.mrshift(15) = (out = 0x55540000), { 0xDEA0001B, 0x7DDEAAAB }
fc, fx.mrshift(16) = (out = 0xAAAA0000), { 0xDEA0000D, 0xBEEF5555 }
fc, fx.mrshift(17) = (out = 0xD5550000), { 0xDEA00006, 0xDF77AAAA }
fc, fx.mrshift(18) = (out = 0x6AAA8000), { 0xDEA00003, 0x6FBBD555 }
fc, fx.mrshift(19) = (out = 0xB5554000), { 0xDEA00001, 0xB7DDEAAA }
fc, fx.mrshift(20) = (out = 0x5AAAA000), { 0xDEA00000, 0xDBEEF555 }
fc, fx.mrshift(21) = (out = 0xAD555000), { 0xDEA00000, 0x6DF77AAA }
fc, fx.mrshift(22) = (out = 0x56AAA800), { 0xDEA00000, 0x36FBBD55 }
fc, fx.mrshift(23) = (out = 0xAB555400), { 0xDEA00000, 0x1B7DDEAA }
fc, fx.mrshift(24) = (out = 0x55AAAA00), { 0xDEA00000, 0x0DBEEF55 }
fc, fx.mrshift(25) = (out = 0xAAD55500), { 0xDEA00000, 0x06DF77AA }
fc, fx.mrshift(26) = (out = 0x556AAA80), { 0xDEA00000, 0x036FBBD5 }
fc, fx.mrshift(27) = (out = 0xAAB55540), { 0xDEA00000, 0x01B7DDEA }
fc, fx.mrshift(28) = (out = 0x555AAAA0), { 0xDEA00000, 0x00DBEEF5 }
fc, fx.mrshift(29) = (out = 0xAAAD5550), { 0xDEA00000, 0x006DF77A }
fc, fx.mrshift(30) = (out = 0x5556AAA8), { 0xDEA00000, 0x0036FBBD }
fc, fx.mrshift(31) = (out = 0xAAAB5554), { 0xDEA00000, 0x001B7DDE }
fc, fx.mrshift(32) = (out = 0x5555AAAA), { 0xDEA00000, 0x000DBEEF }
fc, fx.mrshift(33) = (out = 0xAAAAD555), { 0xDEA00000, 0x0006DF77 }
fc, fx.mrshift(34) = (out = 0xD5556AAB), { 0xDEA00000, 0x00036FBB }
fc, fx.mrshift(35) = (out = 0xEAAAB555), { 0xDEA00000, 0x0001B7DD }
fc, fx.mrshift(36) = (out = 0xF5555AAB), { 0xDEA00000, 0x0000DBEE }
fc, fx.mrshift(37) = (out = 0x7AAAAD55), { 0xDEA00000, 0x00006DF7 }
fc, fx.mrshift(38) = (out = 0xBD5556AB), { 0xDEA00000, 0x000036FB }
fc, fx.mrshift(39) = (out = 0xDEAAAB55), { 0xDEA00000, 0x00001B7D }
fc, fx.mrshift(40) = (out = 0xEF5555AB), { 0xDEA00000, 0x00000DBE }
fc, fx.mrshift(41) = (out = 0x77AAAAD5), { 0xDEA00000, 0x000006DF }
fc, fx.mrshift(42) = (out = 0xBBD5556B), { 0xDEA00000, 0x0000036F }
fc, fx.mrshift(43) = (out = 0xDDEAAAB5), { 0xDEA00000, 0x000001B7 }
fc, fx.mrshift(44) = (out = 0xEEF5555B), { 0xDEA00000, 0x000000DB }
fc, fx.mrshift(45) = (out = 0xF77AAAAD), { 0xDEA00000, 0x0000006D }
fc, fx.mrshift(46) = (out = 0xFBBD5557), { 0xDEA00000, 0x00000036 }
fc, fx.mrshift(47) = (out = 0x7DDEAAAB), { 0xDEA00000, 0x0000001B }
fc, fx.mrshift(48) = (out = 0xBEEF5555), { 0xDEA00000, 0x0000000D }
fc, fx.mrshift(49) = (out = 0xDF77AAAB), { 0xDEA00000, 0x00000006 }
fc, fx.mrshift(50) = (out = 0x6FBBD555), { 0xDEA00000, 0x00000003 }
fc, fx.mrshift(51) = (out = 0xB7DDEAAB), { 0xDEA00000, 0x00000001 }
fc, fx.mrshift(52) = (out = 0xDBEEF555), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(53) = (out = 0x6DF77AAB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(54) = (out = 0x36FBBD55), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(55) = (out = 0x1B7DDEAB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(56) = (out = 0x0DBEEF55), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(57) = (out = 0x06DF77AB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(58) = (out = 0x036FBBD5), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(59) = (out = 0x01B7DDEB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(60) = (out = 0x00DBEEF5), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(61) = (out = 0x006DF77B), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(62) = (out = 0x0036FBBD), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(63) = (out = 0x001B7DDF), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(64) = (out = 0x000DBEEF), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(65) = (out = 0x0006DF77), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(66) = (out = 0x00036FBB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(67) = (out = 0x0001B7DD), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(68) = (out = 0x0000DBEF), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(69) = (out = 0x00006DF7), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(70) = (out = 0x000036FB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(71) = (out = 0x00001B7D), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(72) = (out = 0x00000DBF), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(73) = (out = 0x000006DF), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(74) = (out = 0x0000036F), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(75) = (out = 0x000001B7), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(76) = (out = 0x000000DB), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(77) = (out = 0x0000006D), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(78) = (out = 0x00000037), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(79) = (out = 0x0000001B), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(80) = (out = 0x0000000D), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(81) = (out = 0x00000007), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(82) = (out = 0x00000003), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(83) = (out = 0x00000001), { 0xDEA00000, 0x00000000 }
fc, fx.mrshift(84) = (out = 0x00000001), { 0xDEA00000, 0x00000000 }
fc, fx.elshift(0) = (out = 0x00000000), { 0xDEADBEEF, 0x5555AAAA }
fc, fx.elshift(1) = (out = 0x00000000), { 0xBD4DBEEF, 0x5555AAAA }
fc, fx.elshift(2) = (out = 0x00000001), { 0xFA8DBEEF, 0x5555AAAA }
fc, fx.elshift(3) = (out = 0x00000002), { 0xF50DBEEF, 0x5555AAAA }
fc, fx.elshift(4) = (out = 0x00000005), { 0xEA0DBEEF, 0x5555AAAA }
fc, fx.elshift(5) = (out = 0x0000000B), { 0xD40DBEEF, 0x5555AAAA }
fc, fx.elshift(6) = (out = 0x00000017), { 0xA80DBEEF, 0x5555AAAA }
fc, fx.elshift(7) = (out = 0x0000002F), { 0xD00DBEEF, 0x5555AAAA }
fc, fx.elshift(8) = (out = 0x0000005E), { 0xA00DBEEF, 0x5555AAAA }
fc, fx.elshift(9) = (out = 0x000000BD), { 0xC00DBEEF, 0x5555AAAA }
fc, fx.elshift(10) = (out = 0x0000017A), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(11) = (out = 0x000002F5), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(12) = (out = 0x000005EA), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(13) = (out = 0x00000BD4), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(14) = (out = 0x000017A8), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(15) = (out = 0x00002F50), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(16) = (out = 0x00005EA0), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(17) = (out = 0x0000BD40), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(18) = (out = 0x00017A80), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(19) = (out = 0x0002F500), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(20) = (out = 0x0005EA00), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(21) = (out = 0x000BD400), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(22) = (out = 0x0017A800), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(23) = (out = 0x002F5000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(24) = (out = 0x005EA000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(25) = (out = 0x00BD4000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(26) = (out = 0x017A8000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(27) = (out = 0x02F50000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(28) = (out = 0x05EA0000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(29) = (out = 0x0BD40000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(30) = (out = 0x17A80000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(31) = (out = 0x2F500000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(32) = (out = 0x1EA00000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(33) = (out = 0xBD400000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(34) = (out = 0xBA800000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(35) = (out = 0xB5000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(36) = (out = 0xAA000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(37) = (out = 0x94000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(38) = (out = 0xA8000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(39) = (out = 0x90000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(40) = (out = 0xA0000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(41) = (out = 0x80000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(42) = (out = 0x80000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.elshift(43) = (out = 0x80000000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(0) = (out = 0x00000000), { 0xDEADBEEF, 0x5555AAAA }
fc, fx.ershift(1) = (out = 0x00000000), { 0xAF5DBEEF, 0x5555AAAA }
fc, fx.ershift(2) = (out = 0x80000000), { 0x97ADBEEF, 0x5555AAAA }
fc, fx.ershift(3) = (out = 0x40000000), { 0x8BDDBEEF, 0x5555AAAA }
fc, fx.ershift(4) = (out = 0xA0000000), { 0x85EDBEEF, 0x5555AAAA }
fc, fx.ershift(5) = (out = 0x50000000), { 0x82FDBEEF, 0x5555AAAA }
fc, fx.ershift(6) = (out = 0xA8000000), { 0x817DBEEF, 0x5555AAAA }
fc, fx.ershift(7) = (out = 0xD4000000), { 0x80BDBEEF, 0x5555AAAA }
fc, fx.ershift(8) = (out = 0xEA000000), { 0x805DBEEF, 0x5555AAAA }
fc, fx.ershift(9) = (out = 0xF5000000), { 0x802DBEEF, 0x5555AAAA }
fc, fx.ershift(10) = (out = 0x7A800000), { 0x801DBEEF, 0x5555AAAA }
fc, fx.ershift(11) = (out = 0xBD400000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(12) = (out = 0x5EA00000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(13) = (out = 0x2F500000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(14) = (out = 0x17A80000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(15) = (out = 0x0BD40000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(16) = (out = 0x05EA0000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(17) = (out = 0x02F50000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(18) = (out = 0x017A8000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(19) = (out = 0x00BD4000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(20) = (out = 0x005EA000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(21) = (out = 0x002F5000), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(22) = (out = 0x0017A800), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(23) = (out = 0x000BD400), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(24) = (out = 0x0005EA00), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(25) = (out = 0x0002F500), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(26) = (out = 0x00017A80), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(27) = (out = 0x0000BD40), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(28) = (out = 0x00005EA0), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(29) = (out = 0x00002F50), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(30) = (out = 0x000017A8), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(31) = (out = 0x00000BD4), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(32) = (out = 0x000005EA), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(33) = (out = 0x000002F5), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(34) = (out = 0x0000017B), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(35) = (out = 0x000000BD), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(36) = (out = 0x0000005F), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(37) = (out = 0x0000002F), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(38) = (out = 0x00000017), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(39) = (out = 0x0000000B), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(40) = (out = 0x00000005), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(41) = (out = 0x00000003), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(42) = (out = 0x00000001), { 0x800DBEEF, 0x5555AAAA }
fc, fx.ershift(43) = (out = 0x00000001), { 0x800DBEEF, 0x5555AAAA }
fc, fx.lshift(0) = (out = 0x00000000), { 0xDEADBEEF, 0x5555AAAA }
fc, fx.lshift(1) = (out = 0x00000001), { 0xBD5B7DDE, 0xAAAB5554 }
fc, fx.lshift(2) = (out = 0x00000002), { 0xFAB6FBBD, 0x5556AAA8 }
fc, fx.lshift(3) = (out = 0x00000005), { 0xF56DF77A, 0xAAAD5550 }
fc, fx.lshift(4) = (out = 0x0000000B), { 0xEADBEEF5, 0x555AAAA0 }
fc, fx.lshift(5) = (out = 0x00000017), { 0xD5B7DDEA, 0xAAB55540 }
fc, fx.lshift(6) = (out = 0x0000002F), { 0xAB6FBBD5, 0x556AAA80 }
fc, fx.lshift(7) = (out = 0x0000005E), { 0xD6DF77AA, 0xAAD55500 }
fc, fx.lshift(8) = (out = 0x000000BD), { 0xADBEEF55, 0x55AAAA00 }
fc, fx.lshift(9) = (out = 0x0000017A), { 0xDB7DDEAA, 0xAB555400 }
fc, fx.lshift(10) = (out = 0x000002F5), { 0xB6FBBD55, 0x56AAA800 }
fc, fx.lshift(11) = (out = 0x000005EA), { 0xEDF77AAA, 0xAD555000 }
fc, fx.lshift(12) = (out = 0x00000BD5), { 0xDBEEF555, 0x5AAAA000 }
fc, fx.lshift(13) = (out = 0x000017AB), { 0xB7DDEAAA, 0xB5554000 }
fc, fx.lshift(14) = (out = 0x00002F56), { 0xEFBBD555, 0x6AAA8000 }
fc, fx.lshift(15) = (out = 0x00005EAD), { 0xDF77AAAA, 0xD5550000 }
fc, fx.lshift(16) = (out = 0x0000BD5B), { 0xBEEF5555, 0xAAAA0000 }
fc, fx.lshift(17) = (out = 0x00017AB6), { 0xFDDEAAAB, 0x55540000 }
fc, fx.lshift(18) = (out = 0x0002F56D), { 0xFBBD5556, 0xAAA80000 }
fc, fx.lshift(19) = (out = 0x0005EADB), { 0xF77AAAAD, 0x55500000 }
fc, fx.lshift(20) = (out = 0x000BD5B7), { 0xEEF5555A, 0xAAA00000 }
fc, fx.lshift(21) = (out = 0x0017AB6F), { 0xDDEAAAB5, 0x55400000 }
fc, fx.lshift(22) = (out = 0x002F56DF), { 0xBBD5556A, 0xAA800000 }
fc, fx.lshift(23) = (out = 0x005EADBE), { 0xF7AAAAD5, 0x55000000 }
fc, fx.lshift(24) = (out = 0x00BD5B7D), { 0xEF5555AA, 0xAA000000 }
fc, fx.lshift(25) = (out = 0x017AB6FB), { 0xDEAAAB55, 0x54000000 }
fc, fx.lshift(26) = (out = 0x02F56DF7), { 0xBD5556AA, 0xA8000000 }
fc, fx.lshift(27) = (out = 0x05EADBEE), { 0xFAAAAD55, 0x50000000 }
fc, fx.lshift(28) = (out = 0x0BD5B7DD), { 0xF5555AAA, 0xA0000000 }
fc, fx.lshift(29) = (out = 0x17AB6FBB), { 0xEAAAB555, 0x40000000 }
fc, fx.lshift(30) = (out = 0x2F56DF77), { 0xD5556AAA, 0x80000000 }
fc, fx.lshift(31) = (out = 0x5EADBEEF), { 0xAAAAD555, 0x00000000 }
fc, fx.lshift(32) = (out = 0xBD5B7DDE), { 0xD555AAAA, 0x00000000 }
fc, fx.lshift(33) = (out = 0xFAB6FBBD), { 0xAAAB5554, 0x00000000 }
fc, fx.lshift(34) = (out = 0xF56DF77A), { 0xD556AAA8, 0x00000000 }
fc, fx.lshift(35) = (out = 0xEADBEEF5), { 0xAAAD5550, 0x00000000 }
fc, fx.lshift(36) = (out = 0xD5B7DDEA), { 0xD55AAAA0, 0x00000000 }
fc, fx.lshift(37) = (out = 0xAB6FBBD5), { 0xAAB55540, 0x00000000 }
fc, fx.lshift(38) = (out = 0xD6DF77AA), { 0xD56AAA80, 0x00000000 }
fc, fx.lshift(39) = (out = 0xADBEEF55), { 0xAAD55500, 0x00000000 }
fc, fx.lshift(40) = (out = 0xDB7DDEAA), { 0xD5AAAA00, 0x00000000 }
fc, fx.lshift(41) = (out = 0xB6FBBD55), { 0xAB555400, 0x00000000 }
fc, fx.lshift(42) = (out = 0xEDF77AAA), { 0xD6AAA800, 0x00000000 }
fc, fx.lshift(43) = (out = 0xDBEEF555), { 0xAD555000, 0x00000000 }
fc, fx.lshift(44) = (out = 0xB7DDEAAA), { 0xDAAAA000, 0x00000000 }
fc, fx.lshift(45) = (out = 0xEFBBD555), { 0xB5554000, 0x00000000 }
fc, fx.lshift(46) = (out = 0xDF77AAAA), { 0xEAAA8000, 0x00000000 }
fc, fx.lshift(47) = (out = 0xBEEF5555), { 0xD5550000, 0x00000000 }
fc, fx.lshift(48) = (out = 0xFDDEAAAB), { 0xAAAA0000, 0x00000000 }
fc, fx.lshift(49) = (out = 0xFBBD5556), { 0xD5540000, 0x00000000 }
fc, fx.lshift(50) = (out = 0xF77AAAAD), { 0xAAA80000, 0x00000000 }
fc, fx.lshift(51) = (out = 0xEEF5555A), { 0xD5500000, 0x00000000 }
fc, fx.lshift(52) = (out = 0xDDEAAAB5), { 0xAAA00000, 0x00000000 }
fc, fx.lshift(53) = (out = 0xBBD5556A), { 0xD5400000, 0x00000000 }
fc, fx.lshift(54) = (out = 0xF7AAAAD5), { 0xAA800000, 0x00000000 }
fc, fx.lshift(55) = (out = 0xEF5555AA), { 0xD5000000, 0x00000000 }
fc, fx.lshift(56) = (out = 0xDEAAAB55), { 0xAA000000, 0x00000000 }
fc, fx.lshift(57) = (out = 0xBD5556AA), { 0xD4000000, 0x00000000 }
fc, fx.lshift(58) = (out = 0xFAAAAD55), { 0xA8000000, 0x00000000 }
fc, fx.lshift(59) = (out = 0xF5555AAA), { 0xD0000000, 0x00000000 }
fc, fx.lshift(60) = (out = 0xEAAAB555), { 0xA0000000, 0x00000000 }
fc, fx.lshift(61) = (out = 0xD5556AAA), { 0xC0000000, 0x00000000 }
fc, fx.lshift(62) = (out = 0xAAAAD555), { 0x80000000, 0x00000000 }
fc, fx.lshift(63) = (out = 0xD555AAAA), { 0x80000000, 0x00000000 }
fc, fx.lshift(64) = (out = 0xAAAB5554), { 0x80000000, 0x00000000 }
fc, fx.lshift(65) = (out = 0xD556AAA8), { 0x80000000, 0x00000000 }
fc, fx.lshift(66) = (out = 0xAAAD5550), { 0x80000000, 0x00000000 }
fc, fx.lshift(67) = (out = 0xD55AAAA0), { 0x80000000, 0x00000000 }
fc, fx.lshift(68) = (out = 0xAAB55540), { 0x80000000, 0x00000000 }
fc, fx.lshift(69) = (out = 0xD56AAA80), { 0x80000000, 0x00000000 }
fc, fx.lshift(70) = (out = 0xAAD55500), { 0x80000000, 0x00000000 }
fc, fx.lshift(71) = (out = 0xD5AAAA00), { 0x80000000, 0x00000000 }
fc, fx.lshift(72) = (out = 0xAB555400), { 0x80000000, 0x00000000 }
fc, fx.lshift(73) = (out = 0xD6AAA800), { 0x80000000, 0x00000000 }
fc, fx.lshift(74) = (out = 0xAD555000), { 0x80000000, 0x00000000 }
fc, fx.lshift(75) = (out = 0xDAAAA000), { 0x80000000, 0x00000000 }
fc, fx.lshift(76) = (out = 0xB5554000), { 0x80000000, 0x00000000 }
fc, fx.lshift(77) = (out = 0xEAAA8000), { 0x80000000, 0x00000000 }
fc, fx.lshift(78) = (out = 0xD5550000), { 0x80000000, 0x00000000 }
fc, fx.lshift(79) = (out = 0xAAAA0000), { 0x80000000, 0x00000000 }
fc, fx.lshift(80) = (out = 0xD5540000), { 0x80000000, 0x00000000 }
fc, fx.lshift(81) = (out = 0xAAA80000), { 0x80000000, 0x00000000 }
fc, fx.lshift(82) = (out = 0xD5500000), { 0x80000000, 0x00000000 }
fc, fx.lshift(83) = (out = 0xAAA00000), { 0x80000000, 0x00000000 }
fc, fx.lshift(84) = (out = 0xD5400000), { 0x80000000, 0x00000000 }
fc, fx.lshift(85) = (out = 0xAA800000), { 0x80000000, 0x00000000 }
fc, fx.lshift(86) = (out = 0xD5000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(87) = (out = 0xAA000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(88) = (out = 0xD4000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(89) = (out = 0xA8000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(90) = (out = 0xD0000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(91) = (out = 0xA0000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(92) = (out = 0xC0000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(93) = (out = 0x80000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(94) = (out = 0x80000000), { 0x80000000, 0x00000000 }
fc, fx.lshift(95) = (out = 0x80000000), { 0x80000000, 0x00000000 }
fc, fx.rshift(0) = (out = 0x00000000), { 0xDEADBEEF, 0x5555AAAA }
fc, fx.rshift(1) = (out = 0x00000000), { 0xAF56DF77, 0xAAAAD555 }
fc, fx.rshift(2) = (out = 0x80000000), { 0x97AB6FBB, 0xD5556AAA }
fc, fx.rshift(3) = (out = 0x40000000), { 0x8BD5B7DD, 0xEAAAB555 }
fc, fx.rshift(4) = (out = 0xA0000000), { 0x85EADBEE, 0xF5555AAA }
fc, fx.rshift(5) = (out = 0x50000000), { 0x82F56DF7, 0x7AAAAD55 }
fc, fx.rshift(6) = (out = 0xA8000000), { 0x817AB6FB, 0xBD5556AA }
fc, fx.rshift(7) = (out = 0x54000000), { 0x80BD5B7D, 0xDEAAAB55 }
fc, fx.rshift(8) = (out = 0xAA000000), { 0x805EADBE, 0xEF5555AA }
fc, fx.rshift(9) = (out = 0x55000000), { 0x802F56DF, 0x77AAAAD5 }
fc, fx.rshift(10) = (out = 0xAA800000), { 0x8017AB6F, 0xBBD5556A }
fc, fx.rshift(11) = (out = 0x55400000), { 0x800BD5B7, 0xDDEAAAB5 }
fc, fx.rshift(12) = (out = 0xAAA00000), { 0x8005EADB, 0xEEF5555A }
fc, fx.rshift(13) = (out = 0x55500000), { 0x8002F56D, 0xF77AAAAD }
fc, fx.rshift(14) = (out = 0xAAA80000), { 0x80017AB6, 0xFBBD5556 }
fc, fx.rshift(15) = (out = 0x55540000), { 0x8000BD5B, 0x7DDEAAAB }
fc, fx.rshift(16) = (out = 0xAAAA0000), { 0x80005EAD, 0xBEEF5555 }
fc, fx.rshift(17) = (out = 0xD5550000), { 0x80002F56, 0xDF77AAAA }
fc, fx.rshift(18) = (out = 0x6AAA8000), { 0x800017AB, 0x6FBBD555 }
fc, fx.rshift(19) = (out = 0xB5554000), { 0x80000BD5, 0xB7DDEAAA }
fc, fx.rshift(20) = (out = 0x5AAAA000), { 0x800005EA, 0xDBEEF555 }
fc, fx.rshift(21) = (out = 0xAD555000), { 0x800002F5, 0x6DF77AAA }
fc, fx.rshift(22) = (out = 0x56AAA800), { 0x8000017A, 0xB6FBBD55 }
fc, fx.rshift(23) = (out = 0xAB555400), { 0x800000BD, 0x5B7DDEAA }
fc, fx.rshift(24) = (out = 0x55AAAA00), { 0x8000005E, 0xADBEEF55 }
fc, fx.rshift(25) = (out = 0xAAD55500), { 0x8000002F, 0x56DF77AA }
fc, fx.rshift(26) = (out = 0x556AAA80), { 0x80000017, 0xAB6FBBD5 }
fc, fx.rshift(27) = (out = 0xAAB55540), { 0x8000000B, 0xD5B7DDEA }
fc, fx.rshift(28) = (out = 0x555AAAA0), { 0x80000005, 0xEADBEEF5 }
fc, fx.rshift(29) = (out = 0xAAAD5550), { 0x80000002, 0xF56DF77A }
fc, fx.rshift(30) = (out = 0x5556AAA8), { 0x80000001, 0x7AB6FBBD }
fc, fx.rshift(31) = (out = 0xAAAB5554), { 0x80000000, 0xBD5B7DDE }
fc, fx.rshift(32) = (out = 0x5555AAAA), { 0x80000000, 0x5EADBEEF }
fc, fx.rshift(33) = (out = 0xAAAAD555), { 0x80000000, 0x2F56DF77 }
fc, fx.rshift(34) = (out = 0xD5556AAB), { 0x80000000, 0x17AB6FBB }
fc, fx.rshift(35) = (out = 0xEAAAB555), { 0x80000000, 0x0BD5B7DD }
fc, fx.rshift(36) = (out = 0xF5555AAB), { 0x80000000, 0x05EADBEE }
fc, fx.rshift(37) = (out = 0x7AAAAD55), { 0x80000000, 0x02F56DF7 }
fc, fx.rshift(38) = (out = 0xBD5556AB), { 0x80000000, 0x017AB6FB }
fc, fx.rshift(39) = (out = 0xDEAAAB55), { 0x80000000, 0x00BD5B7D }
fc, fx.rshift(40) = (out = 0xEF5555AB), { 0x80000000, 0x005EADBE }
fc, fx.rshift(41) = (out = 0x77AAAAD5), { 0x80000000, 0x002F56DF }
fc, fx.rshift(42) = (out = 0xBBD5556B), { 0x80000000, 0x0017AB6F }
fc, fx.rshift(43) = (out = 0xDDEAAAB5), { 0x80000000, 0x000BD5B7 }
fc, fx.rshift(44) = (out = 0xEEF5555B), { 0x80000000, 0x0005EADB }
fc, fx.rshift(45) = (out = 0xF77AAAAD), { 0x80000000, 0x0002F56D }
fc, fx.rshift(46) = (out = 0xFBBD5557), { 0x80000000, 0x00017AB6 }
fc, fx.rshift(47) = (out = 0x7DDEAAAB), { 0x80000000, 0x0000BD5B }
fc, fx.rshift(48) = (out = 0xBEEF5555), { 0x80000000, 0x00005EAD }
fc, fx.rshift(49) = (out = 0xDF77AAAB), { 0x80000000, 0x00002F56 }
fc, fx.rshift(50) = (out = 0x6FBBD555), { 0x80000000, 0x000017AB }
fc, fx.rshift(51) = (out = 0xB7DDEAAB), { 0x80000000, 0x00000BD5 }
fc, fx.rshift(52) = (out = 0xDBEEF555), { 0x80000000, 0x000005EA }
fc, fx.rshift(53) = (out = 0x6DF77AAB), { 0x80000000, 0x000002F5 }
fc, fx.rshift(54) = (out = 0xB6FBBD55), { 0x80000000, 0x0000017A }
fc, fx.rshift(55) = (out = 0x5B7DDEAB), { 0x80000000, 0x000000BD }
fc, fx.rshift(56) = (out = 0xADBEEF55), { 0x80000000, 0x0000005E }
fc, fx.rshift(57) = (out = 0x56DF77AB), { 0x80000000, 0x0000002F }
fc, fx.rshift(58) = (out = 0xAB6FBBD5), { 0x80000000, 0x00000017 }
fc, fx.rshift(59) = (out = 0xD5B7DDEB), { 0x80000000, 0x0000000B }
fc, fx.rshift(60) = (out = 0xEADBEEF5), { 0x80000000, 0x00000005 }
fc, fx.rshift(61) = (out = 0xF56DF77B), { 0x80000000, 0x00000002 }
fc, fx.rshift(62) = (out = 0x7AB6FBBD), { 0x80000000, 0x00000001 }
fc, fx.rshift(63) = (out = 0xBD5B7DDF), { 0x80000000, 0x00000000 }
fc, fx.rshift(64) = (out = 0x5EADBEEF), { 0x80000000, 0x00000000 }
fc, fx.rshift(65) = (out = 0x2F56DF77), { 0x80000000, 0x00000000 }
fc, fx.rshift(66) = (out = 0x17AB6FBB), { 0x80000000, 0x00000000 }
fc, fx.rshift(67) = (out = 0x0BD5B7DD), { 0x80000000, 0x00000000 }
fc, fx.rshift(68) = (out = 0x05EADBEF), { 0x80000000, 0x00000000 }
fc, fx.rshift(69) = (out = 0x02F56DF7), { 0x80000000, 0x00000000 }
fc, fx.rshift(70) = (out = 0x017AB6FB), { 0x80000000, 0x00000000 }
fc, fx.rshift(71) = (out = 0x00BD5B7D), { 0x80000000, 0x00000000 }
fc, fx.rshift(72) = (out = 0x005EADBF), { 0x80000000, 0x00000000 }
fc, fx.rshift(73) = (out = 0x002F56DF), { 0x80000000, 0x00000000 }
fc, fx.rshift(74) = (out = 0x0017AB6F), { 0x80000000, 0x00000000 }
fc, fx.rshift(75) = (out = 0x000BD5B7), { 0x80000000, 0x00000000 }
fc, fx.rshift(76) = (out = 0x0005EADB), { 0x80000000, 0x00000000 }
fc, fx.rshift(77) = (out = 0x0002F56D), { 0x80000000, 0x00000000 }
fc, fx.rshift(78) = (out = 0x00017AB7), { 0x80000000, 0x00000000 }
fc, fx.rshift(79) = (out = 0x0000BD5B), { 0x80000000, 0x00000000 }
fc, fx.rshift(80) = (out = 0x00005EAD), { 0x80000000, 0x00000000 }
fc, fx.rshift(81) = (out = 0x00002F57), { 0x80000000, 0x00000000 }
fc, fx.rshift(82) = (out = 0x000017AB), { 0x80000000, 0x00000000 }
fc, fx.rshift(83) = (out = 0x00000BD5), { 0x80000000, 0x00000000 }
fc, fx.rshift(84) = (out = 0x000005EB), { 0x80000000, 0x00000000 }
fc, fx.rshift(85) = (out = 0x000002F5), { 0x80000000, 0x00000000 }
fc, fx.rshift(86) = (out = 0x0000017B), { 0x80000000, 0x00000000 }
fc, fx.rshift(87) = (out = 0x000000BD), { 0x80000000, 0x00000000 }
fc, fx.rshift(88) = (out = 0x0000005F), { 0x80000000, 0x00000000 }
fc, fx.rshift(89) = (out = 0x0000002F), { 0x80000000, 0x00000000 }
fc, fx.rshift(90) = (out = 0x00000017), { 0x80000000, 0x00000000 }
fc, fx.rshift(91) = (out = 0x0000000B), { 0x80000000, 0x00000000 }
fc, fx.rshift(92) = (out = 0x00000005), { 0x80000000, 0x00000000 }
fc, fx.rshift(93) = (out = 0x00000003), { 0x80000000, 0x00000000 }
fc, fx.rshift(94) = (out = 0x00000001), { 0x80000000, 0x00000000 }
fc, fx.rshift(95) = (out = 0x00000001), { 0x80000000, 0x00000000 }
fc_t1, fx = { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.mlshift(0) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.mlshift(1) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0xAAAB5554 }
fc_t1, fx.mlshift(2) = (out = 0x00000001), { 0x00000000, 0xDEADBEEF, 0x5556AAA8 }
fc_t1, fx.mlshift(3) = (out = 0x00000002), { 0x00000000, 0xDEADBEEF, 0xAAAD5550 }
fc_t1, fx.mlshift(4) = (out = 0x00000005), { 0x00000000, 0xDEADBEEF, 0x555AAAA0 }
fc_t1, fx.mlshift(5) = (out = 0x0000000A), { 0x00000000, 0xDEADBEEF, 0xAAB55540 }
fc_t1, fx.mlshift(6) = (out = 0x00000015), { 0x00000000, 0xDEADBEEF, 0x556AAA80 }
fc_t1, fx.mlshift(7) = (out = 0x0000002A), { 0x00000000, 0xDEADBEEF, 0xAAD55500 }
fc_t1, fx.mlshift(8) = (out = 0x00000055), { 0x00000000, 0xDEADBEEF, 0x55AAAA00 }
fc_t1, fx.mlshift(9) = (out = 0x000000AA), { 0x00000000, 0xDEADBEEF, 0xAB555400 }
fc_t1, fx.mlshift(10) = (out = 0x00000155), { 0x00000000, 0xDEADBEEF, 0x56AAA800 }
fc_t1, fx.mlshift(11) = (out = 0x000002AA), { 0x00000000, 0xDEADBEEF, 0xAD555000 }
fc_t1, fx.mlshift(12) = (out = 0x00000555), { 0x00000000, 0xDEADBEEF, 0x5AAAA000 }
fc_t1, fx.mlshift(13) = (out = 0x00000AAA), { 0x00000000, 0xDEADBEEF, 0xB5554000 }
fc_t1, fx.mlshift(14) = (out = 0x00001555), { 0x00000000, 0xDEADBEEF, 0x6AAA8000 }
fc_t1, fx.mlshift(15) = (out = 0x00002AAA), { 0x00000000, 0xDEADBEEF, 0xD5550000 }
fc_t1, fx.mlshift(16) = (out = 0x00005555), { 0x00000000, 0xDEADBEEF, 0xAAAA0000 }
fc_t1, fx.mlshift(17) = (out = 0x0000AAAB), { 0x00000000, 0xDEADBEEF, 0x55540000 }
fc_t1, fx.mlshift(18) = (out = 0x00015556), { 0x00000000, 0xDEADBEEF, 0xAAA80000 }
fc_t1, fx.mlshift(19) = (out = 0x0002AAAD), { 0x00000000, 0xDEADBEEF, 0x55500000 }
fc_t1, fx.mlshift(20) = (out = 0x0005555A), { 0x00000000, 0xDEADBEEF, 0xAAA00000 }
fc_t1, fx.mlshift(21) = (out = 0x000AAAB5), { 0x00000000, 0xDEADBEEF, 0x55400000 }
fc_t1, fx.mlshift(22) = (out = 0x0015556A), { 0x00000000, 0xDEADBEEF, 0xAA800000 }
fc_t1, fx.mlshift(23) = (out = 0x002AAAD5), { 0x00000000, 0xDEADBEEF, 0x55000000 }
fc_t1, fx.mlshift(24) = (out = 0x005555AA), { 0x00000000, 0xDEADBEEF, 0xAA000000 }
fc_t1, fx.mlshift(25) = (out = 0x00AAAB55), { 0x00000000, 0xDEADBEEF, 0x54000000 }
fc_t1, fx.mlshift(26) = (out = 0x015556AA), { 0x00000000, 0xDEADBEEF, 0xA8000000 }
fc_t1, fx.mlshift(27) = (out = 0x02AAAD55), { 0x00000000, 0xDEADBEEF, 0x50000000 }
fc_t1, fx.mlshift(28) = (out = 0x05555AAA), { 0x00000000, 0xDEADBEEF, 0xA0000000 }
fc_t1, fx.mlshift(29) = (out = 0x0AAAB555), { 0x00000000, 0xDEADBEEF, 0x40000000 }
fc_t1, fx.mlshift(30) = (out = 0x15556AAA), { 0x00000000, 0xDEADBEEF, 0x80000000 }
fc_t1, fx.mlshift(31) = (out = 0x2AAAD555), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(32) = (out = 0x5555AAAA), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(33) = (out = 0xAAAB5554), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(34) = (out = 0xD556AAA8), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(35) = (out = 0xAAAD5550), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(36) = (out = 0xD55AAAA0), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(37) = (out = 0xAAB55540), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(38) = (out = 0xD56AAA80), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(39) = (out = 0xAAD55500), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(40) = (out = 0xD5AAAA00), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(41) = (out = 0xAB555400), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(42) = (out = 0xD6AAA800), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(43) = (out = 0xAD555000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(44) = (out = 0xDAAAA000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(45) = (out = 0xB5554000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(46) = (out = 0xEAAA8000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(47) = (out = 0xD5550000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(48) = (out = 0xAAAA0000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(49) = (out = 0xD5540000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(50) = (out = 0xAAA80000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(51) = (out = 0xD5500000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(52) = (out = 0xAAA00000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(53) = (out = 0xD5400000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(54) = (out = 0xAA800000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(55) = (out = 0xD5000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(56) = (out = 0xAA000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(57) = (out = 0xD4000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(58) = (out = 0xA8000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(59) = (out = 0xD0000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(60) = (out = 0xA0000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(61) = (out = 0xC0000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(62) = (out = 0x80000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(63) = (out = 0x80000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mlshift(64) = (out = 0x80000000), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(0) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.mrshift(1) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x2AAAD555 }
fc_t1, fx.mrshift(2) = (out = 0x80000000), { 0x00000000, 0xDEADBEEF, 0x15556AAA }
fc_t1, fx.mrshift(3) = (out = 0x40000000), { 0x00000000, 0xDEADBEEF, 0x0AAAB555 }
fc_t1, fx.mrshift(4) = (out = 0xA0000000), { 0x00000000, 0xDEADBEEF, 0x05555AAA }
fc_t1, fx.mrshift(5) = (out = 0x50000000), { 0x00000000, 0xDEADBEEF, 0x02AAAD55 }
fc_t1, fx.mrshift(6) = (out = 0xA8000000), { 0x00000000, 0xDEADBEEF, 0x015556AA }
fc_t1, fx.mrshift(7) = (out = 0x54000000), { 0x00000000, 0xDEADBEEF, 0x00AAAB55 }
fc_t1, fx.mrshift(8) = (out = 0xAA000000), { 0x00000000, 0xDEADBEEF, 0x005555AA }
fc_t1, fx.mrshift(9) = (out = 0x55000000), { 0x00000000, 0xDEADBEEF, 0x002AAAD5 }
fc_t1, fx.mrshift(10) = (out = 0xAA800000), { 0x00000000, 0xDEADBEEF, 0x0015556A }
fc_t1, fx.mrshift(11) = (out = 0x55400000), { 0x00000000, 0xDEADBEEF, 0x000AAAB5 }
fc_t1, fx.mrshift(12) = (out = 0xAAA00000), { 0x00000000, 0xDEADBEEF, 0x0005555A }
fc_t1, fx.mrshift(13) = (out = 0x55500000), { 0x00000000, 0xDEADBEEF, 0x0002AAAD }
fc_t1, fx.mrshift(14) = (out = 0xAAA80000), { 0x00000000, 0xDEADBEEF, 0x00015556 }
fc_t1, fx.mrshift(15) = (out = 0x55540000), { 0x00000000, 0xDEADBEEF, 0x0000AAAB }
fc_t1, fx.mrshift(16) = (out = 0xAAAA0000), { 0x00000000, 0xDEADBEEF, 0x00005555 }
fc_t1, fx.mrshift(17) = (out = 0xD5550000), { 0x00000000, 0xDEADBEEF, 0x00002AAA }
fc_t1, fx.mrshift(18) = (out = 0x6AAA8000), { 0x00000000, 0xDEADBEEF, 0x00001555 }
fc_t1, fx.mrshift(19) = (out = 0xB5554000), { 0x00000000, 0xDEADBEEF, 0x00000AAA }
fc_t1, fx.mrshift(20) = (out = 0x5AAAA000), { 0x00000000, 0xDEADBEEF, 0x00000555 }
fc_t1, fx.mrshift(21) = (out = 0xAD555000), { 0x00000000, 0xDEADBEEF, 0x000002AA }
fc_t1, fx.mrshift(22) = (out = 0x56AAA800), { 0x00000000, 0xDEADBEEF, 0x00000155 }
fc_t1, fx.mrshift(23) = (out = 0xAB555400), { 0x00000000, 0xDEADBEEF, 0x000000AA }
fc_t1, fx.mrshift(24) = (out = 0x55AAAA00), { 0x00000000, 0xDEADBEEF, 0x00000055 }
fc_t1, fx.mrshift(25) = (out = 0xAAD55500), { 0x00000000, 0xDEADBEEF, 0x0000002A }
fc_t1, fx.mrshift(26) = (out = 0x556AAA80), { 0x00000000, 0xDEADBEEF, 0x00000015 }
fc_t1, fx.mrshift(27) = (out = 0xAAB55540), { 0x00000000, 0xDEADBEEF, 0x0000000A }
fc_t1, fx.mrshift(28) = (out = 0x555AAAA0), { 0x00000000, 0xDEADBEEF, 0x00000005 }
fc_t1, fx.mrshift(29) = (out = 0xAAAD5550), { 0x00000000, 0xDEADBEEF, 0x00000002 }
fc_t1, fx.mrshift(30) = (out = 0x5556AAA8), { 0x00000000, 0xDEADBEEF, 0x00000001 }
fc_t1, fx.mrshift(31) = (out = 0xAAAB5554), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(32) = (out = 0x5555AAAA), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(33) = (out = 0x2AAAD555), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(34) = (out = 0x15556AAB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(35) = (out = 0x0AAAB555), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(36) = (out = 0x05555AAB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(37) = (out = 0x02AAAD55), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(38) = (out = 0x015556AB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(39) = (out = 0x00AAAB55), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(40) = (out = 0x005555AB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(41) = (out = 0x002AAAD5), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(42) = (out = 0x0015556B), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(43) = (out = 0x000AAAB5), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(44) = (out = 0x0005555B), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(45) = (out = 0x0002AAAD), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(46) = (out = 0x00015557), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(47) = (out = 0x0000AAAB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(48) = (out = 0x00005555), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(49) = (out = 0x00002AAB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(50) = (out = 0x00001555), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(51) = (out = 0x00000AAB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(52) = (out = 0x00000555), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(53) = (out = 0x000002AB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(54) = (out = 0x00000155), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(55) = (out = 0x000000AB), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(56) = (out = 0x00000055), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(57) = (out = 0x0000002B), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(58) = (out = 0x00000015), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(59) = (out = 0x0000000B), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(60) = (out = 0x00000005), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(61) = (out = 0x00000003), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(62) = (out = 0x00000001), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(63) = (out = 0x00000001), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.mrshift(64) = (out = 0x00000001), { 0x00000000, 0xDEADBEEF, 0x00000000 }
fc_t1, fx.elshift(0) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.elshift(1) = (out = 0x00000001), { 0x00000000, 0xBD5B7DDE, 0x5555AAAA }
fc_t1, fx.elshift(2) = (out = 0x00000003), { 0x00000000, 0x7AB6FBBC, 0x5555AAAA }
fc_t1, fx.elshift(3) = (out = 0x00000006), { 0x00000000, 0xF56DF778, 0x5555AAAA }
fc_t1, fx.elshift(4) = (out = 0x0000000D), { 0x00000000, 0xEADBEEF0, 0x5555AAAA }
fc_t1, fx.elshift(5) = (out = 0x0000001B), { 0x00000000, 0xD5B7DDE0, 0x5555AAAA }
fc_t1, fx.elshift(6) = (out = 0x00000037), { 0x00000000, 0xAB6FBBC0, 0x5555AAAA }
fc_t1, fx.elshift(7) = (out = 0x0000006F), { 0x00000000, 0x56DF7780, 0x5555AAAA }
fc_t1, fx.elshift(8) = (out = 0x000000DE), { 0x00000000, 0xADBEEF00, 0x5555AAAA }
fc_t1, fx.elshift(9) = (out = 0x000001BD), { 0x00000000, 0x5B7DDE00, 0x5555AAAA }
fc_t1, fx.elshift(10) = (out = 0x0000037A), { 0x00000000, 0xB6FBBC00, 0x5555AAAA }
fc_t1, fx.elshift(11) = (out = 0x000006F5), { 0x00000000, 0x6DF77800, 0x5555AAAA }
fc_t1, fx.elshift(12) = (out = 0x00000DEA), { 0x00000000, 0xDBEEF000, 0x5555AAAA }
fc_t1, fx.elshift(13) = (out = 0x00001BD5), { 0x00000000, 0xB7DDE000, 0x5555AAAA }
fc_t1, fx.elshift(14) = (out = 0x000037AB), { 0x00000000, 0x6FBBC000, 0x5555AAAA }
fc_t1, fx.elshift(15) = (out = 0x00006F56), { 0x00000000, 0xDF778000, 0x5555AAAA }
fc_t1, fx.elshift(16) = (out = 0x0000DEAD), { 0x00000000, 0xBEEF0000, 0x5555AAAA }
fc_t1, fx.elshift(17) = (out = 0x0001BD5B), { 0x00000000, 0x7DDE0000, 0x5555AAAA }
fc_t1, fx.elshift(18) = (out = 0x00037AB6), { 0x00000000, 0xFBBC0000, 0x5555AAAA }
fc_t1, fx.elshift(19) = (out = 0x0006F56D), { 0x00000000, 0xF7780000, 0x5555AAAA }
fc_t1, fx.elshift(20) = (out = 0x000DEADB), { 0x00000000, 0xEEF00000, 0x5555AAAA }
fc_t1, fx.elshift(21) = (out = 0x001BD5B7), { 0x00000000, 0xDDE00000, 0x5555AAAA }
fc_t1, fx.elshift(22) = (out = 0x0037AB6F), { 0x00000000, 0xBBC00000, 0x5555AAAA }
fc_t1, fx.elshift(23) = (out = 0x006F56DF), { 0x00000000, 0x77800000, 0x5555AAAA }
fc_t1, fx.elshift(24) = (out = 0x00DEADBE), { 0x00000000, 0xEF000000, 0x5555AAAA }
fc_t1, fx.elshift(25) = (out = 0x01BD5B7D), { 0x00000000, 0xDE000000, 0x5555AAAA }
fc_t1, fx.elshift(26) = (out = 0x037AB6FB), { 0x00000000, 0xBC000000, 0x5555AAAA }
fc_t1, fx.elshift(27) = (out = 0x06F56DF7), { 0x00000000, 0x78000000, 0x5555AAAA }
fc_t1, fx.elshift(28) = (out = 0x0DEADBEE), { 0x00000000, 0xF0000000, 0x5555AAAA }
fc_t1, fx.elshift(29) = (out = 0x1BD5B7DD), { 0x00000000, 0xE0000000, 0x5555AAAA }
fc_t1, fx.elshift(30) = (out = 0x37AB6FBB), { 0x00000000, 0xC0000000, 0x5555AAAA }
fc_t1, fx.elshift(31) = (out = 0x6F56DF77), { 0x00000000, 0x80000000, 0x5555AAAA }
fc_t1, fx.elshift(32) = (out = 0xDEADBEEF), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(33) = (out = 0xBD5B7DDE), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(34) = (out = 0xFAB6FBBC), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(35) = (out = 0xF56DF778), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(36) = (out = 0xEADBEEF0), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(37) = (out = 0xD5B7DDE0), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(38) = (out = 0xAB6FBBC0), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(39) = (out = 0xD6DF7780), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(40) = (out = 0xADBEEF00), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(41) = (out = 0xDB7DDE00), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(42) = (out = 0xB6FBBC00), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(43) = (out = 0xEDF77800), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(44) = (out = 0xDBEEF000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(45) = (out = 0xB7DDE000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(46) = (out = 0xEFBBC000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(47) = (out = 0xDF778000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(48) = (out = 0xBEEF0000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(49) = (out = 0xFDDE0000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(50) = (out = 0xFBBC0000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(51) = (out = 0xF7780000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(52) = (out = 0xEEF00000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(53) = (out = 0xDDE00000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(54) = (out = 0xBBC00000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(55) = (out = 0xF7800000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(56) = (out = 0xEF000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(57) = (out = 0xDE000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(58) = (out = 0xBC000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(59) = (out = 0xF8000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(60) = (out = 0xF0000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(61) = (out = 0xE0000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(62) = (out = 0xC0000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(63) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.elshift(64) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(0) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.ershift(1) = (out = 0x80000000), { 0x00000000, 0x6F56DF77, 0x5555AAAA }
fc_t1, fx.ershift(2) = (out = 0xC0000000), { 0x00000000, 0x37AB6FBB, 0x5555AAAA }
fc_t1, fx.ershift(3) = (out = 0xE0000000), { 0x00000000, 0x1BD5B7DD, 0x5555AAAA }
fc_t1, fx.ershift(4) = (out = 0xF0000000), { 0x00000000, 0x0DEADBEE, 0x5555AAAA }
fc_t1, fx.ershift(5) = (out = 0x78000000), { 0x00000000, 0x06F56DF7, 0x5555AAAA }
fc_t1, fx.ershift(6) = (out = 0xBC000000), { 0x00000000, 0x037AB6FB, 0x5555AAAA }
fc_t1, fx.ershift(7) = (out = 0xDE000000), { 0x00000000, 0x01BD5B7D, 0x5555AAAA }
fc_t1, fx.ershift(8) = (out = 0xEF000000), { 0x00000000, 0x00DEADBE, 0x5555AAAA }
fc_t1, fx.ershift(9) = (out = 0x77800000), { 0x00000000, 0x006F56DF, 0x5555AAAA }
fc_t1, fx.ershift(10) = (out = 0xBBC00000), { 0x00000000, 0x0037AB6F, 0x5555AAAA }
fc_t1, fx.ershift(11) = (out = 0xDDE00000), { 0x00000000, 0x001BD5B7, 0x5555AAAA }
fc_t1, fx.ershift(12) = (out = 0xEEF00000), { 0x00000000, 0x000DEADB, 0x5555AAAA }
fc_t1, fx.ershift(13) = (out = 0xF7780000), { 0x00000000, 0x0006F56D, 0x5555AAAA }
fc_t1, fx.ershift(14) = (out = 0xFBBC0000), { 0x00000000, 0x00037AB6, 0x5555AAAA }
fc_t1, fx.ershift(15) = (out = 0x7DDE0000), { 0x00000000, 0x0001BD5B, 0x5555AAAA }
fc_t1, fx.ershift(16) = (out = 0xBEEF0000), { 0x00000000, 0x0000DEAD, 0x5555AAAA }
fc_t1, fx.ershift(17) = (out = 0xDF778000), { 0x00000000, 0x00006F56, 0x5555AAAA }
fc_t1, fx.ershift(18) = (out = 0x6FBBC000), { 0x00000000, 0x000037AB, 0x5555AAAA }
fc_t1, fx.ershift(19) = (out = 0xB7DDE000), { 0x00000000, 0x00001BD5, 0x5555AAAA }
fc_t1, fx.ershift(20) = (out = 0xDBEEF000), { 0x00000000, 0x00000DEA, 0x5555AAAA }
fc_t1, fx.ershift(21) = (out = 0x6DF77800), { 0x00000000, 0x000006F5, 0x5555AAAA }
fc_t1, fx.ershift(22) = (out = 0xB6FBBC00), { 0x00000000, 0x0000037A, 0x5555AAAA }
fc_t1, fx.ershift(23) = (out = 0x5B7DDE00), { 0x00000000, 0x000001BD, 0x5555AAAA }
fc_t1, fx.ershift(24) = (out = 0xADBEEF00), { 0x00000000, 0x000000DE, 0x5555AAAA }
fc_t1, fx.ershift(25) = (out = 0x56DF7780), { 0x00000000, 0x0000006F, 0x5555AAAA }
fc_t1, fx.ershift(26) = (out = 0xAB6FBBC0), { 0x00000000, 0x00000037, 0x5555AAAA }
fc_t1, fx.ershift(27) = (out = 0xD5B7DDE0), { 0x00000000, 0x0000001B, 0x5555AAAA }
fc_t1, fx.ershift(28) = (out = 0xEADBEEF0), { 0x00000000, 0x0000000D, 0x5555AAAA }
fc_t1, fx.ershift(29) = (out = 0xF56DF778), { 0x00000000, 0x00000006, 0x5555AAAA }
fc_t1, fx.ershift(30) = (out = 0x7AB6FBBC), { 0x00000000, 0x00000003, 0x5555AAAA }
fc_t1, fx.ershift(31) = (out = 0xBD5B7DDE), { 0x00000000, 0x00000001, 0x5555AAAA }
fc_t1, fx.ershift(32) = (out = 0xDEADBEEF), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(33) = (out = 0x6F56DF77), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(34) = (out = 0x37AB6FBB), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(35) = (out = 0x1BD5B7DD), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(36) = (out = 0x0DEADBEF), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(37) = (out = 0x06F56DF7), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(38) = (out = 0x037AB6FB), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(39) = (out = 0x01BD5B7D), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(40) = (out = 0x00DEADBF), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(41) = (out = 0x006F56DF), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(42) = (out = 0x0037AB6F), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(43) = (out = 0x001BD5B7), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(44) = (out = 0x000DEADB), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(45) = (out = 0x0006F56D), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(46) = (out = 0x00037AB7), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(47) = (out = 0x0001BD5B), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(48) = (out = 0x0000DEAD), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(49) = (out = 0x00006F57), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(50) = (out = 0x000037AB), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(51) = (out = 0x00001BD5), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(52) = (out = 0x00000DEB), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(53) = (out = 0x000006F5), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(54) = (out = 0x0000037B), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(55) = (out = 0x000001BD), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(56) = (out = 0x000000DF), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(57) = (out = 0x0000006F), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(58) = (out = 0x00000037), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(59) = (out = 0x0000001B), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(60) = (out = 0x0000000D), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(61) = (out = 0x00000007), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(62) = (out = 0x00000003), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(63) = (out = 0x00000001), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.ershift(64) = (out = 0x00000001), { 0x00000000, 0x00000000, 0x5555AAAA }
fc_t1, fx.lshift(0) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.lshift(1) = (out = 0x00000001), { 0x00000000, 0xBD5B7DDE, 0xAAAB5554 }
fc_t1, fx.lshift(2) = (out = 0x00000003), { 0x00000000, 0x7AB6FBBD, 0x5556AAA8 }
fc_t1, fx.lshift(3) = (out = 0x00000006), { 0x00000000, 0xF56DF77A, 0xAAAD5550 }
fc_t1, fx.lshift(4) = (out = 0x0000000D), { 0x00000000, 0xEADBEEF5, 0x555AAAA0 }
fc_t1, fx.lshift(5) = (out = 0x0000001B), { 0x00000000, 0xD5B7DDEA, 0xAAB55540 }
fc_t1, fx.lshift(6) = (out = 0x00000037), { 0x00000000, 0xAB6FBBD5, 0x556AAA80 }
fc_t1, fx.lshift(7) = (out = 0x0000006F), { 0x00000000, 0x56DF77AA, 0xAAD55500 }
fc_t1, fx.lshift(8) = (out = 0x000000DE), { 0x00000000, 0xADBEEF55, 0x55AAAA00 }
fc_t1, fx.lshift(9) = (out = 0x000001BD), { 0x00000000, 0x5B7DDEAA, 0xAB555400 }
fc_t1, fx.lshift(10) = (out = 0x0000037A), { 0x00000000, 0xB6FBBD55, 0x56AAA800 }
fc_t1, fx.lshift(11) = (out = 0x000006F5), { 0x00000000, 0x6DF77AAA, 0xAD555000 }
fc_t1, fx.lshift(12) = (out = 0x00000DEA), { 0x00000000, 0xDBEEF555, 0x5AAAA000 }
fc_t1, fx.lshift(13) = (out = 0x00001BD5), { 0x00000000, 0xB7DDEAAA, 0xB5554000 }
fc_t1, fx.lshift(14) = (out = 0x000037AB), { 0x00000000, 0x6FBBD555, 0x6AAA8000 }
fc_t1, fx.lshift(15) = (out = 0x00006F56), { 0x00000000, 0xDF77AAAA, 0xD5550000 }
fc_t1, fx.lshift(16) = (out = 0x0000DEAD), { 0x00000000, 0xBEEF5555, 0xAAAA0000 }
fc_t1, fx.lshift(17) = (out = 0x0001BD5B), { 0x00000000, 0x7DDEAAAB, 0x55540000 }
fc_t1, fx.lshift(18) = (out = 0x00037AB6), { 0x00000000, 0xFBBD5556, 0xAAA80000 }
fc_t1, fx.lshift(19) = (out = 0x0006F56D), { 0x00000000, 0xF77AAAAD, 0x55500000 }
fc_t1, fx.lshift(20) = (out = 0x000DEADB), { 0x00000000, 0xEEF5555A, 0xAAA00000 }
fc_t1, fx.lshift(21) = (out = 0x001BD5B7), { 0x00000000, 0xDDEAAAB5, 0x55400000 }
fc_t1, fx.lshift(22) = (out = 0x0037AB6F), { 0x00000000, 0xBBD5556A, 0xAA800000 }
fc_t1, fx.lshift(23) = (out = 0x006F56DF), { 0x00000000, 0x77AAAAD5, 0x55000000 }
fc_t1, fx.lshift(24) = (out = 0x00DEADBE), { 0x00000000, 0xEF5555AA, 0xAA000000 }
fc_t1, fx.lshift(25) = (out = 0x01BD5B7D), { 0x00000000, 0xDEAAAB55, 0x54000000 }
fc_t1, fx.lshift(26) = (out = 0x037AB6FB), { 0x00000000, 0xBD5556AA, 0xA8000000 }
fc_t1, fx.lshift(27) = (out = 0x06F56DF7), { 0x00000000, 0x7AAAAD55, 0x50000000 }
fc_t1, fx.lshift(28) = (out = 0x0DEADBEE), { 0x00000000, 0xF5555AAA, 0xA0000000 }
fc_t1, fx.lshift(29) = (out = 0x1BD5B7DD), { 0x00000000, 0xEAAAB555, 0x40000000 }
fc_t1, fx.lshift(30) = (out = 0x37AB6FBB), { 0x00000000, 0xD5556AAA, 0x80000000 }
fc_t1, fx.lshift(31) = (out = 0x6F56DF77), { 0x00000000, 0xAAAAD555, 0x00000000 }
fc_t1, fx.lshift(32) = (out = 0xDEADBEEF), { 0x00000000, 0x5555AAAA, 0x00000000 }
fc_t1, fx.lshift(33) = (out = 0xBD5B7DDE), { 0x00000000, 0xAAAB5554, 0x00000000 }
fc_t1, fx.lshift(34) = (out = 0xFAB6FBBD), { 0x00000000, 0x5556AAA8, 0x00000000 }
fc_t1, fx.lshift(35) = (out = 0xF56DF77A), { 0x00000000, 0xAAAD5550, 0x00000000 }
fc_t1, fx.lshift(36) = (out = 0xEADBEEF5), { 0x00000000, 0x555AAAA0, 0x00000000 }
fc_t1, fx.lshift(37) = (out = 0xD5B7DDEA), { 0x00000000, 0xAAB55540, 0x00000000 }
fc_t1, fx.lshift(38) = (out = 0xAB6FBBD5), { 0x00000000, 0x556AAA80, 0x00000000 }
fc_t1, fx.lshift(39) = (out = 0xD6DF77AA), { 0x00000000, 0xAAD55500, 0x00000000 }
fc_t1, fx.lshift(40) = (out = 0xADBEEF55), { 0x00000000, 0x55AAAA00, 0x00000000 }
fc_t1, fx.lshift(41) = (out = 0xDB7DDEAA), { 0x00000000, 0xAB555400, 0x00000000 }
fc_t1, fx.lshift(42) = (out = 0xB6FBBD55), { 0x00000000, 0x56AAA800, 0x00000000 }
fc_t1, fx.lshift(43) = (out = 0xEDF77AAA), { 0x00000000, 0xAD555000, 0x00000000 }
fc_t1, fx.lshift(44) = (out = 0xDBEEF555), { 0x00000000, 0x5AAAA000, 0x00000000 }
fc_t1, fx.lshift(45) = (out = 0xB7DDEAAA), { 0x00000000, 0xB5554000, 0x00000000 }
fc_t1, fx.lshift(46) = (out = 0xEFBBD555), { 0x00000000, 0x6AAA8000, 0x00000000 }
fc_t1, fx.lshift(47) = (out = 0xDF77AAAA), { 0x00000000, 0xD5550000, 0x00000000 }
fc_t1, fx.lshift(48) = (out = 0xBEEF5555), { 0x00000000, 0xAAAA0000, 0x00000000 }
fc_t1, fx.lshift(49) = (out = 0xFDDEAAAB), { 0x00000000, 0x55540000, 0x00000000 }
fc_t1, fx.lshift(50) = (out = 0xFBBD5556), { 0x00000000, 0xAAA80000, 0x00000000 }
fc_t1, fx.lshift(51) = (out = 0xF77AAAAD), { 0x00000000, 0x55500000, 0x00000000 }
fc_t1, fx.lshift(52) = (out = 0xEEF5555A), { 0x00000000, 0xAAA00000, 0x00000000 }
fc_t1, fx.lshift(53) = (out = 0xDDEAAAB5), { 0x00000000, 0x55400000, 0x00000000 }
fc_t1, fx.lshift(54) = (out = 0xBBD5556A), { 0x00000000, 0xAA800000, 0x00000000 }
fc_t1, fx.lshift(55) = (out = 0xF7AAAAD5), { 0x00000000, 0x55000000, 0x00000000 }
fc_t1, fx.lshift(56) = (out = 0xEF5555AA), { 0x00000000, 0xAA000000, 0x00000000 }
fc_t1, fx.lshift(57) = (out = 0xDEAAAB55), { 0x00000000, 0x54000000, 0x00000000 }
fc_t1, fx.lshift(58) = (out = 0xBD5556AA), { 0x00000000, 0xA8000000, 0x00000000 }
fc_t1, fx.lshift(59) = (out = 0xFAAAAD55), { 0x00000000, 0x50000000, 0x00000000 }
fc_t1, fx.lshift(60) = (out = 0xF5555AAA), { 0x00000000, 0xA0000000, 0x00000000 }
fc_t1, fx.lshift(61) = (out = 0xEAAAB555), { 0x00000000, 0x40000000, 0x00000000 }
fc_t1, fx.lshift(62) = (out = 0xD5556AAA), { 0x00000000, 0x80000000, 0x00000000 }
fc_t1, fx.lshift(63) = (out = 0xAAAAD555), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(64) = (out = 0xD555AAAA), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(65) = (out = 0xAAAB5554), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(66) = (out = 0xD556AAA8), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(67) = (out = 0xAAAD5550), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(68) = (out = 0xD55AAAA0), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(69) = (out = 0xAAB55540), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(70) = (out = 0xD56AAA80), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(71) = (out = 0xAAD55500), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(72) = (out = 0xD5AAAA00), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(73) = (out = 0xAB555400), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(74) = (out = 0xD6AAA800), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(75) = (out = 0xAD555000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(76) = (out = 0xDAAAA000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(77) = (out = 0xB5554000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(78) = (out = 0xEAAA8000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(79) = (out = 0xD5550000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(80) = (out = 0xAAAA0000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(81) = (out = 0xD5540000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(82) = (out = 0xAAA80000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(83) = (out = 0xD5500000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(84) = (out = 0xAAA00000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(85) = (out = 0xD5400000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(86) = (out = 0xAA800000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(87) = (out = 0xD5000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(88) = (out = 0xAA000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(89) = (out = 0xD4000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(90) = (out = 0xA8000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(91) = (out = 0xD0000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(92) = (out = 0xA0000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(93) = (out = 0xC0000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(94) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(95) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.lshift(96) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(0) = (out = 0x00000000), { 0x00000000, 0xDEADBEEF, 0x5555AAAA }
fc_t1, fx.rshift(1) = (out = 0x00000000), { 0x00000000, 0x6F56DF77, 0xAAAAD555 }
fc_t1, fx.rshift(2) = (out = 0x80000000), { 0x00000000, 0x37AB6FBB, 0xD5556AAA }
fc_t1, fx.rshift(3) = (out = 0x40000000), { 0x00000000, 0x1BD5B7DD, 0xEAAAB555 }
fc_t1, fx.rshift(4) = (out = 0xA0000000), { 0x00000000, 0x0DEADBEE, 0xF5555AAA }
fc_t1, fx.rshift(5) = (out = 0x50000000), { 0x00000000, 0x06F56DF7, 0x7AAAAD55 }
fc_t1, fx.rshift(6) = (out = 0xA8000000), { 0x00000000, 0x037AB6FB, 0xBD5556AA }
fc_t1, fx.rshift(7) = (out = 0x54000000), { 0x00000000, 0x01BD5B7D, 0xDEAAAB55 }
fc_t1, fx.rshift(8) = (out = 0xAA000000), { 0x00000000, 0x00DEADBE, 0xEF5555AA }
fc_t1, fx.rshift(9) = (out = 0x55000000), { 0x00000000, 0x006F56DF, 0x77AAAAD5 }
fc_t1, fx.rshift(10) = (out = 0xAA800000), { 0x00000000, 0x0037AB6F, 0xBBD5556A }
fc_t1, fx.rshift(11) = (out = 0x55400000), { 0x00000000, 0x001BD5B7, 0xDDEAAAB5 }
fc_t1, fx.rshift(12) = (out = 0xAAA00000), { 0x00000000, 0x000DEADB, 0xEEF5555A }
fc_t1, fx.rshift(13) = (out = 0x55500000), { 0x00000000, 0x0006F56D, 0xF77AAAAD }
fc_t1, fx.rshift(14) = (out = 0xAAA80000), { 0x00000000, 0x00037AB6, 0xFBBD5556 }
fc_t1, fx.rshift(15) = (out = 0x55540000), { 0x00000000, 0x0001BD5B, 0x7DDEAAAB }
fc_t1, fx.rshift(16) = (out = 0xAAAA0000), { 0x00000000, 0x0000DEAD, 0xBEEF5555 }
fc_t1, fx.rshift(17) = (out = 0xD5550000), { 0x00000000, 0x00006F56, 0xDF77AAAA }
fc_t1, fx.rshift(18) = (out = 0x6AAA8000), { 0x00000000, 0x000037AB, 0x6FBBD555 }
fc_t1, fx.rshift(19) = (out = 0xB5554000), { 0x00000000, 0x00001BD5, 0xB7DDEAAA }
fc_t1, fx.rshift(20) = (out = 0x5AAAA000), { 0x00000000, 0x00000DEA, 0xDBEEF555 }
fc_t1, fx.rshift(21) = (out = 0xAD555000), { 0x00000000, 0x000006F5, 0x6DF77AAA }
fc_t1, fx.rshift(22) = (out = 0x56AAA800), { 0x00000000, 0x0000037A, 0xB6FBBD55 }
fc_t1, fx.rshift(23) = (out = 0xAB555400), { 0x00000000, 0x000001BD, 0x5B7DDEAA }
fc_t1, fx.rshift(24) = (out = 0x55AAAA00), { 0x00000000, 0x000000DE, 0xADBEEF55 }
fc_t1, fx.rshift(25) = (out = 0xAAD55500), { 0x00000000, 0x0000006F, 0x56DF77AA }
fc_t1, fx.rshift(26) = (out = 0x556AAA80), { 0x00000000, 0x00000037, 0xAB6FBBD5 }
fc_t1, fx.rshift(27) = (out = 0xAAB55540), { 0x00000000, 0x0000001B, 0xD5B7DDEA }
fc_t1, fx.rshift(28) = (out = 0x555AAAA0), { 0x00000000, 0x0000000D, 0xEADBEEF5 }
fc_t1, fx.rshift(29) = (out = 0xAAAD5550), { 0x00000000, 0x00000006, 0xF56DF77A }
fc_t1, fx.rshift(30) = (out = 0x5556AAA8), { 0x00000000, 0x00000003, 0x7AB6FBBD }
fc_t1, fx.rshift(31) = (out = 0xAAAB5554), { 0x00000000, 0x00000001, 0xBD5B7DDE }
fc_t1, fx.rshift(32) = (out = 0x5555AAAA), { 0x00000000, 0x00000000, 0xDEADBEEF }
fc_t1, fx.rshift(33) = (out = 0xAAAAD555), { 0x00000000, 0x00000000, 0x6F56DF77 }
fc_t1, fx.rshift(34) = (out = 0xD5556AAB), { 0x00000000, 0x00000000, 0x37AB6FBB }
fc_t1, fx.rshift(35) = (out = 0xEAAAB555), { 0x00000000, 0x00000000, 0x1BD5B7DD }
fc_t1, fx.rshift(36) = (out = 0xF5555AAB), { 0x00000000, 0x00000000, 0x0DEADBEE }
fc_t1, fx.rshift(37) = (out = 0x7AAAAD55), { 0x00000000, 0x00000000, 0x06F56DF7 }
fc_t1, fx.rshift(38) = (out = 0xBD5556AB), { 0x00000000, 0x00000000, 0x037AB6FB }
fc_t1, fx.rshift(39) = (out = 0xDEAAAB55), { 0x00000000, 0x00000000, 0x01BD5B7D }
fc_t1, fx.rshift(40) = (out = 0xEF5555AB), { 0x00000000, 0x00000000, 0x00DEADBE }
fc_t1, fx.rshift(41) = (out = 0x77AAAAD5), { 0x00000000, 0x00000000, 0x006F56DF }
fc_t1, fx.rshift(42) = (out = 0xBBD5556B), { 0x00000000, 0x00000000, 0x0037AB6F }
fc_t1, fx.rshift(43) = (out = 0xDDEAAAB5), { 0x00000000, 0x00000000, 0x001BD5B7 }
fc_t1, fx.rshift(44) = (out = 0xEEF5555B), { 0x00000000, 0x00000000, 0x000DEADB }
fc_t1, fx.rshift(45) = (out = 0xF77AAAAD), { 0x00000000, 0x00000000, 0x0006F56D }
fc_t1, fx.rshift(46) = (out = 0xFBBD5557), { 0x00000000, 0x00000000, 0x00037AB6 }
fc_t1, fx.rshift(47) = (out = 0x7DDEAAAB), { 0x00000000, 0x00000000, 0x0001BD5B }
fc_t1, fx.rshift(48) = (out = 0xBEEF5555), { 0x00000000, 0x00000000, 0x0000DEAD }
fc_t1, fx.rshift(49) = (out = 0xDF77AAAB), { 0x00000000, 0x00000000, 0x00006F56 }
fc_t1, fx.rshift(50) = (out = 0x6FBBD555), { 0x00000000, 0x00000000, 0x000037AB }
fc_t1, fx.rshift(51) = (out = 0xB7DDEAAB), { 0x00000000, 0x00000000, 0x00001BD5 }
fc_t1, fx.rshift(52) = (out = 0xDBEEF555), { 0x00000000, 0x00000000, 0x00000DEA }
fc_t1, fx.rshift(53) = (out = 0x6DF77AAB), { 0x00000000, 0x00000000, 0x000006F5 }
fc_t1, fx.rshift(54) = (out = 0xB6FBBD55), { 0x00000000, 0x00000000, 0x0000037A }
fc_t1, fx.rshift(55) = (out = 0x5B7DDEAB), { 0x00000000, 0x00000000, 0x000001BD }
fc_t1, fx.rshift(56) = (out = 0xADBEEF55), { 0x00000000, 0x00000000, 0x000000DE }
fc_t1, fx.rshift(57) = (out = 0x56DF77AB), { 0x00000000, 0x00000000, 0x0000006F }
fc_t1, fx.rshift(58) = (out = 0xAB6FBBD5), { 0x00000000, 0x00000000, 0x00000037 }
fc_t1, fx.rshift(59) = (out = 0xD5B7DDEB), { 0x00000000, 0x00000000, 0x0000001B }
fc_t1, fx.rshift(60) = (out = 0xEADBEEF5), { 0x00000000, 0x00000000, 0x0000000D }
fc_t1, fx.rshift(61) = (out = 0xF56DF77B), { 0x00000000, 0x00000000, 0x00000006 }
fc_t1, fx.rshift(62) = (out = 0x7AB6FBBD), { 0x00000000, 0x00000000, 0x00000003 }
fc_t1, fx.rshift(63) = (out = 0xBD5B7DDF), { 0x00000000, 0x00000000, 0x00000001 }
fc_t1, fx.rshift(64) = (out = 0xDEADBEEF), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(65) = (out = 0x6F56DF77), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(66) = (out = 0x37AB6FBB), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(67) = (out = 0x1BD5B7DD), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(68) = (out = 0x0DEADBEF), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(69) = (out = 0x06F56DF7), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(70) = (out = 0x037AB6FB), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(71) = (out = 0x01BD5B7D), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(72) = (out = 0x00DEADBF), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(73) = (out = 0x006F56DF), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(74) = (out = 0x0037AB6F), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(75) = (out = 0x001BD5B7), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(76) = (out = 0x000DEADB), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(77) = (out = 0x0006F56D), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(78) = (out = 0x00037AB7), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(79) = (out = 0x0001BD5B), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(80) = (out = 0x0000DEAD), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(81) = (out = 0x00006F57), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(82) = (out = 0x000037AB), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(83) = (out = 0x00001BD5), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(84) = (out = 0x00000DEB), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(85) = (out = 0x000006F5), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(86) = (out = 0x0000037B), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(87) = (out = 0x000001BD), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(88) = (out = 0x000000DF), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(89) = (out = 0x0000006F), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(90) = (out = 0x00000037), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(91) = (out = 0x0000001B), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(92) = (out = 0x0000000D), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(93) = (out = 0x00000007), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(94) = (out = 0x00000003), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(95) = (out = 0x00000001), { 0x00000000, 0x00000000, 0x00000000 }
fc_t1, fx.rshift(96) = (out = 0x00000001), { 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx = { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.mlshift(0) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.mlshift(1) = (out = 0x00000001), { 0x002DBEEF, 0x5555AAAA, 0xDEAD7DDE, 0xAAAB5554 }
fc_t2, fx.mlshift(2) = (out = 0x00000002), { 0x002DBEEF, 0x5555AAAA, 0xDEADFBBD, 0x5556AAA8 }
fc_t2, fx.mlshift(3) = (out = 0x00000005), { 0x002DBEEF, 0x5555AAAA, 0xDEADF77A, 0xAAAD5550 }
fc_t2, fx.mlshift(4) = (out = 0x0000000B), { 0x002DBEEF, 0x5555AAAA, 0xDEADEEF5, 0x555AAAA0 }
fc_t2, fx.mlshift(5) = (out = 0x00000017), { 0x002DBEEF, 0x5555AAAA, 0xDEADDDEA, 0xAAB55540 }
fc_t2, fx.mlshift(6) = (out = 0x0000002F), { 0x002DBEEF, 0x5555AAAA, 0xDEADBBD5, 0x556AAA80 }
fc_t2, fx.mlshift(7) = (out = 0x0000005F), { 0x002DBEEF, 0x5555AAAA, 0xDEAD77AA, 0xAAD55500 }
fc_t2, fx.mlshift(8) = (out = 0x000000BE), { 0x002DBEEF, 0x5555AAAA, 0xDEADEF55, 0x55AAAA00 }
fc_t2, fx.mlshift(9) = (out = 0x0000017D), { 0x002DBEEF, 0x5555AAAA, 0xDEADDEAA, 0xAB555400 }
fc_t2, fx.mlshift(10) = (out = 0x000002FB), { 0x002DBEEF, 0x5555AAAA, 0xDEADBD55, 0x56AAA800 }
fc_t2, fx.mlshift(11) = (out = 0x000005F7), { 0x002DBEEF, 0x5555AAAA, 0xDEAD7AAA, 0xAD555000 }
fc_t2, fx.mlshift(12) = (out = 0x00000BEE), { 0x002DBEEF, 0x5555AAAA, 0xDEADF555, 0x5AAAA000 }
fc_t2, fx.mlshift(13) = (out = 0x000017DD), { 0x002DBEEF, 0x5555AAAA, 0xDEADEAAA, 0xB5554000 }
fc_t2, fx.mlshift(14) = (out = 0x00002FBB), { 0x002DBEEF, 0x5555AAAA, 0xDEADD555, 0x6AAA8000 }
fc_t2, fx.mlshift(15) = (out = 0x00005F77), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAAA, 0xD5550000 }
fc_t2, fx.mlshift(16) = (out = 0x0000BEEF), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5555, 0xAAAA0000 }
fc_t2, fx.mlshift(17) = (out = 0x00017DDE), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAAB, 0x55540000 }
fc_t2, fx.mlshift(18) = (out = 0x0002FBBD), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5556, 0xAAA80000 }
fc_t2, fx.mlshift(19) = (out = 0x0005F77A), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAAD, 0x55500000 }
fc_t2, fx.mlshift(20) = (out = 0x000BEEF5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD555A, 0xAAA00000 }
fc_t2, fx.mlshift(21) = (out = 0x0017DDEA), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAB5, 0x55400000 }
fc_t2, fx.mlshift(22) = (out = 0x002FBBD5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD556A, 0xAA800000 }
fc_t2, fx.mlshift(23) = (out = 0x005F77AA), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAD5, 0x55000000 }
fc_t2, fx.mlshift(24) = (out = 0x00BEEF55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD55AA, 0xAA000000 }
fc_t2, fx.mlshift(25) = (out = 0x017DDEAA), { 0x002DBEEF, 0x5555AAAA, 0xDEADAB55, 0x54000000 }
fc_t2, fx.mlshift(26) = (out = 0x02FBBD55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD56AA, 0xA8000000 }
fc_t2, fx.mlshift(27) = (out = 0x05F77AAA), { 0x002DBEEF, 0x5555AAAA, 0xDEADAD55, 0x50000000 }
fc_t2, fx.mlshift(28) = (out = 0x0BEEF555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5AAA, 0xA0000000 }
fc_t2, fx.mlshift(29) = (out = 0x17DDEAAA), { 0x002DBEEF, 0x5555AAAA, 0xDEADB555, 0x40000000 }
fc_t2, fx.mlshift(30) = (out = 0x2FBBD555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD6AAA, 0x80000000 }
fc_t2, fx.mlshift(31) = (out = 0x5F77AAAA), { 0x002DBEEF, 0x5555AAAA, 0xDEADD555, 0x00000000 }
fc_t2, fx.mlshift(32) = (out = 0xBEEF5555), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAAA, 0x00000000 }
fc_t2, fx.mlshift(33) = (out = 0xFDDEAAAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5554, 0x00000000 }
fc_t2, fx.mlshift(34) = (out = 0xFBBD5556), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAA8, 0x00000000 }
fc_t2, fx.mlshift(35) = (out = 0xF77AAAAD), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5550, 0x00000000 }
fc_t2, fx.mlshift(36) = (out = 0xEEF5555A), { 0x002DBEEF, 0x5555AAAA, 0xDEADAAA0, 0x00000000 }
fc_t2, fx.mlshift(37) = (out = 0xDDEAAAB5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5540, 0x00000000 }
fc_t2, fx.mlshift(38) = (out = 0xBBD5556A), { 0x002DBEEF, 0x5555AAAA, 0xDEADAA80, 0x00000000 }
fc_t2, fx.mlshift(39) = (out = 0xF7AAAAD5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5500, 0x00000000 }
fc_t2, fx.mlshift(40) = (out = 0xEF5555AA), { 0x002DBEEF, 0x5555AAAA, 0xDEADAA00, 0x00000000 }
fc_t2, fx.mlshift(41) = (out = 0xDEAAAB55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5400, 0x00000000 }
fc_t2, fx.mlshift(42) = (out = 0xBD5556AA), { 0x002DBEEF, 0x5555AAAA, 0xDEADA800, 0x00000000 }
fc_t2, fx.mlshift(43) = (out = 0xFAAAAD55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5000, 0x00000000 }
fc_t2, fx.mlshift(44) = (out = 0xF5555AAA), { 0x002DBEEF, 0x5555AAAA, 0xDEADA000, 0x00000000 }
fc_t2, fx.mlshift(45) = (out = 0xEAAAB555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD4000, 0x00000000 }
fc_t2, fx.mlshift(46) = (out = 0xD5556AAA), { 0x002DBEEF, 0x5555AAAA, 0xDEAD8000, 0x00000000 }
fc_t2, fx.mlshift(47) = (out = 0xAAAAD555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(48) = (out = 0xD555AAAA), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(49) = (out = 0xAAAB5554), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(50) = (out = 0xD556AAA8), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(51) = (out = 0xAAAD5550), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(52) = (out = 0xD55AAAA0), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(53) = (out = 0xAAB55540), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(54) = (out = 0xD56AAA80), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(55) = (out = 0xAAD55500), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(56) = (out = 0xD5AAAA00), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(57) = (out = 0xAB555400), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(58) = (out = 0xD6AAA800), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(59) = (out = 0xAD555000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(60) = (out = 0xDAAAA000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(61) = (out = 0xB5554000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(62) = (out = 0xEAAA8000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(63) = (out = 0xD5550000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(64) = (out = 0xAAAA0000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(65) = (out = 0xD5540000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(66) = (out = 0xAAA80000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(67) = (out = 0xD5500000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(68) = (out = 0xAAA00000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(69) = (out = 0xD5400000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(70) = (out = 0xAA800000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(71) = (out = 0xD5000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(72) = (out = 0xAA000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(73) = (out = 0xD4000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(74) = (out = 0xA8000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(75) = (out = 0xD0000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(76) = (out = 0xA0000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(77) = (out = 0xC0000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(78) = (out = 0x80000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(79) = (out = 0x80000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mlshift(80) = (out = 0x80000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(0) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.mrshift(1) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD5F77, 0xAAAAD555 }
fc_t2, fx.mrshift(2) = (out = 0x80000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD2FBB, 0xD5556AAA }
fc_t2, fx.mrshift(3) = (out = 0x40000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD17DD, 0xEAAAB555 }
fc_t2, fx.mrshift(4) = (out = 0xA0000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0BEE, 0xF5555AAA }
fc_t2, fx.mrshift(5) = (out = 0x50000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD05F7, 0x7AAAAD55 }
fc_t2, fx.mrshift(6) = (out = 0xA8000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD02FB, 0xBD5556AA }
fc_t2, fx.mrshift(7) = (out = 0x54000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD017D, 0xDEAAAB55 }
fc_t2, fx.mrshift(8) = (out = 0xAA000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD00BE, 0xEF5555AA }
fc_t2, fx.mrshift(9) = (out = 0x55000000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD005F, 0x77AAAAD5 }
fc_t2, fx.mrshift(10) = (out = 0xAA800000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD002F, 0xBBD5556A }
fc_t2, fx.mrshift(11) = (out = 0x55400000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0017, 0xDDEAAAB5 }
fc_t2, fx.mrshift(12) = (out = 0xAAA00000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD000B, 0xEEF5555A }
fc_t2, fx.mrshift(13) = (out = 0x55500000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0005, 0xF77AAAAD }
fc_t2, fx.mrshift(14) = (out = 0xAAA80000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0002, 0xFBBD5556 }
fc_t2, fx.mrshift(15) = (out = 0x55540000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0001, 0x7DDEAAAB }
fc_t2, fx.mrshift(16) = (out = 0xAAAA0000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0xBEEF5555 }
fc_t2, fx.mrshift(17) = (out = 0xD5550000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x5F77AAAA }
fc_t2, fx.mrshift(18) = (out = 0x6AAA8000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x2FBBD555 }
fc_t2, fx.mrshift(19) = (out = 0xB5554000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x17DDEAAA }
fc_t2, fx.mrshift(20) = (out = 0x5AAAA000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0BEEF555 }
fc_t2, fx.mrshift(21) = (out = 0xAD555000), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x05F77AAA }
fc_t2, fx.mrshift(22) = (out = 0x56AAA800), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x02FBBD55 }
fc_t2, fx.mrshift(23) = (out = 0xAB555400), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x017DDEAA }
fc_t2, fx.mrshift(24) = (out = 0x55AAAA00), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00BEEF55 }
fc_t2, fx.mrshift(25) = (out = 0xAAD55500), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x005F77AA }
fc_t2, fx.mrshift(26) = (out = 0x556AAA80), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x002FBBD5 }
fc_t2, fx.mrshift(27) = (out = 0xAAB55540), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0017DDEA }
fc_t2, fx.mrshift(28) = (out = 0x555AAAA0), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x000BEEF5 }
fc_t2, fx.mrshift(29) = (out = 0xAAAD5550), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0005F77A }
fc_t2, fx.mrshift(30) = (out = 0x5556AAA8), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0002FBBD }
fc_t2, fx.mrshift(31) = (out = 0xAAAB5554), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00017DDE }
fc_t2, fx.mrshift(32) = (out = 0x5555AAAA), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0000BEEF }
fc_t2, fx.mrshift(33) = (out = 0xAAAAD555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00005F77 }
fc_t2, fx.mrshift(34) = (out = 0xD5556AAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00002FBB }
fc_t2, fx.mrshift(35) = (out = 0xEAAAB555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x000017DD }
fc_t2, fx.mrshift(36) = (out = 0xF5555AAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000BEE }
fc_t2, fx.mrshift(37) = (out = 0x7AAAAD55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x000005F7 }
fc_t2, fx.mrshift(38) = (out = 0xBD5556AB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x000002FB }
fc_t2, fx.mrshift(39) = (out = 0xDEAAAB55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0000017D }
fc_t2, fx.mrshift(40) = (out = 0xEF5555AB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x000000BE }
fc_t2, fx.mrshift(41) = (out = 0x77AAAAD5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0000005F }
fc_t2, fx.mrshift(42) = (out = 0xBBD5556B), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0000002F }
fc_t2, fx.mrshift(43) = (out = 0xDDEAAAB5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000017 }
fc_t2, fx.mrshift(44) = (out = 0xEEF5555B), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x0000000B }
fc_t2, fx.mrshift(45) = (out = 0xF77AAAAD), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000005 }
fc_t2, fx.mrshift(46) = (out = 0xFBBD5557), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000002 }
fc_t2, fx.mrshift(47) = (out = 0x7DDEAAAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000001 }
fc_t2, fx.mrshift(48) = (out = 0xBEEF5555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(49) = (out = 0x5F77AAAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(50) = (out = 0x2FBBD555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(51) = (out = 0x17DDEAAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(52) = (out = 0x0BEEF555), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(53) = (out = 0x05F77AAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(54) = (out = 0x02FBBD55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(55) = (out = 0x017DDEAB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(56) = (out = 0x00BEEF55), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(57) = (out = 0x005F77AB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(58) = (out = 0x002FBBD5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(59) = (out = 0x0017DDEB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(60) = (out = 0x000BEEF5), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(61) = (out = 0x0005F77B), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(62) = (out = 0x0002FBBD), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(63) = (out = 0x00017DDF), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(64) = (out = 0x0000BEEF), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(65) = (out = 0x00005F77), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(66) = (out = 0x00002FBB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(67) = (out = 0x000017DD), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(68) = (out = 0x00000BEF), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(69) = (out = 0x000005F7), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(70) = (out = 0x000002FB), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(71) = (out = 0x0000017D), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(72) = (out = 0x000000BF), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(73) = (out = 0x0000005F), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(74) = (out = 0x0000002F), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(75) = (out = 0x00000017), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(76) = (out = 0x0000000B), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(77) = (out = 0x00000005), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(78) = (out = 0x00000003), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(79) = (out = 0x00000001), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.mrshift(80) = (out = 0x00000001), { 0x002DBEEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t2, fx.elshift(0) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.elshift(1) = (out = 0x00000000), { 0x001B7DDE, 0xAAAB5555, 0xBD5ABEEF, 0x5555AAAA }
fc_t2, fx.elshift(2) = (out = 0x00000000), { 0x0036FBBD, 0x5556AAAB, 0x7AB4BEEF, 0x5555AAAA }
fc_t2, fx.elshift(3) = (out = 0x00000000), { 0x002DF77A, 0xAAAD5556, 0xF568BEEF, 0x5555AAAA }
fc_t2, fx.elshift(4) = (out = 0x00000000), { 0x001BEEF5, 0x555AAAAD, 0xEAD0BEEF, 0x5555AAAA }
fc_t2, fx.elshift(5) = (out = 0x00000000), { 0x0037DDEA, 0xAAB5555B, 0xD5A0BEEF, 0x5555AAAA }
fc_t2, fx.elshift(6) = (out = 0x00000000), { 0x002FBBD5, 0x556AAAB7, 0xAB40BEEF, 0x5555AAAA }
fc_t2, fx.elshift(7) = (out = 0x00000000), { 0x001F77AA, 0xAAD5556F, 0x5680BEEF, 0x5555AAAA }
fc_t2, fx.elshift(8) = (out = 0x00000000), { 0x003EEF55, 0x55AAAADE, 0xAD00BEEF, 0x5555AAAA }
fc_t2, fx.elshift(9) = (out = 0x00000000), { 0x003DDEAA, 0xAB5555BD, 0x5A00BEEF, 0x5555AAAA }
fc_t2, fx.elshift(10) = (out = 0x00000000), { 0x003BBD55, 0x56AAAB7A, 0xB400BEEF, 0x5555AAAA }
fc_t2, fx.elshift(11) = (out = 0x00000001), { 0x00377AAA, 0xAD5556F5, 0x6800BEEF, 0x5555AAAA }
fc_t2, fx.elshift(12) = (out = 0x00000002), { 0x002EF555, 0x5AAAADEA, 0xD000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(13) = (out = 0x00000005), { 0x001DEAAA, 0xB5555BD5, 0xA000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(14) = (out = 0x0000000B), { 0x003BD555, 0x6AAAB7AB, 0x4000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(15) = (out = 0x00000016), { 0x0037AAAA, 0xD5556F56, 0x8000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(16) = (out = 0x0000002D), { 0x002F5555, 0xAAAADEAD, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(17) = (out = 0x0000005B), { 0x001EAAAB, 0x5555BD5A, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(18) = (out = 0x000000B6), { 0x003D5556, 0xAAAB7AB4, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(19) = (out = 0x0000016D), { 0x003AAAAD, 0x5556F568, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(20) = (out = 0x000002DB), { 0x0035555A, 0xAAADEAD0, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(21) = (out = 0x000005B7), { 0x002AAAB5, 0x555BD5A0, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(22) = (out = 0x00000B6F), { 0x0015556A, 0xAAB7AB40, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(23) = (out = 0x000016DF), { 0x002AAAD5, 0x556F5680, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(24) = (out = 0x00002DBE), { 0x001555AA, 0xAADEAD00, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(25) = (out = 0x00005B7D), { 0x002AAB55, 0x55BD5A00, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(26) = (out = 0x0000B6FB), { 0x001556AA, 0xAB7AB400, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(27) = (out = 0x00016DF7), { 0x002AAD55, 0x56F56800, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(28) = (out = 0x0002DBEE), { 0x00155AAA, 0xADEAD000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(29) = (out = 0x0005B7DD), { 0x002AB555, 0x5BD5A000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(30) = (out = 0x000B6FBB), { 0x00156AAA, 0xB7AB4000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(31) = (out = 0x0016DF77), { 0x002AD555, 0x6F568000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(32) = (out = 0x000DBEEF), { 0x0015AAAA, 0xDEAD0000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(33) = (out = 0x001B7DDE), { 0x002B5555, 0xBD5A0000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(34) = (out = 0x0016FBBD), { 0x0016AAAB, 0x7AB40000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(35) = (out = 0x000DF77A), { 0x002D5556, 0xF5680000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(36) = (out = 0x001BEEF5), { 0x001AAAAD, 0xEAD00000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(37) = (out = 0x0017DDEA), { 0x0035555B, 0xD5A00000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(38) = (out = 0x000FBBD5), { 0x002AAAB7, 0xAB400000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(39) = (out = 0x001F77AA), { 0x0015556F, 0x56800000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(40) = (out = 0x001EEF55), { 0x002AAADE, 0xAD000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(41) = (out = 0x001DDEAA), { 0x001555BD, 0x5A000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(42) = (out = 0x801BBD55), { 0x002AAB7A, 0xB4000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(43) = (out = 0x80177AAA), { 0x001556F5, 0x68000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(44) = (out = 0x800EF555), { 0x002AADEA, 0xD0000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(45) = (out = 0x801DEAAA), { 0x00155BD5, 0xA0000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(46) = (out = 0x801BD555), { 0x002AB7AB, 0x40000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(47) = (out = 0x8017AAAA), { 0x00156F56, 0x80000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(48) = (out = 0x800F5555), { 0x002ADEAD, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(49) = (out = 0x801EAAAB), { 0x0015BD5A, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(50) = (out = 0x801D5556), { 0x002B7AB4, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(51) = (out = 0x801AAAAD), { 0x0016F568, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(52) = (out = 0x8015555A), { 0x002DEAD0, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(53) = (out = 0x800AAAB5), { 0x001BD5A0, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(54) = (out = 0x8015556A), { 0x0037AB40, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(55) = (out = 0x800AAAD5), { 0x002F5680, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(56) = (out = 0x801555AA), { 0x001EAD00, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(57) = (out = 0x800AAB55), { 0x003D5A00, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(58) = (out = 0x801556AA), { 0x003AB400, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(59) = (out = 0x800AAD55), { 0x00356800, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(60) = (out = 0x80155AAA), { 0x002AD000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(61) = (out = 0x800AB555), { 0x0015A000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(62) = (out = 0x80156AAA), { 0x002B4000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(63) = (out = 0x800AD555), { 0x00168000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(64) = (out = 0x8015AAAA), { 0x002D0000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(65) = (out = 0x800B5555), { 0x001A0000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(66) = (out = 0x8016AAAB), { 0x00340000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(67) = (out = 0x800D5556), { 0x00280000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(68) = (out = 0x801AAAAD), { 0x00100000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(69) = (out = 0x8015555B), { 0x00200000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(70) = (out = 0x800AAAB7), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(71) = (out = 0x8015556F), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(72) = (out = 0x800AAADE), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(73) = (out = 0x801555BD), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(74) = (out = 0x800AAB7A), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(75) = (out = 0x801556F5), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(76) = (out = 0x800AADEA), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(77) = (out = 0x80155BD5), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(78) = (out = 0x800AB7AB), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(79) = (out = 0x80156F56), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(80) = (out = 0x800ADEAD), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(81) = (out = 0x8015BD5A), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(82) = (out = 0x800B7AB4), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(83) = (out = 0x8016F568), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(84) = (out = 0x800DEAD0), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(85) = (out = 0x801BD5A0), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(86) = (out = 0x8017AB40), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(87) = (out = 0x800F5680), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(88) = (out = 0x801EAD00), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(89) = (out = 0x801D5A00), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(90) = (out = 0x801AB400), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(91) = (out = 0x80156800), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(92) = (out = 0x800AD000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(93) = (out = 0x8015A000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(94) = (out = 0x800B4000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(95) = (out = 0x80168000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(96) = (out = 0x800D0000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(97) = (out = 0x801A0000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(98) = (out = 0x80140000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(99) = (out = 0x80080000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(100) = (out = 0x80100000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(101) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.elshift(102) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t2, fx.ershift(0) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.ershift(1) = (out = 0x00000000), { 0x0016DF77, 0xAAAAD555, 0x6F56DF77, 0x5555AAAA }
fc_t2, fx.ershift(2) = (out = 0x80000000), { 0x000B6FBB, 0xD5556AAA, 0xB7AB6FBB, 0x5555AAAA }
fc_t2, fx.ershift(3) = (out = 0x40000000), { 0x0005B7DD, 0xEAAAB555, 0x5BD5B7DD, 0x5555AAAA }
fc_t2, fx.ershift(4) = (out = 0xA0000000), { 0x0002DBEE, 0xF5555AAA, 0xADEADBEE, 0x5555AAAA }
fc_t2, fx.ershift(5) = (out = 0x50000000), { 0x00016DF7, 0x7AAAAD55, 0x56F56DF7, 0x5555AAAA }
fc_t2, fx.ershift(6) = (out = 0xA8000000), { 0x0000B6FB, 0xBD5556AA, 0xAB7AB6FB, 0x5555AAAA }
fc_t2, fx.ershift(7) = (out = 0x54000000), { 0x00005B7D, 0xDEAAAB55, 0x55BD5B7D, 0x5555AAAA }
fc_t2, fx.ershift(8) = (out = 0xAA000000), { 0x00002DBE, 0xEF5555AA, 0xAADEADBE, 0x5555AAAA }
fc_t2, fx.ershift(9) = (out = 0x55000000), { 0x000016DF, 0x77AAAAD5, 0x556F56DF, 0x5555AAAA }
fc_t2, fx.ershift(10) = (out = 0xAA800000), { 0x00000B6F, 0xBBD5556A, 0xAAB7AB6F, 0x5555AAAA }
fc_t2, fx.ershift(11) = (out = 0x55400000), { 0x000005B7, 0xDDEAAAB5, 0x555BD5B7, 0x5555AAAA }
fc_t2, fx.ershift(12) = (out = 0xAAA00000), { 0x000002DB, 0xEEF5555A, 0xAAADEADB, 0x5555AAAA }
fc_t2, fx.ershift(13) = (out = 0x55500000), { 0x0000016D, 0xF77AAAAD, 0x5556F56D, 0x5555AAAA }
fc_t2, fx.ershift(14) = (out = 0xAAA80000), { 0x000000B6, 0xFBBD5556, 0xAAAB7AB6, 0x5555AAAA }
fc_t2, fx.ershift(15) = (out = 0x55540000), { 0x0000005B, 0x7DDEAAAB, 0x5555BD5B, 0x5555AAAA }
fc_t2, fx.ershift(16) = (out = 0xAAAA0000), { 0x0000002D, 0xBEEF5555, 0xAAAADEAD, 0x5555AAAA }
fc_t2, fx.ershift(17) = (out = 0xD5550000), { 0x00000016, 0xDF77AAAA, 0xD5556F56, 0x5555AAAA }
fc_t2, fx.ershift(18) = (out = 0x6AAA8000), { 0x0000000B, 0x6FBBD555, 0x6AAAB7AB, 0x5555AAAA }
fc_t2, fx.ershift(19) = (out = 0xB5554000), { 0x00000005, 0xB7DDEAAA, 0xB5555BD5, 0x5555AAAA }
fc_t2, fx.ershift(20) = (out = 0x5AAAA000), { 0x00000002, 0xDBEEF555, 0x5AAAADEA, 0x5555AAAA }
fc_t2, fx.ershift(21) = (out = 0xAD555000), { 0x00000001, 0x6DF77AAA, 0xAD5556F5, 0x5555AAAA }
fc_t2, fx.ershift(22) = (out = 0x56AAA800), { 0x00000000, 0xB6FBBD55, 0x56AAAB7A, 0x5555AAAA }
fc_t2, fx.ershift(23) = (out = 0xAB555400), { 0x00000000, 0x5B7DDEAA, 0xAB5555BD, 0x5555AAAA }
fc_t2, fx.ershift(24) = (out = 0x55AAAA00), { 0x00000000, 0x2DBEEF55, 0x55AAAADE, 0x5555AAAA }
fc_t2, fx.ershift(25) = (out = 0xAAD55500), { 0x00000000, 0x16DF77AA, 0xAAD5556F, 0x5555AAAA }
fc_t2, fx.ershift(26) = (out = 0x556AAA80), { 0x00000000, 0x0B6FBBD5, 0x556AAAB7, 0x5555AAAA }
fc_t2, fx.ershift(27) = (out = 0xAAB55540), { 0x00000000, 0x05B7DDEA, 0xAAB5555B, 0x5555AAAA }
fc_t2, fx.ershift(28) = (out = 0x555AAAA0), { 0x00000000, 0x02DBEEF5, 0x555AAAAD, 0x5555AAAA }
fc_t2, fx.ershift(29) = (out = 0xAAAD5550), { 0x00000000, 0x016DF77A, 0xAAAD5556, 0x5555AAAA }
fc_t2, fx.ershift(30) = (out = 0x5556AAA8), { 0x00000000, 0x00B6FBBD, 0x5556AAAB, 0x5555AAAA }
fc_t2, fx.ershift(31) = (out = 0xAAAB5554), { 0x00000000, 0x005B7DDE, 0xAAAB5555, 0x5555AAAA }
fc_t2, fx.ershift(32) = (out = 0x5555AAAA), { 0x00000000, 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF }
fc_t2, fx.ershift(33) = (out = 0xAAAAD555), { 0x00000000, 0x0016DF77, 0xAAAAD555, 0x6F56DF77 }
fc_t2, fx.ershift(34) = (out = 0xD5556AAB), { 0x00000000, 0x000B6FBB, 0xD5556AAA, 0xB7AB6FBB }
fc_t2, fx.ershift(35) = (out = 0xEAAAB555), { 0x00000000, 0x0005B7DD, 0xEAAAB555, 0x5BD5B7DD }
fc_t2, fx.ershift(36) = (out = 0xF5555AAB), { 0x00000000, 0x0002DBEE, 0xF5555AAA, 0xADEADBEE }
fc_t2, fx.ershift(37) = (out = 0x7AAAAD55), { 0x00000000, 0x00016DF7, 0x7AAAAD55, 0x56F56DF7 }
fc_t2, fx.ershift(38) = (out = 0xBD5556AB), { 0x00000000, 0x0000B6FB, 0xBD5556AA, 0xAB7AB6FB }
fc_t2, fx.ershift(39) = (out = 0xDEAAAB55), { 0x00000000, 0x00005B7D, 0xDEAAAB55, 0x55BD5B7D }
fc_t2, fx.ershift(40) = (out = 0xEF5555AB), { 0x00000000, 0x00002DBE, 0xEF5555AA, 0xAADEADBE }
fc_t2, fx.ershift(41) = (out = 0x77AAAAD5), { 0x00000000, 0x000016DF, 0x77AAAAD5, 0x556F56DF }
fc_t2, fx.ershift(42) = (out = 0xBBD5556B), { 0x00000000, 0x00000B6F, 0xBBD5556A, 0xAAB7AB6F }
fc_t2, fx.ershift(43) = (out = 0xDDEAAAB5), { 0x00000000, 0x000005B7, 0xDDEAAAB5, 0x555BD5B7 }
fc_t2, fx.ershift(44) = (out = 0xEEF5555B), { 0x00000000, 0x000002DB, 0xEEF5555A, 0xAAADEADB }
fc_t2, fx.ershift(45) = (out = 0xF77AAAAD), { 0x00000000, 0x0000016D, 0xF77AAAAD, 0x5556F56D }
fc_t2, fx.ershift(46) = (out = 0xFBBD5557), { 0x00000000, 0x000000B6, 0xFBBD5556, 0xAAAB7AB6 }
fc_t2, fx.ershift(47) = (out = 0x7DDEAAAB), { 0x00000000, 0x0000005B, 0x7DDEAAAB, 0x5555BD5B }
fc_t2, fx.ershift(48) = (out = 0xBEEF5555), { 0x00000000, 0x0000002D, 0xBEEF5555, 0xAAAADEAD }
fc_t2, fx.ershift(49) = (out = 0xDF77AAAB), { 0x00000000, 0x00000016, 0xDF77AAAA, 0xD5556F56 }
fc_t2, fx.ershift(50) = (out = 0x6FBBD555), { 0x00000000, 0x0000000B, 0x6FBBD555, 0x6AAAB7AB }
fc_t2, fx.ershift(51) = (out = 0xB7DDEAAB), { 0x00000000, 0x00000005, 0xB7DDEAAA, 0xB5555BD5 }
fc_t2, fx.ershift(52) = (out = 0xDBEEF555), { 0x00000000, 0x00000002, 0xDBEEF555, 0x5AAAADEA }
fc_t2, fx.ershift(53) = (out = 0x6DF77AAB), { 0x00000000, 0x00000001, 0x6DF77AAA, 0xAD5556F5 }
fc_t2, fx.ershift(54) = (out = 0xB6FBBD55), { 0x00000000, 0x00000000, 0xB6FBBD55, 0x56AAAB7A }
fc_t2, fx.ershift(55) = (out = 0x5B7DDEAB), { 0x00000000, 0x00000000, 0x5B7DDEAA, 0xAB5555BD }
fc_t2, fx.ershift(56) = (out = 0xADBEEF55), { 0x00000000, 0x00000000, 0x2DBEEF55, 0x55AAAADE }
fc_t2, fx.ershift(57) = (out = 0x56DF77AB), { 0x00000000, 0x00000000, 0x16DF77AA, 0xAAD5556F }
fc_t2, fx.ershift(58) = (out = 0xAB6FBBD5), { 0x00000000, 0x00000000, 0x0B6FBBD5, 0x556AAAB7 }
fc_t2, fx.ershift(59) = (out = 0xD5B7DDEB), { 0x00000000, 0x00000000, 0x05B7DDEA, 0xAAB5555B }
fc_t2, fx.ershift(60) = (out = 0xEADBEEF5), { 0x00000000, 0x00000000, 0x02DBEEF5, 0x555AAAAD }
fc_t2, fx.ershift(61) = (out = 0xF56DF77B), { 0x00000000, 0x00000000, 0x016DF77A, 0xAAAD5556 }
fc_t2, fx.ershift(62) = (out = 0x7AB6FBBD), { 0x00000000, 0x00000000, 0x00B6FBBD, 0x5556AAAB }
fc_t2, fx.ershift(63) = (out = 0xBD5B7DDF), { 0x00000000, 0x00000000, 0x005B7DDE, 0xAAAB5555 }
fc_t2, fx.ershift(64) = (out = 0xDEADBEEF), { 0x00000000, 0x00000000, 0x002DBEEF, 0x5555AAAA }
fc_t2, fx.ershift(65) = (out = 0x6F56DF77), { 0x00000000, 0x00000000, 0x0016DF77, 0xAAAAD555 }
fc_t2, fx.ershift(66) = (out = 0xB7AB6FBB), { 0x00000000, 0x00000000, 0x000B6FBB, 0xD5556AAA }
fc_t2, fx.ershift(67) = (out = 0x5BD5B7DD), { 0x00000000, 0x00000000, 0x0005B7DD, 0xEAAAB555 }
fc_t2, fx.ershift(68) = (out = 0xADEADBEF), { 0x00000000, 0x00000000, 0x0002DBEE, 0xF5555AAA }
fc_t2, fx.ershift(69) = (out = 0x56F56DF7), { 0x00000000, 0x00000000, 0x00016DF7, 0x7AAAAD55 }
fc_t2, fx.ershift(70) = (out = 0xAB7AB6FB), { 0x00000000, 0x00000000, 0x0000B6FB, 0xBD5556AA }
fc_t2, fx.ershift(71) = (out = 0x55BD5B7D), { 0x00000000, 0x00000000, 0x00005B7D, 0xDEAAAB55 }
fc_t2, fx.ershift(72) = (out = 0xAADEADBF), { 0x00000000, 0x00000000, 0x00002DBE, 0xEF5555AA }
fc_t2, fx.ershift(73) = (out = 0x556F56DF), { 0x00000000, 0x00000000, 0x000016DF, 0x77AAAAD5 }
fc_t2, fx.ershift(74) = (out = 0xAAB7AB6F), { 0x00000000, 0x00000000, 0x00000B6F, 0xBBD5556A }
fc_t2, fx.ershift(75) = (out = 0x555BD5B7), { 0x00000000, 0x00000000, 0x000005B7, 0xDDEAAAB5 }
fc_t2, fx.ershift(76) = (out = 0xAAADEADB), { 0x00000000, 0x00000000, 0x000002DB, 0xEEF5555A }
fc_t2, fx.ershift(77) = (out = 0x5556F56D), { 0x00000000, 0x00000000, 0x0000016D, 0xF77AAAAD }
fc_t2, fx.ershift(78) = (out = 0xAAAB7AB7), { 0x00000000, 0x00000000, 0x000000B6, 0xFBBD5556 }
fc_t2, fx.ershift(79) = (out = 0x5555BD5B), { 0x00000000, 0x00000000, 0x0000005B, 0x7DDEAAAB }
fc_t2, fx.ershift(80) = (out = 0xAAAADEAD), { 0x00000000, 0x00000000, 0x0000002D, 0xBEEF5555 }
fc_t2, fx.ershift(81) = (out = 0xD5556F57), { 0x00000000, 0x00000000, 0x00000016, 0xDF77AAAA }
fc_t2, fx.ershift(82) = (out = 0x6AAAB7AB), { 0x00000000, 0x00000000, 0x0000000B, 0x6FBBD555 }
fc_t2, fx.ershift(83) = (out = 0xB5555BD5), { 0x00000000, 0x00000000, 0x00000005, 0xB7DDEAAA }
fc_t2, fx.ershift(84) = (out = 0x5AAAADEB), { 0x00000000, 0x00000000, 0x00000002, 0xDBEEF555 }
fc_t2, fx.ershift(85) = (out = 0xAD5556F5), { 0x00000000, 0x00000000, 0x00000001, 0x6DF77AAA }
fc_t2, fx.ershift(86) = (out = 0x56AAAB7B), { 0x00000000, 0x00000000, 0x00000000, 0xB6FBBD55 }
fc_t2, fx.ershift(87) = (out = 0xAB5555BD), { 0x00000000, 0x00000000, 0x00000000, 0x5B7DDEAA }
fc_t2, fx.ershift(88) = (out = 0x55AAAADF), { 0x00000000, 0x00000000, 0x00000000, 0x2DBEEF55 }
fc_t2, fx.ershift(89) = (out = 0xAAD5556F), { 0x00000000, 0x00000000, 0x00000000, 0x16DF77AA }
fc_t2, fx.ershift(90) = (out = 0x556AAAB7), { 0x00000000, 0x00000000, 0x00000000, 0x0B6FBBD5 }
fc_t2, fx.ershift(91) = (out = 0xAAB5555B), { 0x00000000, 0x00000000, 0x00000000, 0x05B7DDEA }
fc_t2, fx.ershift(92) = (out = 0x555AAAAD), { 0x00000000, 0x00000000, 0x00000000, 0x02DBEEF5 }
fc_t2, fx.ershift(93) = (out = 0xAAAD5557), { 0x00000000, 0x00000000, 0x00000000, 0x016DF77A }
fc_t2, fx.ershift(94) = (out = 0x5556AAAB), { 0x00000000, 0x00000000, 0x00000000, 0x00B6FBBD }
fc_t2, fx.ershift(95) = (out = 0xAAAB5555), { 0x00000000, 0x00000000, 0x00000000, 0x005B7DDE }
fc_t2, fx.ershift(96) = (out = 0x5555AAAB), { 0x00000000, 0x00000000, 0x00000000, 0x002DBEEF }
fc_t2, fx.ershift(97) = (out = 0xAAAAD555), { 0x00000000, 0x00000000, 0x00000000, 0x0016DF77 }
fc_t2, fx.ershift(98) = (out = 0xD5556AAB), { 0x00000000, 0x00000000, 0x00000000, 0x000B6FBB }
fc_t2, fx.ershift(99) = (out = 0xEAAAB555), { 0x00000000, 0x00000000, 0x00000000, 0x0005B7DD }
fc_t2, fx.ershift(100) = (out = 0xF5555AAB), { 0x00000000, 0x00000000, 0x00000000, 0x0002DBEE }
fc_t2, fx.ershift(101) = (out = 0x7AAAAD55), { 0x00000000, 0x00000000, 0x00000000, 0x00016DF7 }
fc_t2, fx.ershift(102) = (out = 0xBD5556AB), { 0x00000000, 0x00000000, 0x00000000, 0x0000B6FB }
fc_t2, fx.lshift(0) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.lshift(1) = (out = 0x00000001), { 0x001B7DDE, 0xAAAB5555, 0xBD5B7DDE, 0xAAAB5554 }
fc_t2, fx.lshift(2) = (out = 0x00000002), { 0x0036FBBD, 0x5556AAAB, 0x7AB6FBBD, 0x5556AAA8 }
fc_t2, fx.lshift(3) = (out = 0x00000005), { 0x002DF77A, 0xAAAD5556, 0xF56DF77A, 0xAAAD5550 }
fc_t2, fx.lshift(4) = (out = 0x0000000B), { 0x001BEEF5, 0x555AAAAD, 0xEADBEEF5, 0x555AAAA0 }
fc_t2, fx.lshift(5) = (out = 0x00000016), { 0x0037DDEA, 0xAAB5555B, 0xD5B7DDEA, 0xAAB55540 }
fc_t2, fx.lshift(6) = (out = 0x0000002D), { 0x002FBBD5, 0x556AAAB7, 0xAB6FBBD5, 0x556AAA80 }
fc_t2, fx.lshift(7) = (out = 0x0000005B), { 0x001F77AA, 0xAAD5556F, 0x56DF77AA, 0xAAD55500 }
fc_t2, fx.lshift(8) = (out = 0x000000B6), { 0x003EEF55, 0x55AAAADE, 0xADBEEF55, 0x55AAAA00 }
fc_t2, fx.lshift(9) = (out = 0x0000016D), { 0x003DDEAA, 0xAB5555BD, 0x5B7DDEAA, 0xAB555400 }
fc_t2, fx.lshift(10) = (out = 0x000002DB), { 0x003BBD55, 0x56AAAB7A, 0xB6FBBD55, 0x56AAA800 }
fc_t2, fx.lshift(11) = (out = 0x000005B7), { 0x00377AAA, 0xAD5556F5, 0x6DF77AAA, 0xAD555000 }
fc_t2, fx.lshift(12) = (out = 0x00000B6F), { 0x002EF555, 0x5AAAADEA, 0xDBEEF555, 0x5AAAA000 }
fc_t2, fx.lshift(13) = (out = 0x000016DF), { 0x001DEAAA, 0xB5555BD5, 0xB7DDEAAA, 0xB5554000 }
fc_t2, fx.lshift(14) = (out = 0x00002DBE), { 0x003BD555, 0x6AAAB7AB, 0x6FBBD555, 0x6AAA8000 }
fc_t2, fx.lshift(15) = (out = 0x00005B7D), { 0x0037AAAA, 0xD5556F56, 0xDF77AAAA, 0xD5550000 }
fc_t2, fx.lshift(16) = (out = 0x0000B6FB), { 0x002F5555, 0xAAAADEAD, 0xBEEF5555, 0xAAAA0000 }
fc_t2, fx.lshift(17) = (out = 0x00016DF7), { 0x001EAAAB, 0x5555BD5B, 0x7DDEAAAB, 0x55540000 }
fc_t2, fx.lshift(18) = (out = 0x0002DBEE), { 0x003D5556, 0xAAAB7AB6, 0xFBBD5556, 0xAAA80000 }
fc_t2, fx.lshift(19) = (out = 0x0005B7DD), { 0x003AAAAD, 0x5556F56D, 0xF77AAAAD, 0x55500000 }
fc_t2, fx.lshift(20) = (out = 0x000B6FBB), { 0x0035555A, 0xAAADEADB, 0xEEF5555A, 0xAAA00000 }
fc_t2, fx.lshift(21) = (out = 0x0016DF77), { 0x002AAAB5, 0x555BD5B7, 0xDDEAAAB5, 0x55400000 }
fc_t2, fx.lshift(22) = (out = 0x002DBEEF), { 0x0015556A, 0xAAB7AB6F, 0xBBD5556A, 0xAA800000 }
fc_t2, fx.lshift(23) = (out = 0x005B7DDE), { 0x002AAAD5, 0x556F56DF, 0x77AAAAD5, 0x55000000 }
fc_t2, fx.lshift(24) = (out = 0x00B6FBBD), { 0x001555AA, 0xAADEADBE, 0xEF5555AA, 0xAA000000 }
fc_t2, fx.lshift(25) = (out = 0x016DF77A), { 0x002AAB55, 0x55BD5B7D, 0xDEAAAB55, 0x54000000 }
fc_t2, fx.lshift(26) = (out = 0x02DBEEF5), { 0x001556AA, 0xAB7AB6FB, 0xBD5556AA, 0xA8000000 }
fc_t2, fx.lshift(27) = (out = 0x05B7DDEA), { 0x002AAD55, 0x56F56DF7, 0x7AAAAD55, 0x50000000 }
fc_t2, fx.lshift(28) = (out = 0x0B6FBBD5), { 0x00155AAA, 0xADEADBEE, 0xF5555AAA, 0xA0000000 }
fc_t2, fx.lshift(29) = (out = 0x16DF77AA), { 0x002AB555, 0x5BD5B7DD, 0xEAAAB555, 0x40000000 }
fc_t2, fx.lshift(30) = (out = 0x2DBEEF55), { 0x00156AAA, 0xB7AB6FBB, 0xD5556AAA, 0x80000000 }
fc_t2, fx.lshift(31) = (out = 0x5B7DDEAA), { 0x002AD555, 0x6F56DF77, 0xAAAAD555, 0x00000000 }
fc_t2, fx.lshift(32) = (out = 0xB6FBBD55), { 0x0015AAAA, 0xDEADBEEF, 0x5555AAAA, 0x00000000 }
fc_t2, fx.lshift(33) = (out = 0xEDF77AAA), { 0x002B5555, 0xBD5B7DDE, 0xAAAB5554, 0x00000000 }
fc_t2, fx.lshift(34) = (out = 0xDBEEF555), { 0x0016AAAB, 0x7AB6FBBD, 0x5556AAA8, 0x00000000 }
fc_t2, fx.lshift(35) = (out = 0xB7DDEAAA), { 0x002D5556, 0xF56DF77A, 0xAAAD5550, 0x00000000 }
fc_t2, fx.lshift(36) = (out = 0xEFBBD555), { 0x001AAAAD, 0xEADBEEF5, 0x555AAAA0, 0x00000000 }
fc_t2, fx.lshift(37) = (out = 0xDF77AAAA), { 0x0035555B, 0xD5B7DDEA, 0xAAB55540, 0x00000000 }
fc_t2, fx.lshift(38) = (out = 0xBEEF5555), { 0x002AAAB7, 0xAB6FBBD5, 0x556AAA80, 0x00000000 }
fc_t2, fx.lshift(39) = (out = 0xFDDEAAAB), { 0x0015556F, 0x56DF77AA, 0xAAD55500, 0x00000000 }
fc_t2, fx.lshift(40) = (out = 0xFBBD5556), { 0x002AAADE, 0xADBEEF55, 0x55AAAA00, 0x00000000 }
fc_t2, fx.lshift(41) = (out = 0xF77AAAAD), { 0x001555BD, 0x5B7DDEAA, 0xAB555400, 0x00000000 }
fc_t2, fx.lshift(42) = (out = 0xEEF5555A), { 0x002AAB7A, 0xB6FBBD55, 0x56AAA800, 0x00000000 }
fc_t2, fx.lshift(43) = (out = 0xDDEAAAB5), { 0x001556F5, 0x6DF77AAA, 0xAD555000, 0x00000000 }
fc_t2, fx.lshift(44) = (out = 0xBBD5556A), { 0x002AADEA, 0xDBEEF555, 0x5AAAA000, 0x00000000 }
fc_t2, fx.lshift(45) = (out = 0xF7AAAAD5), { 0x00155BD5, 0xB7DDEAAA, 0xB5554000, 0x00000000 }
fc_t2, fx.lshift(46) = (out = 0xEF5555AA), { 0x002AB7AB, 0x6FBBD555, 0x6AAA8000, 0x00000000 }
fc_t2, fx.lshift(47) = (out = 0xDEAAAB55), { 0x00156F56, 0xDF77AAAA, 0xD5550000, 0x00000000 }
fc_t2, fx.lshift(48) = (out = 0xBD5556AA), { 0x002ADEAD, 0xBEEF5555, 0xAAAA0000, 0x00000000 }
fc_t2, fx.lshift(49) = (out = 0xFAAAAD55), { 0x0015BD5B, 0x7DDEAAAB, 0x55540000, 0x00000000 }
fc_t2, fx.lshift(50) = (out = 0xF5555AAA), { 0x002B7AB6, 0xFBBD5556, 0xAAA80000, 0x00000000 }
fc_t2, fx.lshift(51) = (out = 0xEAAAB555), { 0x0016F56D, 0xF77AAAAD, 0x55500000, 0x00000000 }
fc_t2, fx.lshift(52) = (out = 0xD5556AAA), { 0x002DEADB, 0xEEF5555A, 0xAAA00000, 0x00000000 }
fc_t2, fx.lshift(53) = (out = 0xAAAAD555), { 0x001BD5B7, 0xDDEAAAB5, 0x55400000, 0x00000000 }
fc_t2, fx.lshift(54) = (out = 0xD555AAAA), { 0x0037AB6F, 0xBBD5556A, 0xAA800000, 0x00000000 }
fc_t2, fx.lshift(55) = (out = 0xAAAB5555), { 0x002F56DF, 0x77AAAAD5, 0x55000000, 0x00000000 }
fc_t2, fx.lshift(56) = (out = 0xD556AAAB), { 0x001EADBE, 0xEF5555AA, 0xAA000000, 0x00000000 }
fc_t2, fx.lshift(57) = (out = 0xAAAD5556), { 0x003D5B7D, 0xDEAAAB55, 0x54000000, 0x00000000 }
fc_t2, fx.lshift(58) = (out = 0xD55AAAAD), { 0x003AB6FB, 0xBD5556AA, 0xA8000000, 0x00000000 }
fc_t2, fx.lshift(59) = (out = 0xAAB5555B), { 0x00356DF7, 0x7AAAAD55, 0x50000000, 0x00000000 }
fc_t2, fx.lshift(60) = (out = 0xD56AAAB7), { 0x002ADBEE, 0xF5555AAA, 0xA0000000, 0x00000000 }
fc_t2, fx.lshift(61) = (out = 0xAAD5556F), { 0x0015B7DD, 0xEAAAB555, 0x40000000, 0x00000000 }
fc_t2, fx.lshift(62) = (out = 0xD5AAAADE), { 0x002B6FBB, 0xD5556AAA, 0x80000000, 0x00000000 }
fc_t2, fx.lshift(63) = (out = 0xAB5555BD), { 0x0016DF77, 0xAAAAD555, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(64) = (out = 0xD6AAAB7A), { 0x002DBEEF, 0x5555AAAA, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(65) = (out = 0xAD5556F5), { 0x001B7DDE, 0xAAAB5554, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(66) = (out = 0xDAAAADEA), { 0x0036FBBD, 0x5556AAA8, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(67) = (out = 0xB5555BD5), { 0x002DF77A, 0xAAAD5550, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(68) = (out = 0xEAAAB7AB), { 0x001BEEF5, 0x555AAAA0, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(69) = (out = 0xD5556F56), { 0x0037DDEA, 0xAAB55540, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(70) = (out = 0xAAAADEAD), { 0x002FBBD5, 0x556AAA80, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(71) = (out = 0xD555BD5B), { 0x001F77AA, 0xAAD55500, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(72) = (out = 0xAAAB7AB6), { 0x003EEF55, 0x55AAAA00, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(73) = (out = 0xD556F56D), { 0x003DDEAA, 0xAB555400, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(74) = (out = 0xAAADEADB), { 0x003BBD55, 0x56AAA800, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(75) = (out = 0xD55BD5B7), { 0x00377AAA, 0xAD555000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(76) = (out = 0xAAB7AB6F), { 0x002EF555, 0x5AAAA000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(77) = (out = 0xD56F56DF), { 0x001DEAAA, 0xB5554000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(78) = (out = 0xAADEADBE), { 0x003BD555, 0x6AAA8000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(79) = (out = 0xD5BD5B7D), { 0x0037AAAA, 0xD5550000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(80) = (out = 0xAB7AB6FB), { 0x002F5555, 0xAAAA0000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(81) = (out = 0xD6F56DF7), { 0x001EAAAB, 0x55540000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(82) = (out = 0xADEADBEE), { 0x003D5556, 0xAAA80000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(83) = (out = 0xDBD5B7DD), { 0x003AAAAD, 0x55500000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(84) = (out = 0xB7AB6FBB), { 0x0035555A, 0xAAA00000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(85) = (out = 0xEF56DF77), { 0x002AAAB5, 0x55400000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(86) = (out = 0xDEADBEEF), { 0x0015556A, 0xAA800000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(87) = (out = 0xBD5B7DDE), { 0x002AAAD5, 0x55000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(88) = (out = 0xFAB6FBBD), { 0x001555AA, 0xAA000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(89) = (out = 0xF56DF77A), { 0x002AAB55, 0x54000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(90) = (out = 0xEADBEEF5), { 0x001556AA, 0xA8000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(91) = (out = 0xD5B7DDEA), { 0x002AAD55, 0x50000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(92) = (out = 0xAB6FBBD5), { 0x00155AAA, 0xA0000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(93) = (out = 0xD6DF77AA), { 0x002AB555, 0x40000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(94) = (out = 0xADBEEF55), { 0x00156AAA, 0x80000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(95) = (out = 0xDB7DDEAA), { 0x002AD555, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(96) = (out = 0xB6FBBD55), { 0x0015AAAA, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(97) = (out = 0xEDF77AAA), { 0x002B5554, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(98) = (out = 0xDBEEF555), { 0x0016AAA8, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(99) = (out = 0xB7DDEAAA), { 0x002D5550, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(100) = (out = 0xEFBBD555), { 0x001AAAA0, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(101) = (out = 0xDF77AAAA), { 0x00355540, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(102) = (out = 0xBEEF5555), { 0x002AAA80, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(103) = (out = 0xFDDEAAAB), { 0x00155500, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(104) = (out = 0xFBBD5556), { 0x002AAA00, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(105) = (out = 0xF77AAAAD), { 0x00155400, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(106) = (out = 0xEEF5555A), { 0x002AA800, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(107) = (out = 0xDDEAAAB5), { 0x00155000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(108) = (out = 0xBBD5556A), { 0x002AA000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(109) = (out = 0xF7AAAAD5), { 0x00154000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(110) = (out = 0xEF5555AA), { 0x002A8000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(111) = (out = 0xDEAAAB55), { 0x00150000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(112) = (out = 0xBD5556AA), { 0x002A0000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(113) = (out = 0xFAAAAD55), { 0x00140000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(114) = (out = 0xF5555AAA), { 0x00280000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(115) = (out = 0xEAAAB555), { 0x00100000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(116) = (out = 0xD5556AAA), { 0x00200000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(117) = (out = 0xAAAAD555), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(118) = (out = 0xD555AAAA), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(119) = (out = 0xAAAB5554), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(120) = (out = 0xD556AAA8), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(121) = (out = 0xAAAD5550), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(122) = (out = 0xD55AAAA0), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(123) = (out = 0xAAB55540), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(124) = (out = 0xD56AAA80), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(125) = (out = 0xAAD55500), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(126) = (out = 0xD5AAAA00), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(127) = (out = 0xAB555400), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(128) = (out = 0xD6AAA800), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(129) = (out = 0xAD555000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(130) = (out = 0xDAAAA000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(131) = (out = 0xB5554000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(132) = (out = 0xEAAA8000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(133) = (out = 0xD5550000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(134) = (out = 0xAAAA0000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(135) = (out = 0xD5540000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(136) = (out = 0xAAA80000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(137) = (out = 0xD5500000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(138) = (out = 0xAAA00000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(139) = (out = 0xD5400000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(140) = (out = 0xAA800000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(141) = (out = 0xD5000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(142) = (out = 0xAA000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(143) = (out = 0xD4000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(144) = (out = 0xA8000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(145) = (out = 0xD0000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(146) = (out = 0xA0000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(147) = (out = 0xC0000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(148) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(149) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.lshift(150) = (out = 0x80000000), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(0) = (out = 0x00000000), { 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t2, fx.rshift(1) = (out = 0x00000000), { 0x0016DF77, 0xAAAAD555, 0x6F56DF77, 0xAAAAD555 }
fc_t2, fx.rshift(2) = (out = 0x80000000), { 0x000B6FBB, 0xD5556AAA, 0xB7AB6FBB, 0xD5556AAA }
fc_t2, fx.rshift(3) = (out = 0x40000000), { 0x0005B7DD, 0xEAAAB555, 0x5BD5B7DD, 0xEAAAB555 }
fc_t2, fx.rshift(4) = (out = 0xA0000000), { 0x0002DBEE, 0xF5555AAA, 0xADEADBEE, 0xF5555AAA }
fc_t2, fx.rshift(5) = (out = 0x50000000), { 0x00016DF7, 0x7AAAAD55, 0x56F56DF7, 0x7AAAAD55 }
fc_t2, fx.rshift(6) = (out = 0xA8000000), { 0x0000B6FB, 0xBD5556AA, 0xAB7AB6FB, 0xBD5556AA }
fc_t2, fx.rshift(7) = (out = 0x54000000), { 0x00005B7D, 0xDEAAAB55, 0x55BD5B7D, 0xDEAAAB55 }
fc_t2, fx.rshift(8) = (out = 0xAA000000), { 0x00002DBE, 0xEF5555AA, 0xAADEADBE, 0xEF5555AA }
fc_t2, fx.rshift(9) = (out = 0x55000000), { 0x000016DF, 0x77AAAAD5, 0x556F56DF, 0x77AAAAD5 }
fc_t2, fx.rshift(10) = (out = 0xAA800000), { 0x00000B6F, 0xBBD5556A, 0xAAB7AB6F, 0xBBD5556A }
fc_t2, fx.rshift(11) = (out = 0x55400000), { 0x000005B7, 0xDDEAAAB5, 0x555BD5B7, 0xDDEAAAB5 }
fc_t2, fx.rshift(12) = (out = 0xAAA00000), { 0x000002DB, 0xEEF5555A, 0xAAADEADB, 0xEEF5555A }
fc_t2, fx.rshift(13) = (out = 0x55500000), { 0x0000016D, 0xF77AAAAD, 0x5556F56D, 0xF77AAAAD }
fc_t2, fx.rshift(14) = (out = 0xAAA80000), { 0x000000B6, 0xFBBD5556, 0xAAAB7AB6, 0xFBBD5556 }
fc_t2, fx.rshift(15) = (out = 0x55540000), { 0x0000005B, 0x7DDEAAAB, 0x5555BD5B, 0x7DDEAAAB }
fc_t2, fx.rshift(16) = (out = 0xAAAA0000), { 0x0000002D, 0xBEEF5555, 0xAAAADEAD, 0xBEEF5555 }
fc_t2, fx.rshift(17) = (out = 0xD5550000), { 0x00000016, 0xDF77AAAA, 0xD5556F56, 0xDF77AAAA }
fc_t2, fx.rshift(18) = (out = 0x6AAA8000), { 0x0000000B, 0x6FBBD555, 0x6AAAB7AB, 0x6FBBD555 }
fc_t2, fx.rshift(19) = (out = 0xB5554000), { 0x00000005, 0xB7DDEAAA, 0xB5555BD5, 0xB7DDEAAA }
fc_t2, fx.rshift(20) = (out = 0x5AAAA000), { 0x00000002, 0xDBEEF555, 0x5AAAADEA, 0xDBEEF555 }
fc_t2, fx.rshift(21) = (out = 0xAD555000), { 0x00000001, 0x6DF77AAA, 0xAD5556F5, 0x6DF77AAA }
fc_t2, fx.rshift(22) = (out = 0x56AAA800), { 0x00000000, 0xB6FBBD55, 0x56AAAB7A, 0xB6FBBD55 }
fc_t2, fx.rshift(23) = (out = 0xAB555400), { 0x00000000, 0x5B7DDEAA, 0xAB5555BD, 0x5B7DDEAA }
fc_t2, fx.rshift(24) = (out = 0x55AAAA00), { 0x00000000, 0x2DBEEF55, 0x55AAAADE, 0xADBEEF55 }
fc_t2, fx.rshift(25) = (out = 0xAAD55500), { 0x00000000, 0x16DF77AA, 0xAAD5556F, 0x56DF77AA }
fc_t2, fx.rshift(26) = (out = 0x556AAA80), { 0x00000000, 0x0B6FBBD5, 0x556AAAB7, 0xAB6FBBD5 }
fc_t2, fx.rshift(27) = (out = 0xAAB55540), { 0x00000000, 0x05B7DDEA, 0xAAB5555B, 0xD5B7DDEA }
fc_t2, fx.rshift(28) = (out = 0x555AAAA0), { 0x00000000, 0x02DBEEF5, 0x555AAAAD, 0xEADBEEF5 }
fc_t2, fx.rshift(29) = (out = 0xAAAD5550), { 0x00000000, 0x016DF77A, 0xAAAD5556, 0xF56DF77A }
fc_t2, fx.rshift(30) = (out = 0x5556AAA8), { 0x00000000, 0x00B6FBBD, 0x5556AAAB, 0x7AB6FBBD }
fc_t2, fx.rshift(31) = (out = 0xAAAB5554), { 0x00000000, 0x005B7DDE, 0xAAAB5555, 0xBD5B7DDE }
fc_t2, fx.rshift(32) = (out = 0x5555AAAA), { 0x00000000, 0x002DBEEF, 0x5555AAAA, 0xDEADBEEF }
fc_t2, fx.rshift(33) = (out = 0xAAAAD555), { 0x00000000, 0x0016DF77, 0xAAAAD555, 0x6F56DF77 }
fc_t2, fx.rshift(34) = (out = 0xD5556AAB), { 0x00000000, 0x000B6FBB, 0xD5556AAA, 0xB7AB6FBB }
fc_t2, fx.rshift(35) = (out = 0xEAAAB555), { 0x00000000, 0x0005B7DD, 0xEAAAB555, 0x5BD5B7DD }
fc_t2, fx.rshift(36) = (out = 0xF5555AAB), { 0x00000000, 0x0002DBEE, 0xF5555AAA, 0xADEADBEE }
fc_t2, fx.rshift(37) = (out = 0x7AAAAD55), { 0x00000000, 0x00016DF7, 0x7AAAAD55, 0x56F56DF7 }
fc_t2, fx.rshift(38) = (out = 0xBD5556AB), { 0x00000000, 0x0000B6FB, 0xBD5556AA, 0xAB7AB6FB }
fc_t2, fx.rshift(39) = (out = 0xDEAAAB55), { 0x00000000, 0x00005B7D, 0xDEAAAB55, 0x55BD5B7D }
fc_t2, fx.rshift(40) = (out = 0xEF5555AB), { 0x00000000, 0x00002DBE, 0xEF5555AA, 0xAADEADBE }
fc_t2, fx.rshift(41) = (out = 0x77AAAAD5), { 0x00000000, 0x000016DF, 0x77AAAAD5, 0x556F56DF }
fc_t2, fx.rshift(42) = (out = 0xBBD5556B), { 0x00000000, 0x00000B6F, 0xBBD5556A, 0xAAB7AB6F }
fc_t2, fx.rshift(43) = (out = 0xDDEAAAB5), { 0x00000000, 0x000005B7, 0xDDEAAAB5, 0x555BD5B7 }
fc_t2, fx.rshift(44) = (out = 0xEEF5555B), { 0x00000000, 0x000002DB, 0xEEF5555A, 0xAAADEADB }
fc_t2, fx.rshift(45) = (out = 0xF77AAAAD), { 0x00000000, 0x0000016D, 0xF77AAAAD, 0x5556F56D }
fc_t2, fx.rshift(46) = (out = 0xFBBD5557), { 0x00000000, 0x000000B6, 0xFBBD5556, 0xAAAB7AB6 }
fc_t2, fx.rshift(47) = (out = 0x7DDEAAAB), { 0x00000000, 0x0000005B, 0x7DDEAAAB, 0x5555BD5B }
fc_t2, fx.rshift(48) = (out = 0xBEEF5555), { 0x00000000, 0x0000002D, 0xBEEF5555, 0xAAAADEAD }
fc_t2, fx.rshift(49) = (out = 0xDF77AAAB), { 0x00000000, 0x00000016, 0xDF77AAAA, 0xD5556F56 }
fc_t2, fx.rshift(50) = (out = 0x6FBBD555), { 0x00000000, 0x0000000B, 0x6FBBD555, 0x6AAAB7AB }
fc_t2, fx.rshift(51) = (out = 0xB7DDEAAB), { 0x00000000, 0x00000005, 0xB7DDEAAA, 0xB5555BD5 }
fc_t2, fx.rshift(52) = (out = 0xDBEEF555), { 0x00000000, 0x00000002, 0xDBEEF555, 0x5AAAADEA }
fc_t2, fx.rshift(53) = (out = 0x6DF77AAB), { 0x00000000, 0x00000001, 0x6DF77AAA, 0xAD5556F5 }
fc_t2, fx.rshift(54) = (out = 0xB6FBBD55), { 0x00000000, 0x00000000, 0xB6FBBD55, 0x56AAAB7A }
fc_t2, fx.rshift(55) = (out = 0x5B7DDEAB), { 0x00000000, 0x00000000, 0x5B7DDEAA, 0xAB5555BD }
fc_t2, fx.rshift(56) = (out = 0xADBEEF55), { 0x00000000, 0x00000000, 0x2DBEEF55, 0x55AAAADE }
fc_t2, fx.rshift(57) = (out = 0x56DF77AB), { 0x00000000, 0x00000000, 0x16DF77AA, 0xAAD5556F }
fc_t2, fx.rshift(58) = (out = 0xAB6FBBD5), { 0x00000000, 0x00000000, 0x0B6FBBD5, 0x556AAAB7 }
fc_t2, fx.rshift(59) = (out = 0xD5B7DDEB), { 0x00000000, 0x00000000, 0x05B7DDEA, 0xAAB5555B }
fc_t2, fx.rshift(60) = (out = 0xEADBEEF5), { 0x00000000, 0x00000000, 0x02DBEEF5, 0x555AAAAD }
fc_t2, fx.rshift(61) = (out = 0xF56DF77B), { 0x00000000, 0x00000000, 0x016DF77A, 0xAAAD5556 }
fc_t2, fx.rshift(62) = (out = 0x7AB6FBBD), { 0x00000000, 0x00000000, 0x00B6FBBD, 0x5556AAAB }
fc_t2, fx.rshift(63) = (out = 0xBD5B7DDF), { 0x00000000, 0x00000000, 0x005B7DDE, 0xAAAB5555 }
fc_t2, fx.rshift(64) = (out = 0xDEADBEEF), { 0x00000000, 0x00000000, 0x002DBEEF, 0x5555AAAA }
fc_t2, fx.rshift(65) = (out = 0x6F56DF77), { 0x00000000, 0x00000000, 0x0016DF77, 0xAAAAD555 }
fc_t2, fx.rshift(66) = (out = 0xB7AB6FBB), { 0x00000000, 0x00000000, 0x000B6FBB, 0xD5556AAA }
fc_t2, fx.rshift(67) = (out = 0x5BD5B7DD), { 0x00000000, 0x00000000, 0x0005B7DD, 0xEAAAB555 }
fc_t2, fx.rshift(68) = (out = 0xADEADBEF), { 0x00000000, 0x00000000, 0x0002DBEE, 0xF5555AAA }
fc_t2, fx.rshift(69) = (out = 0x56F56DF7), { 0x00000000, 0x00000000, 0x00016DF7, 0x7AAAAD55 }
fc_t2, fx.rshift(70) = (out = 0xAB7AB6FB), { 0x00000000, 0x00000000, 0x0000B6FB, 0xBD5556AA }
fc_t2, fx.rshift(71) = (out = 0x55BD5B7D), { 0x00000000, 0x00000000, 0x00005B7D, 0xDEAAAB55 }
fc_t2, fx.rshift(72) = (out = 0xAADEADBF), { 0x00000000, 0x00000000, 0x00002DBE, 0xEF5555AA }
fc_t2, fx.rshift(73) = (out = 0x556F56DF), { 0x00000000, 0x00000000, 0x000016DF, 0x77AAAAD5 }
fc_t2, fx.rshift(74) = (out = 0xAAB7AB6F), { 0x00000000, 0x00000000, 0x00000B6F, 0xBBD5556A }
fc_t2, fx.rshift(75) = (out = 0x555BD5B7), { 0x00000000, 0x00000000, 0x000005B7, 0xDDEAAAB5 }
fc_t2, fx.rshift(76) = (out = 0xAAADEADB), { 0x00000000, 0x00000000, 0x000002DB, 0xEEF5555A }
fc_t2, fx.rshift(77) = (out = 0x5556F56D), { 0x00000000, 0x00000000, 0x0000016D, 0xF77AAAAD }
fc_t2, fx.rshift(78) = (out = 0xAAAB7AB7), { 0x00000000, 0x00000000, 0x000000B6, 0xFBBD5556 }
fc_t2, fx.rshift(79) = (out = 0x5555BD5B), { 0x00000000, 0x00000000, 0x0000005B, 0x7DDEAAAB }
fc_t2, fx.rshift(80) = (out = 0xAAAADEAD), { 0x00000000, 0x00000000, 0x0000002D, 0xBEEF5555 }
fc_t2, fx.rshift(81) = (out = 0xD5556F57), { 0x00000000, 0x00000000, 0x00000016, 0xDF77AAAA }
fc_t2, fx.rshift(82) = (out = 0x6AAAB7AB), { 0x00000000, 0x00000000, 0x0000000B, 0x6FBBD555 }
fc_t2, fx.rshift(83) = (out = 0xB5555BD5), { 0x00000000, 0x00000000, 0x00000005, 0xB7DDEAAA }
fc_t2, fx.rshift(84) = (out = 0x5AAAADEB), { 0x00000000, 0x00000000, 0x00000002, 0xDBEEF555 }
fc_t2, fx.rshift(85) = (out = 0xAD5556F5), { 0x00000000, 0x00000000, 0x00000001, 0x6DF77AAA }
fc_t2, fx.rshift(86) = (out = 0x56AAAB7B), { 0x00000000, 0x00000000, 0x00000000, 0xB6FBBD55 }
fc_t2, fx.rshift(87) = (out = 0xAB5555BD), { 0x00000000, 0x00000000, 0x00000000, 0x5B7DDEAA }
fc_t2, fx.rshift(88) = (out = 0x55AAAADF), { 0x00000000, 0x00000000, 0x00000000, 0x2DBEEF55 }
fc_t2, fx.rshift(89) = (out = 0xAAD5556F), { 0x00000000, 0x00000000, 0x00000000, 0x16DF77AA }
fc_t2, fx.rshift(90) = (out = 0x556AAAB7), { 0x00000000, 0x00000000, 0x00000000, 0x0B6FBBD5 }
fc_t2, fx.rshift(91) = (out = 0xAAB5555B), { 0x00000000, 0x00000000, 0x00000000, 0x05B7DDEA }
fc_t2, fx.rshift(92) = (out = 0x555AAAAD), { 0x00000000, 0x00000000, 0x00000000, 0x02DBEEF5 }
fc_t2, fx.rshift(93) = (out = 0xAAAD5557), { 0x00000000, 0x00000000, 0x00000000, 0x016DF77A }
fc_t2, fx.rshift(94) = (out = 0x5556AAAB), { 0x00000000, 0x00000000, 0x00000000, 0x00B6FBBD }
fc_t2, fx.rshift(95) = (out = 0xAAAB5555), { 0x00000000, 0x00000000, 0x00000000, 0x005B7DDE }
fc_t2, fx.rshift(96) = (out = 0x5555AAAB), { 0x00000000, 0x00000000, 0x00000000, 0x002DBEEF }
fc_t2, fx.rshift(97) = (out = 0xAAAAD555), { 0x00000000, 0x00000000, 0x00000000, 0x0016DF77 }
fc_t2, fx.rshift(98) = (out = 0xD5556AAB), { 0x00000000, 0x00000000, 0x00000000, 0x000B6FBB }
fc_t2, fx.rshift(99) = (out = 0xEAAAB555), { 0x00000000, 0x00000000, 0x00000000, 0x0005B7DD }
fc_t2, fx.rshift(100) = (out = 0xF5555AAB), { 0x00000000, 0x00000000, 0x00000000, 0x0002DBEE }
fc_t2, fx.rshift(101) = (out = 0x7AAAAD55), { 0x00000000, 0x00000000, 0x00000000, 0x00016DF7 }
fc_t2, fx.rshift(102) = (out = 0xBD5556AB), { 0x00000000, 0x00000000, 0x00000000, 0x0000B6FB }
fc_t2, fx.rshift(103) = (out = 0xDEAAAB55), { 0x00000000, 0x00000000, 0x00000000, 0x00005B7D }
fc_t2, fx.rshift(104) = (out = 0xEF5555AB), { 0x00000000, 0x00000000, 0x00000000, 0x00002DBE }
fc_t2, fx.rshift(105) = (out = 0x77AAAAD5), { 0x00000000, 0x00000000, 0x00000000, 0x000016DF }
fc_t2, fx.rshift(106) = (out = 0xBBD5556B), { 0x00000000, 0x00000000, 0x00000000, 0x00000B6F }
fc_t2, fx.rshift(107) = (out = 0xDDEAAAB5), { 0x00000000, 0x00000000, 0x00000000, 0x000005B7 }
fc_t2, fx.rshift(108) = (out = 0xEEF5555B), { 0x00000000, 0x00000000, 0x00000000, 0x000002DB }
fc_t2, fx.rshift(109) = (out = 0xF77AAAAD), { 0x00000000, 0x00000000, 0x00000000, 0x0000016D }
fc_t2, fx.rshift(110) = (out = 0xFBBD5557), { 0x00000000, 0x00000000, 0x00000000, 0x000000B6 }
fc_t2, fx.rshift(111) = (out = 0x7DDEAAAB), { 0x00000000, 0x00000000, 0x00000000, 0x0000005B }
fc_t2, fx.rshift(112) = (out = 0xBEEF5555), { 0x00000000, 0x00000000, 0x00000000, 0x0000002D }
fc_t2, fx.rshift(113) = (out = 0xDF77AAAB), { 0x00000000, 0x00000000, 0x00000000, 0x00000016 }
fc_t2, fx.rshift(114) = (out = 0x6FBBD555), { 0x00000000, 0x00000000, 0x00000000, 0x0000000B }
fc_t2, fx.rshift(115) = (out = 0xB7DDEAAB), { 0x00000000, 0x00000000, 0x00000000, 0x00000005 }
fc_t2, fx.rshift(116) = (out = 0xDBEEF555), { 0x00000000, 0x00000000, 0x00000000, 0x00000002 }
fc_t2, fx.rshift(117) = (out = 0x6DF77AAB), { 0x00000000, 0x00000000, 0x00000000, 0x00000001 }
fc_t2, fx.rshift(118) = (out = 0xB6FBBD55), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(119) = (out = 0x5B7DDEAB), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(120) = (out = 0x2DBEEF55), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(121) = (out = 0x16DF77AB), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(122) = (out = 0x0B6FBBD5), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(123) = (out = 0x05B7DDEB), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(124) = (out = 0x02DBEEF5), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(125) = (out = 0x016DF77B), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(126) = (out = 0x00B6FBBD), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(127) = (out = 0x005B7DDF), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(128) = (out = 0x002DBEEF), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(129) = (out = 0x0016DF77), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(130) = (out = 0x000B6FBB), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(131) = (out = 0x0005B7DD), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(132) = (out = 0x0002DBEF), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(133) = (out = 0x00016DF7), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(134) = (out = 0x0000B6FB), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(135) = (out = 0x00005B7D), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(136) = (out = 0x00002DBF), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(137) = (out = 0x000016DF), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(138) = (out = 0x00000B6F), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(139) = (out = 0x000005B7), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(140) = (out = 0x000002DB), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(141) = (out = 0x0000016D), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(142) = (out = 0x000000B7), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(143) = (out = 0x0000005B), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(144) = (out = 0x0000002D), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(145) = (out = 0x00000017), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(146) = (out = 0x0000000B), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(147) = (out = 0x00000005), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(148) = (out = 0x00000003), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(149) = (out = 0x00000001), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t2, fx.rshift(150) = (out = 0x00000001), { 0x00000000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx = { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.mlshift(0) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.mlshift(1) = (out = 0x00000001), { 0x00001EEF, 0x5555AAAA, 0xDEAD7DDE, 0xAAAB5554 }
fc_t3, fx.mlshift(2) = (out = 0x00000002), { 0x00001EEF, 0x5555AAAA, 0xDEADFBBD, 0x5556AAA8 }
fc_t3, fx.mlshift(3) = (out = 0x00000005), { 0x00001EEF, 0x5555AAAA, 0xDEADF77A, 0xAAAD5550 }
fc_t3, fx.mlshift(4) = (out = 0x0000000B), { 0x00001EEF, 0x5555AAAA, 0xDEADEEF5, 0x555AAAA0 }
fc_t3, fx.mlshift(5) = (out = 0x00000017), { 0x00001EEF, 0x5555AAAA, 0xDEADDDEA, 0xAAB55540 }
fc_t3, fx.mlshift(6) = (out = 0x0000002F), { 0x00001EEF, 0x5555AAAA, 0xDEADBBD5, 0x556AAA80 }
fc_t3, fx.mlshift(7) = (out = 0x0000005F), { 0x00001EEF, 0x5555AAAA, 0xDEAD77AA, 0xAAD55500 }
fc_t3, fx.mlshift(8) = (out = 0x000000BE), { 0x00001EEF, 0x5555AAAA, 0xDEADEF55, 0x55AAAA00 }
fc_t3, fx.mlshift(9) = (out = 0x0000017D), { 0x00001EEF, 0x5555AAAA, 0xDEADDEAA, 0xAB555400 }
fc_t3, fx.mlshift(10) = (out = 0x000002FB), { 0x00001EEF, 0x5555AAAA, 0xDEADBD55, 0x56AAA800 }
fc_t3, fx.mlshift(11) = (out = 0x000005F7), { 0x00001EEF, 0x5555AAAA, 0xDEAD7AAA, 0xAD555000 }
fc_t3, fx.mlshift(12) = (out = 0x00000BEE), { 0x00001EEF, 0x5555AAAA, 0xDEADF555, 0x5AAAA000 }
fc_t3, fx.mlshift(13) = (out = 0x000017DD), { 0x00001EEF, 0x5555AAAA, 0xDEADEAAA, 0xB5554000 }
fc_t3, fx.mlshift(14) = (out = 0x00002FBB), { 0x00001EEF, 0x5555AAAA, 0xDEADD555, 0x6AAA8000 }
fc_t3, fx.mlshift(15) = (out = 0x00005F77), { 0x00001EEF, 0x5555AAAA, 0xDEADAAAA, 0xD5550000 }
fc_t3, fx.mlshift(16) = (out = 0x0000BEEF), { 0x00001EEF, 0x5555AAAA, 0xDEAD5555, 0xAAAA0000 }
fc_t3, fx.mlshift(17) = (out = 0x00017DDE), { 0x00001EEF, 0x5555AAAA, 0xDEADAAAB, 0x55540000 }
fc_t3, fx.mlshift(18) = (out = 0x0002FBBD), { 0x00001EEF, 0x5555AAAA, 0xDEAD5556, 0xAAA80000 }
fc_t3, fx.mlshift(19) = (out = 0x0005F77A), { 0x00001EEF, 0x5555AAAA, 0xDEADAAAD, 0x55500000 }
fc_t3, fx.mlshift(20) = (out = 0x000BEEF5), { 0x00001EEF, 0x5555AAAA, 0xDEAD555A, 0xAAA00000 }
fc_t3, fx.mlshift(21) = (out = 0x0017DDEA), { 0x00001EEF, 0x5555AAAA, 0xDEADAAB5, 0x55400000 }
fc_t3, fx.mlshift(22) = (out = 0x002FBBD5), { 0x00001EEF, 0x5555AAAA, 0xDEAD556A, 0xAA800000 }
fc_t3, fx.mlshift(23) = (out = 0x005F77AA), { 0x00001EEF, 0x5555AAAA, 0xDEADAAD5, 0x55000000 }
fc_t3, fx.mlshift(24) = (out = 0x00BEEF55), { 0x00001EEF, 0x5555AAAA, 0xDEAD55AA, 0xAA000000 }
fc_t3, fx.mlshift(25) = (out = 0x017DDEAA), { 0x00001EEF, 0x5555AAAA, 0xDEADAB55, 0x54000000 }
fc_t3, fx.mlshift(26) = (out = 0x02FBBD55), { 0x00001EEF, 0x5555AAAA, 0xDEAD56AA, 0xA8000000 }
fc_t3, fx.mlshift(27) = (out = 0x05F77AAA), { 0x00001EEF, 0x5555AAAA, 0xDEADAD55, 0x50000000 }
fc_t3, fx.mlshift(28) = (out = 0x0BEEF555), { 0x00001EEF, 0x5555AAAA, 0xDEAD5AAA, 0xA0000000 }
fc_t3, fx.mlshift(29) = (out = 0x17DDEAAA), { 0x00001EEF, 0x5555AAAA, 0xDEADB555, 0x40000000 }
fc_t3, fx.mlshift(30) = (out = 0x2FBBD555), { 0x00001EEF, 0x5555AAAA, 0xDEAD6AAA, 0x80000000 }
fc_t3, fx.mlshift(31) = (out = 0x5F77AAAA), { 0x00001EEF, 0x5555AAAA, 0xDEADD555, 0x00000000 }
fc_t3, fx.mlshift(32) = (out = 0xBEEF5555), { 0x00001EEF, 0x5555AAAA, 0xDEADAAAA, 0x00000000 }
fc_t3, fx.mlshift(33) = (out = 0xFDDEAAAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD5554, 0x00000000 }
fc_t3, fx.mlshift(34) = (out = 0xFBBD5556), { 0x00001EEF, 0x5555AAAA, 0xDEADAAA8, 0x00000000 }
fc_t3, fx.mlshift(35) = (out = 0xF77AAAAD), { 0x00001EEF, 0x5555AAAA, 0xDEAD5550, 0x00000000 }
fc_t3, fx.mlshift(36) = (out = 0xEEF5555A), { 0x00001EEF, 0x5555AAAA, 0xDEADAAA0, 0x00000000 }
fc_t3, fx.mlshift(37) = (out = 0xDDEAAAB5), { 0x00001EEF, 0x5555AAAA, 0xDEAD5540, 0x00000000 }
fc_t3, fx.mlshift(38) = (out = 0xBBD5556A), { 0x00001EEF, 0x5555AAAA, 0xDEADAA80, 0x00000000 }
fc_t3, fx.mlshift(39) = (out = 0xF7AAAAD5), { 0x00001EEF, 0x5555AAAA, 0xDEAD5500, 0x00000000 }
fc_t3, fx.mlshift(40) = (out = 0xEF5555AA), { 0x00001EEF, 0x5555AAAA, 0xDEADAA00, 0x00000000 }
fc_t3, fx.mlshift(41) = (out = 0xDEAAAB55), { 0x00001EEF, 0x5555AAAA, 0xDEAD5400, 0x00000000 }
fc_t3, fx.mlshift(42) = (out = 0xBD5556AA), { 0x00001EEF, 0x5555AAAA, 0xDEADA800, 0x00000000 }
fc_t3, fx.mlshift(43) = (out = 0xFAAAAD55), { 0x00001EEF, 0x5555AAAA, 0xDEAD5000, 0x00000000 }
fc_t3, fx.mlshift(44) = (out = 0xF5555AAA), { 0x00001EEF, 0x5555AAAA, 0xDEADA000, 0x00000000 }
fc_t3, fx.mlshift(45) = (out = 0xEAAAB555), { 0x00001EEF, 0x5555AAAA, 0xDEAD4000, 0x00000000 }
fc_t3, fx.mlshift(46) = (out = 0xD5556AAA), { 0x00001EEF, 0x5555AAAA, 0xDEAD8000, 0x00000000 }
fc_t3, fx.mlshift(47) = (out = 0xAAAAD555), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(48) = (out = 0xD555AAAA), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(49) = (out = 0xAAAB5554), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(50) = (out = 0xD556AAA8), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(51) = (out = 0xAAAD5550), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(52) = (out = 0xD55AAAA0), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(53) = (out = 0xAAB55540), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(54) = (out = 0xD56AAA80), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(55) = (out = 0xAAD55500), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(56) = (out = 0xD5AAAA00), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(57) = (out = 0xAB555400), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(58) = (out = 0xD6AAA800), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(59) = (out = 0xAD555000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(60) = (out = 0xDAAAA000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(61) = (out = 0xB5554000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(62) = (out = 0xEAAA8000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(63) = (out = 0xD5550000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(64) = (out = 0xAAAA0000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(65) = (out = 0xD5540000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(66) = (out = 0xAAA80000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(67) = (out = 0xD5500000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(68) = (out = 0xAAA00000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(69) = (out = 0xD5400000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(70) = (out = 0xAA800000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(71) = (out = 0xD5000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(72) = (out = 0xAA000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(73) = (out = 0xD4000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(74) = (out = 0xA8000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(75) = (out = 0xD0000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(76) = (out = 0xA0000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(77) = (out = 0xC0000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(78) = (out = 0x80000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(79) = (out = 0x80000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mlshift(80) = (out = 0x80000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(0) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.mrshift(1) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD5F77, 0xAAAAD555 }
fc_t3, fx.mrshift(2) = (out = 0x80000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD2FBB, 0xD5556AAA }
fc_t3, fx.mrshift(3) = (out = 0x40000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD17DD, 0xEAAAB555 }
fc_t3, fx.mrshift(4) = (out = 0xA0000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0BEE, 0xF5555AAA }
fc_t3, fx.mrshift(5) = (out = 0x50000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD05F7, 0x7AAAAD55 }
fc_t3, fx.mrshift(6) = (out = 0xA8000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD02FB, 0xBD5556AA }
fc_t3, fx.mrshift(7) = (out = 0x54000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD017D, 0xDEAAAB55 }
fc_t3, fx.mrshift(8) = (out = 0xAA000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD00BE, 0xEF5555AA }
fc_t3, fx.mrshift(9) = (out = 0x55000000), { 0x00001EEF, 0x5555AAAA, 0xDEAD005F, 0x77AAAAD5 }
fc_t3, fx.mrshift(10) = (out = 0xAA800000), { 0x00001EEF, 0x5555AAAA, 0xDEAD002F, 0xBBD5556A }
fc_t3, fx.mrshift(11) = (out = 0x55400000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0017, 0xDDEAAAB5 }
fc_t3, fx.mrshift(12) = (out = 0xAAA00000), { 0x00001EEF, 0x5555AAAA, 0xDEAD000B, 0xEEF5555A }
fc_t3, fx.mrshift(13) = (out = 0x55500000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0005, 0xF77AAAAD }
fc_t3, fx.mrshift(14) = (out = 0xAAA80000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0002, 0xFBBD5556 }
fc_t3, fx.mrshift(15) = (out = 0x55540000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0001, 0x7DDEAAAB }
fc_t3, fx.mrshift(16) = (out = 0xAAAA0000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0xBEEF5555 }
fc_t3, fx.mrshift(17) = (out = 0xD5550000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x5F77AAAA }
fc_t3, fx.mrshift(18) = (out = 0x6AAA8000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x2FBBD555 }
fc_t3, fx.mrshift(19) = (out = 0xB5554000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x17DDEAAA }
fc_t3, fx.mrshift(20) = (out = 0x5AAAA000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0BEEF555 }
fc_t3, fx.mrshift(21) = (out = 0xAD555000), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x05F77AAA }
fc_t3, fx.mrshift(22) = (out = 0x56AAA800), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x02FBBD55 }
fc_t3, fx.mrshift(23) = (out = 0xAB555400), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x017DDEAA }
fc_t3, fx.mrshift(24) = (out = 0x55AAAA00), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00BEEF55 }
fc_t3, fx.mrshift(25) = (out = 0xAAD55500), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x005F77AA }
fc_t3, fx.mrshift(26) = (out = 0x556AAA80), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x002FBBD5 }
fc_t3, fx.mrshift(27) = (out = 0xAAB55540), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0017DDEA }
fc_t3, fx.mrshift(28) = (out = 0x555AAAA0), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x000BEEF5 }
fc_t3, fx.mrshift(29) = (out = 0xAAAD5550), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0005F77A }
fc_t3, fx.mrshift(30) = (out = 0x5556AAA8), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0002FBBD }
fc_t3, fx.mrshift(31) = (out = 0xAAAB5554), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00017DDE }
fc_t3, fx.mrshift(32) = (out = 0x5555AAAA), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0000BEEF }
fc_t3, fx.mrshift(33) = (out = 0xAAAAD555), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00005F77 }
fc_t3, fx.mrshift(34) = (out = 0xD5556AAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00002FBB }
fc_t3, fx.mrshift(35) = (out = 0xEAAAB555), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x000017DD }
fc_t3, fx.mrshift(36) = (out = 0xF5555AAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000BEE }
fc_t3, fx.mrshift(37) = (out = 0x7AAAAD55), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x000005F7 }
fc_t3, fx.mrshift(38) = (out = 0xBD5556AB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x000002FB }
fc_t3, fx.mrshift(39) = (out = 0xDEAAAB55), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0000017D }
fc_t3, fx.mrshift(40) = (out = 0xEF5555AB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x000000BE }
fc_t3, fx.mrshift(41) = (out = 0x77AAAAD5), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0000005F }
fc_t3, fx.mrshift(42) = (out = 0xBBD5556B), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0000002F }
fc_t3, fx.mrshift(43) = (out = 0xDDEAAAB5), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000017 }
fc_t3, fx.mrshift(44) = (out = 0xEEF5555B), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x0000000B }
fc_t3, fx.mrshift(45) = (out = 0xF77AAAAD), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000005 }
fc_t3, fx.mrshift(46) = (out = 0xFBBD5557), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000002 }
fc_t3, fx.mrshift(47) = (out = 0x7DDEAAAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000001 }
fc_t3, fx.mrshift(48) = (out = 0xBEEF5555), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(49) = (out = 0x5F77AAAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(50) = (out = 0x2FBBD555), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(51) = (out = 0x17DDEAAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(52) = (out = 0x0BEEF555), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(53) = (out = 0x05F77AAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(54) = (out = 0x02FBBD55), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(55) = (out = 0x017DDEAB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(56) = (out = 0x00BEEF55), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(57) = (out = 0x005F77AB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(58) = (out = 0x002FBBD5), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(59) = (out = 0x0017DDEB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(60) = (out = 0x000BEEF5), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(61) = (out = 0x0005F77B), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(62) = (out = 0x0002FBBD), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(63) = (out = 0x00017DDF), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(64) = (out = 0x0000BEEF), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(65) = (out = 0x00005F77), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(66) = (out = 0x00002FBB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(67) = (out = 0x000017DD), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(68) = (out = 0x00000BEF), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(69) = (out = 0x000005F7), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(70) = (out = 0x000002FB), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(71) = (out = 0x0000017D), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(72) = (out = 0x000000BF), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(73) = (out = 0x0000005F), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(74) = (out = 0x0000002F), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(75) = (out = 0x00000017), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(76) = (out = 0x0000000B), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(77) = (out = 0x00000005), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(78) = (out = 0x00000003), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(79) = (out = 0x00000001), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.mrshift(80) = (out = 0x00000001), { 0x00001EEF, 0x5555AAAA, 0xDEAD0000, 0x00000000 }
fc_t3, fx.elshift(0) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.elshift(1) = (out = 0x00000000), { 0x00001DDE, 0xAAAB5555, 0xBD5ABEEF, 0x5555AAAA }
fc_t3, fx.elshift(2) = (out = 0x00000000), { 0x00001BBD, 0x5556AAAB, 0x7AB4BEEF, 0x5555AAAA }
fc_t3, fx.elshift(3) = (out = 0x00000000), { 0x0000177A, 0xAAAD5556, 0xF568BEEF, 0x5555AAAA }
fc_t3, fx.elshift(4) = (out = 0x00000000), { 0x00001EF5, 0x555AAAAD, 0xEAD0BEEF, 0x5555AAAA }
fc_t3, fx.elshift(5) = (out = 0x00000000), { 0x00001DEA, 0xAAB5555B, 0xD5A0BEEF, 0x5555AAAA }
fc_t3, fx.elshift(6) = (out = 0x00000000), { 0x00001BD5, 0x556AAAB7, 0xAB40BEEF, 0x5555AAAA }
fc_t3, fx.elshift(7) = (out = 0x00000000), { 0x000017AA, 0xAAD5556F, 0x5680BEEF, 0x5555AAAA }
fc_t3, fx.elshift(8) = (out = 0x00000000), { 0x00001F55, 0x55AAAADE, 0xAD00BEEF, 0x5555AAAA }
fc_t3, fx.elshift(9) = (out = 0x00000000), { 0x00001EAA, 0xAB5555BD, 0x5A00BEEF, 0x5555AAAA }
fc_t3, fx.elshift(10) = (out = 0x00000000), { 0x00001D55, 0x56AAAB7A, 0xB400BEEF, 0x5555AAAA }
fc_t3, fx.elshift(11) = (out = 0x00000000), { 0x00001AAA, 0xAD5556F5, 0x6800BEEF, 0x5555AAAA }
fc_t3, fx.elshift(12) = (out = 0x00000000), { 0x00001555, 0x5AAAADEA, 0xD000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(13) = (out = 0x00000000), { 0x00001AAA, 0xB5555BD5, 0xA000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(14) = (out = 0x00000000), { 0x00001555, 0x6AAAB7AB, 0x4000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(15) = (out = 0x00000000), { 0x00001AAA, 0xD5556F56, 0x8000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(16) = (out = 0x00000000), { 0x00001555, 0xAAAADEAD, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(17) = (out = 0x00000000), { 0x00001AAB, 0x5555BD5A, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(18) = (out = 0x00000000), { 0x00001556, 0xAAAB7AB4, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(19) = (out = 0x00000000), { 0x00001AAD, 0x5556F568, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(20) = (out = 0x00000000), { 0x0000155A, 0xAAADEAD0, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(21) = (out = 0x00000001), { 0x00001AB5, 0x555BD5A0, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(22) = (out = 0x00000003), { 0x0000156A, 0xAAB7AB40, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(23) = (out = 0x00000007), { 0x00001AD5, 0x556F5680, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(24) = (out = 0x0000000E), { 0x000015AA, 0xAADEAD00, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(25) = (out = 0x0000001D), { 0x00001B55, 0x55BD5A00, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(26) = (out = 0x0000003B), { 0x000016AA, 0xAB7AB400, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(27) = (out = 0x00000077), { 0x00001D55, 0x56F56800, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(28) = (out = 0x000000EE), { 0x00001AAA, 0xADEAD000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(29) = (out = 0x000001DD), { 0x00001555, 0x5BD5A000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(30) = (out = 0x000003BB), { 0x00001AAA, 0xB7AB4000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(31) = (out = 0x00000777), { 0x00001555, 0x6F568000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(32) = (out = 0x000006EF), { 0x00001AAA, 0xDEAD0000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(33) = (out = 0x000005DE), { 0x00001555, 0xBD5A0000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(34) = (out = 0x000003BD), { 0x00001AAB, 0x7AB40000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(35) = (out = 0x0000077A), { 0x00001556, 0xF5680000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(36) = (out = 0x000006F5), { 0x00001AAD, 0xEAD00000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(37) = (out = 0x000005EA), { 0x0000155B, 0xD5A00000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(38) = (out = 0x000003D5), { 0x00001AB7, 0xAB400000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(39) = (out = 0x000007AA), { 0x0000156F, 0x56800000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(40) = (out = 0x00000755), { 0x00001ADE, 0xAD000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(41) = (out = 0x000006AA), { 0x000015BD, 0x5A000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(42) = (out = 0x00000555), { 0x00001B7A, 0xB4000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(43) = (out = 0x000002AA), { 0x000016F5, 0x68000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(44) = (out = 0x00000555), { 0x00001DEA, 0xD0000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(45) = (out = 0x000002AA), { 0x00001BD5, 0xA0000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(46) = (out = 0x00000555), { 0x000017AB, 0x40000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(47) = (out = 0x000002AA), { 0x00001F56, 0x80000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(48) = (out = 0x00000555), { 0x00001EAD, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(49) = (out = 0x000002AB), { 0x00001D5A, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(50) = (out = 0x00000556), { 0x00001AB4, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(51) = (out = 0x000002AD), { 0x00001568, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(52) = (out = 0x8000055A), { 0x00001AD0, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(53) = (out = 0x800002B5), { 0x000015A0, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(54) = (out = 0x8000056A), { 0x00001B40, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(55) = (out = 0x800002D5), { 0x00001680, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(56) = (out = 0x800005AA), { 0x00001D00, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(57) = (out = 0x80000355), { 0x00001A00, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(58) = (out = 0x800006AA), { 0x00001400, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(59) = (out = 0x80000555), { 0x00001800, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(60) = (out = 0x800002AA), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(61) = (out = 0x80000555), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(62) = (out = 0x800002AA), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(63) = (out = 0x80000555), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(64) = (out = 0x800002AA), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(65) = (out = 0x80000555), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(66) = (out = 0x800002AB), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(67) = (out = 0x80000556), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(68) = (out = 0x800002AD), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(69) = (out = 0x8000055B), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(70) = (out = 0x800002B7), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(71) = (out = 0x8000056F), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(72) = (out = 0x800002DE), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(73) = (out = 0x800005BD), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(74) = (out = 0x8000037A), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(75) = (out = 0x800006F5), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(76) = (out = 0x800005EA), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(77) = (out = 0x800003D5), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(78) = (out = 0x800007AB), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(79) = (out = 0x80000756), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(80) = (out = 0x800006AD), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(81) = (out = 0x8000055A), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(82) = (out = 0x800002B4), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(83) = (out = 0x80000568), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(84) = (out = 0x800002D0), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(85) = (out = 0x800005A0), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(86) = (out = 0x80000340), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(87) = (out = 0x80000680), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(88) = (out = 0x80000500), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(89) = (out = 0x80000200), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(90) = (out = 0x80000400), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(91) = (out = 0x80000000), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.elshift(92) = (out = 0x80000000), { 0x00001000, 0x00000000, 0x0000BEEF, 0x5555AAAA }
fc_t3, fx.ershift(0) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.ershift(1) = (out = 0x00000000), { 0x00001777, 0xAAAAD555, 0x6F56DF77, 0x5555AAAA }
fc_t3, fx.ershift(2) = (out = 0x80000000), { 0x000013BB, 0xD5556AAA, 0xB7AB6FBB, 0x5555AAAA }
fc_t3, fx.ershift(3) = (out = 0x40000000), { 0x000011DD, 0xEAAAB555, 0x5BD5B7DD, 0x5555AAAA }
fc_t3, fx.ershift(4) = (out = 0xA0000000), { 0x000010EE, 0xF5555AAA, 0xADEADBEE, 0x5555AAAA }
fc_t3, fx.ershift(5) = (out = 0x50000000), { 0x00001077, 0x7AAAAD55, 0x56F56DF7, 0x5555AAAA }
fc_t3, fx.ershift(6) = (out = 0xA8000000), { 0x0000103B, 0xBD5556AA, 0xAB7AB6FB, 0x5555AAAA }
fc_t3, fx.ershift(7) = (out = 0x54000000), { 0x0000101D, 0xDEAAAB55, 0x55BD5B7D, 0x5555AAAA }
fc_t3, fx.ershift(8) = (out = 0xAA000000), { 0x0000100E, 0xEF5555AA, 0xAADEADBE, 0x5555AAAA }
fc_t3, fx.ershift(9) = (out = 0x55000000), { 0x00001007, 0x77AAAAD5, 0x556F56DF, 0x5555AAAA }
fc_t3, fx.ershift(10) = (out = 0xAA800000), { 0x00001003, 0xBBD5556A, 0xAAB7AB6F, 0x5555AAAA }
fc_t3, fx.ershift(11) = (out = 0x55400000), { 0x00001001, 0xDDEAAAB5, 0x555BD5B7, 0x5555AAAA }
fc_t3, fx.ershift(12) = (out = 0xAAA00000), { 0x00001000, 0xEEF5555A, 0xAAADEADB, 0x5555AAAA }
fc_t3, fx.ershift(13) = (out = 0x55500000), { 0x00001000, 0x777AAAAD, 0x5556F56D, 0x5555AAAA }
fc_t3, fx.ershift(14) = (out = 0xAAA80000), { 0x00001000, 0x3BBD5556, 0xAAAB7AB6, 0x5555AAAA }
fc_t3, fx.ershift(15) = (out = 0x55540000), { 0x00001000, 0x1DDEAAAB, 0x5555BD5B, 0x5555AAAA }
fc_t3, fx.ershift(16) = (out = 0xAAAA0000), { 0x00001000, 0x0EEF5555, 0xAAAADEAD, 0x5555AAAA }
fc_t3, fx.ershift(17) = (out = 0xD5550000), { 0x00001000, 0x0777AAAA, 0xD5556F56, 0x5555AAAA }
fc_t3, fx.ershift(18) = (out = 0x6AAA8000), { 0x00001000, 0x03BBD555, 0x6AAAB7AB, 0x5555AAAA }
fc_t3, fx.ershift(19) = (out = 0xB5554000), { 0x00001000, 0x01DDEAAA, 0xB5555BD5, 0x5555AAAA }
fc_t3, fx.ershift(20) = (out = 0x5AAAA000), { 0x00001000, 0x00EEF555, 0x5AAAADEA, 0x5555AAAA }
fc_t3, fx.ershift(21) = (out = 0xAD555000), { 0x00001000, 0x00777AAA, 0xAD5556F5, 0x5555AAAA }
fc_t3, fx.ershift(22) = (out = 0x56AAA800), { 0x00001000, 0x003BBD55, 0x56AAAB7A, 0x5555AAAA }
fc_t3, fx.ershift(23) = (out = 0xAB555400), { 0x00001000, 0x001DDEAA, 0xAB5555BD, 0x5555AAAA }
fc_t3, fx.ershift(24) = (out = 0x55AAAA00), { 0x00001000, 0x000EEF55, 0x55AAAADE, 0x5555AAAA }
fc_t3, fx.ershift(25) = (out = 0xAAD55500), { 0x00001000, 0x000777AA, 0xAAD5556F, 0x5555AAAA }
fc_t3, fx.ershift(26) = (out = 0x556AAA80), { 0x00001000, 0x0003BBD5, 0x556AAAB7, 0x5555AAAA }
fc_t3, fx.ershift(27) = (out = 0xAAB55540), { 0x00001000, 0x0001DDEA, 0xAAB5555B, 0x5555AAAA }
fc_t3, fx.ershift(28) = (out = 0x555AAAA0), { 0x00001000, 0x0000EEF5, 0x555AAAAD, 0x5555AAAA }
fc_t3, fx.ershift(29) = (out = 0xAAAD5550), { 0x00001000, 0x0000777A, 0xAAAD5556, 0x5555AAAA }
fc_t3, fx.ershift(30) = (out = 0x5556AAA8), { 0x00001000, 0x00003BBD, 0x5556AAAB, 0x5555AAAA }
fc_t3, fx.ershift(31) = (out = 0xAAAB5554), { 0x00001000, 0x00001DDE, 0xAAAB5555, 0x5555AAAA }
fc_t3, fx.ershift(32) = (out = 0x5555AAAA), { 0x00001000, 0x00000EEF, 0x5555AAAA, 0xDEADBEEF }
fc_t3, fx.ershift(33) = (out = 0xAAAAD555), { 0x00001000, 0x00000777, 0xAAAAD555, 0x6F56DF77 }
fc_t3, fx.ershift(34) = (out = 0xD5556AAB), { 0x00001000, 0x000003BB, 0xD5556AAA, 0xB7AB6FBB }
fc_t3, fx.ershift(35) = (out = 0xEAAAB555), { 0x00001000, 0x000001DD, 0xEAAAB555, 0x5BD5B7DD }
fc_t3, fx.ershift(36) = (out = 0xF5555AAB), { 0x00001000, 0x000000EE, 0xF5555AAA, 0xADEADBEE }
fc_t3, fx.ershift(37) = (out = 0x7AAAAD55), { 0x00001000, 0x00000077, 0x7AAAAD55, 0x56F56DF7 }
fc_t3, fx.ershift(38) = (out = 0xBD5556AB), { 0x00001000, 0x0000003B, 0xBD5556AA, 0xAB7AB6FB }
fc_t3, fx.ershift(39) = (out = 0xDEAAAB55), { 0x00001000, 0x0000001D, 0xDEAAAB55, 0x55BD5B7D }
fc_t3, fx.ershift(40) = (out = 0xEF5555AB), { 0x00001000, 0x0000000E, 0xEF5555AA, 0xAADEADBE }
fc_t3, fx.ershift(41) = (out = 0x77AAAAD5), { 0x00001000, 0x00000007, 0x77AAAAD5, 0x556F56DF }
fc_t3, fx.ershift(42) = (out = 0xBBD5556B), { 0x00001000, 0x00000003, 0xBBD5556A, 0xAAB7AB6F }
fc_t3, fx.ershift(43) = (out = 0xDDEAAAB5), { 0x00001000, 0x00000001, 0xDDEAAAB5, 0x555BD5B7 }
fc_t3, fx.ershift(44) = (out = 0xEEF5555B), { 0x00001000, 0x00000000, 0xEEF5555A, 0xAAADEADB }
fc_t3, fx.ershift(45) = (out = 0xF77AAAAD), { 0x00001000, 0x00000000, 0x777AAAAD, 0x5556F56D }
fc_t3, fx.ershift(46) = (out = 0xFBBD5557), { 0x00001000, 0x00000000, 0x3BBD5556, 0xAAAB7AB6 }
fc_t3, fx.ershift(47) = (out = 0x7DDEAAAB), { 0x00001000, 0x00000000, 0x1DDEAAAB, 0x5555BD5B }
fc_t3, fx.ershift(48) = (out = 0xBEEF5555), { 0x00001000, 0x00000000, 0x0EEF5555, 0xAAAADEAD }
fc_t3, fx.ershift(49) = (out = 0xDF77AAAB), { 0x00001000, 0x00000000, 0x0777AAAA, 0xD5556F56 }
fc_t3, fx.ershift(50) = (out = 0x6FBBD555), { 0x00001000, 0x00000000, 0x03BBD555, 0x6AAAB7AB }
fc_t3, fx.ershift(51) = (out = 0xB7DDEAAB), { 0x00001000, 0x00000000, 0x01DDEAAA, 0xB5555BD5 }
fc_t3, fx.ershift(52) = (out = 0xDBEEF555), { 0x00001000, 0x00000000, 0x00EEF555, 0x5AAAADEA }
fc_t3, fx.ershift(53) = (out = 0x6DF77AAB), { 0x00001000, 0x00000000, 0x00777AAA, 0xAD5556F5 }
fc_t3, fx.ershift(54) = (out = 0xB6FBBD55), { 0x00001000, 0x00000000, 0x003BBD55, 0x56AAAB7A }
fc_t3, fx.ershift(55) = (out = 0x5B7DDEAB), { 0x00001000, 0x00000000, 0x001DDEAA, 0xAB5555BD }
fc_t3, fx.ershift(56) = (out = 0xADBEEF55), { 0x00001000, 0x00000000, 0x000EEF55, 0x55AAAADE }
fc_t3, fx.ershift(57) = (out = 0x56DF77AB), { 0x00001000, 0x00000000, 0x000777AA, 0xAAD5556F }
fc_t3, fx.ershift(58) = (out = 0xAB6FBBD5), { 0x00001000, 0x00000000, 0x0003BBD5, 0x556AAAB7 }
fc_t3, fx.ershift(59) = (out = 0xD5B7DDEB), { 0x00001000, 0x00000000, 0x0001DDEA, 0xAAB5555B }
fc_t3, fx.ershift(60) = (out = 0xEADBEEF5), { 0x00001000, 0x00000000, 0x0000EEF5, 0x555AAAAD }
fc_t3, fx.ershift(61) = (out = 0xF56DF77B), { 0x00001000, 0x00000000, 0x0000777A, 0xAAAD5556 }
fc_t3, fx.ershift(62) = (out = 0x7AB6FBBD), { 0x00001000, 0x00000000, 0x00003BBD, 0x5556AAAB }
fc_t3, fx.ershift(63) = (out = 0xBD5B7DDF), { 0x00001000, 0x00000000, 0x00001DDE, 0xAAAB5555 }
fc_t3, fx.ershift(64) = (out = 0xDEADBEEF), { 0x00001000, 0x00000000, 0x00000EEF, 0x5555AAAA }
fc_t3, fx.ershift(65) = (out = 0x6F56DF77), { 0x00001000, 0x00000000, 0x00000777, 0xAAAAD555 }
fc_t3, fx.ershift(66) = (out = 0xB7AB6FBB), { 0x00001000, 0x00000000, 0x000003BB, 0xD5556AAA }
fc_t3, fx.ershift(67) = (out = 0x5BD5B7DD), { 0x00001000, 0x00000000, 0x000001DD, 0xEAAAB555 }
fc_t3, fx.ershift(68) = (out = 0xADEADBEF), { 0x00001000, 0x00000000, 0x000000EE, 0xF5555AAA }
fc_t3, fx.ershift(69) = (out = 0x56F56DF7), { 0x00001000, 0x00000000, 0x00000077, 0x7AAAAD55 }
fc_t3, fx.ershift(70) = (out = 0xAB7AB6FB), { 0x00001000, 0x00000000, 0x0000003B, 0xBD5556AA }
fc_t3, fx.ershift(71) = (out = 0x55BD5B7D), { 0x00001000, 0x00000000, 0x0000001D, 0xDEAAAB55 }
fc_t3, fx.ershift(72) = (out = 0xAADEADBF), { 0x00001000, 0x00000000, 0x0000000E, 0xEF5555AA }
fc_t3, fx.ershift(73) = (out = 0x556F56DF), { 0x00001000, 0x00000000, 0x00000007, 0x77AAAAD5 }
fc_t3, fx.ershift(74) = (out = 0xAAB7AB6F), { 0x00001000, 0x00000000, 0x00000003, 0xBBD5556A }
fc_t3, fx.ershift(75) = (out = 0x555BD5B7), { 0x00001000, 0x00000000, 0x00000001, 0xDDEAAAB5 }
fc_t3, fx.ershift(76) = (out = 0xAAADEADB), { 0x00001000, 0x00000000, 0x00000000, 0xEEF5555A }
fc_t3, fx.ershift(77) = (out = 0x5556F56D), { 0x00001000, 0x00000000, 0x00000000, 0x777AAAAD }
fc_t3, fx.ershift(78) = (out = 0xAAAB7AB7), { 0x00001000, 0x00000000, 0x00000000, 0x3BBD5556 }
fc_t3, fx.ershift(79) = (out = 0x5555BD5B), { 0x00001000, 0x00000000, 0x00000000, 0x1DDEAAAB }
fc_t3, fx.ershift(80) = (out = 0xAAAADEAD), { 0x00001000, 0x00000000, 0x00000000, 0x0EEF5555 }
fc_t3, fx.ershift(81) = (out = 0xD5556F57), { 0x00001000, 0x00000000, 0x00000000, 0x0777AAAA }
fc_t3, fx.ershift(82) = (out = 0x6AAAB7AB), { 0x00001000, 0x00000000, 0x00000000, 0x03BBD555 }
fc_t3, fx.ershift(83) = (out = 0xB5555BD5), { 0x00001000, 0x00000000, 0x00000000, 0x01DDEAAA }
fc_t3, fx.ershift(84) = (out = 0x5AAAADEB), { 0x00001000, 0x00000000, 0x00000000, 0x00EEF555 }
fc_t3, fx.ershift(85) = (out = 0xAD5556F5), { 0x00001000, 0x00000000, 0x00000000, 0x00777AAA }
fc_t3, fx.ershift(86) = (out = 0x56AAAB7B), { 0x00001000, 0x00000000, 0x00000000, 0x003BBD55 }
fc_t3, fx.ershift(87) = (out = 0xAB5555BD), { 0x00001000, 0x00000000, 0x00000000, 0x001DDEAA }
fc_t3, fx.ershift(88) = (out = 0x55AAAADF), { 0x00001000, 0x00000000, 0x00000000, 0x000EEF55 }
fc_t3, fx.ershift(89) = (out = 0xAAD5556F), { 0x00001000, 0x00000000, 0x00000000, 0x000777AA }
fc_t3, fx.ershift(90) = (out = 0x556AAAB7), { 0x00001000, 0x00000000, 0x00000000, 0x0003BBD5 }
fc_t3, fx.ershift(91) = (out = 0xAAB5555B), { 0x00001000, 0x00000000, 0x00000000, 0x0001DDEA }
fc_t3, fx.ershift(92) = (out = 0x555AAAAD), { 0x00001000, 0x00000000, 0x00000000, 0x0000EEF5 }
fc_t3, fx.lshift(0) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.lshift(1) = (out = 0x00000001), { 0x00001DDE, 0xAAAB5555, 0xBD5B7DDE, 0xAAAB5554 }
fc_t3, fx.lshift(2) = (out = 0x00000003), { 0x00001BBD, 0x5556AAAB, 0x7AB6FBBD, 0x5556AAA8 }
fc_t3, fx.lshift(3) = (out = 0x00000007), { 0x0000177A, 0xAAAD5556, 0xF56DF77A, 0xAAAD5550 }
fc_t3, fx.lshift(4) = (out = 0x0000000E), { 0x00001EF5, 0x555AAAAD, 0xEADBEEF5, 0x555AAAA0 }
fc_t3, fx.lshift(5) = (out = 0x0000001D), { 0x00001DEA, 0xAAB5555B, 0xD5B7DDEA, 0xAAB55540 }
fc_t3, fx.lshift(6) = (out = 0x0000003B), { 0x00001BD5, 0x556AAAB7, 0xAB6FBBD5, 0x556AAA80 }
fc_t3, fx.lshift(7) = (out = 0x00000077), { 0x000017AA, 0xAAD5556F, 0x56DF77AA, 0xAAD55500 }
fc_t3, fx.lshift(8) = (out = 0x000000EE), { 0x00001F55, 0x55AAAADE, 0xADBEEF55, 0x55AAAA00 }
fc_t3, fx.lshift(9) = (out = 0x000001DD), { 0x00001EAA, 0xAB5555BD, 0x5B7DDEAA, 0xAB555400 }
fc_t3, fx.lshift(10) = (out = 0x000003BB), { 0x00001D55, 0x56AAAB7A, 0xB6FBBD55, 0x56AAA800 }
fc_t3, fx.lshift(11) = (out = 0x00000777), { 0x00001AAA, 0xAD5556F5, 0x6DF77AAA, 0xAD555000 }
fc_t3, fx.lshift(12) = (out = 0x00000EEF), { 0x00001555, 0x5AAAADEA, 0xDBEEF555, 0x5AAAA000 }
fc_t3, fx.lshift(13) = (out = 0x00001DDE), { 0x00001AAA, 0xB5555BD5, 0xB7DDEAAA, 0xB5554000 }
fc_t3, fx.lshift(14) = (out = 0x00003BBD), { 0x00001555, 0x6AAAB7AB, 0x6FBBD555, 0x6AAA8000 }
fc_t3, fx.lshift(15) = (out = 0x0000777A), { 0x00001AAA, 0xD5556F56, 0xDF77AAAA, 0xD5550000 }
fc_t3, fx.lshift(16) = (out = 0x0000EEF5), { 0x00001555, 0xAAAADEAD, 0xBEEF5555, 0xAAAA0000 }
fc_t3, fx.lshift(17) = (out = 0x0001DDEA), { 0x00001AAB, 0x5555BD5B, 0x7DDEAAAB, 0x55540000 }
fc_t3, fx.lshift(18) = (out = 0x0003BBD5), { 0x00001556, 0xAAAB7AB6, 0xFBBD5556, 0xAAA80000 }
fc_t3, fx.lshift(19) = (out = 0x000777AA), { 0x00001AAD, 0x5556F56D, 0xF77AAAAD, 0x55500000 }
fc_t3, fx.lshift(20) = (out = 0x000EEF55), { 0x0000155A, 0xAAADEADB, 0xEEF5555A, 0xAAA00000 }
fc_t3, fx.lshift(21) = (out = 0x001DDEAA), { 0x00001AB5, 0x555BD5B7, 0xDDEAAAB5, 0x55400000 }
fc_t3, fx.lshift(22) = (out = 0x003BBD55), { 0x0000156A, 0xAAB7AB6F, 0xBBD5556A, 0xAA800000 }
fc_t3, fx.lshift(23) = (out = 0x00777AAA), { 0x00001AD5, 0x556F56DF, 0x77AAAAD5, 0x55000000 }
fc_t3, fx.lshift(24) = (out = 0x00EEF555), { 0x000015AA, 0xAADEADBE, 0xEF5555AA, 0xAA000000 }
fc_t3, fx.lshift(25) = (out = 0x01DDEAAA), { 0x00001B55, 0x55BD5B7D, 0xDEAAAB55, 0x54000000 }
fc_t3, fx.lshift(26) = (out = 0x03BBD555), { 0x000016AA, 0xAB7AB6FB, 0xBD5556AA, 0xA8000000 }
fc_t3, fx.lshift(27) = (out = 0x0777AAAA), { 0x00001D55, 0x56F56DF7, 0x7AAAAD55, 0x50000000 }
fc_t3, fx.lshift(28) = (out = 0x0EEF5555), { 0x00001AAA, 0xADEADBEE, 0xF5555AAA, 0xA0000000 }
fc_t3, fx.lshift(29) = (out = 0x1DDEAAAB), { 0x00001555, 0x5BD5B7DD, 0xEAAAB555, 0x40000000 }
fc_t3, fx.lshift(30) = (out = 0x3BBD5556), { 0x00001AAA, 0xB7AB6FBB, 0xD5556AAA, 0x80000000 }
fc_t3, fx.lshift(31) = (out = 0x777AAAAD), { 0x00001555, 0x6F56DF77, 0xAAAAD555, 0x00000000 }
fc_t3, fx.lshift(32) = (out = 0xEEF5555A), { 0x00001AAA, 0xDEADBEEF, 0x5555AAAA, 0x00000000 }
fc_t3, fx.lshift(33) = (out = 0xDDEAAAB5), { 0x00001555, 0xBD5B7DDE, 0xAAAB5554, 0x00000000 }
fc_t3, fx.lshift(34) = (out = 0xBBD5556A), { 0x00001AAB, 0x7AB6FBBD, 0x5556AAA8, 0x00000000 }
fc_t3, fx.lshift(35) = (out = 0xF7AAAAD5), { 0x00001556, 0xF56DF77A, 0xAAAD5550, 0x00000000 }
fc_t3, fx.lshift(36) = (out = 0xEF5555AA), { 0x00001AAD, 0xEADBEEF5, 0x555AAAA0, 0x00000000 }
fc_t3, fx.lshift(37) = (out = 0xDEAAAB55), { 0x0000155B, 0xD5B7DDEA, 0xAAB55540, 0x00000000 }
fc_t3, fx.lshift(38) = (out = 0xBD5556AA), { 0x00001AB7, 0xAB6FBBD5, 0x556AAA80, 0x00000000 }
fc_t3, fx.lshift(39) = (out = 0xFAAAAD55), { 0x0000156F, 0x56DF77AA, 0xAAD55500, 0x00000000 }
fc_t3, fx.lshift(40) = (out = 0xF5555AAA), { 0x00001ADE, 0xADBEEF55, 0x55AAAA00, 0x00000000 }
fc_t3, fx.lshift(41) = (out = 0xEAAAB555), { 0x000015BD, 0x5B7DDEAA, 0xAB555400, 0x00000000 }
fc_t3, fx.lshift(42) = (out = 0xD5556AAA), { 0x00001B7A, 0xB6FBBD55, 0x56AAA800, 0x00000000 }
fc_t3, fx.lshift(43) = (out = 0xAAAAD555), { 0x000016F5, 0x6DF77AAA, 0xAD555000, 0x00000000 }
fc_t3, fx.lshift(44) = (out = 0xD555AAAA), { 0x00001DEA, 0xDBEEF555, 0x5AAAA000, 0x00000000 }
fc_t3, fx.lshift(45) = (out = 0xAAAB5555), { 0x00001BD5, 0xB7DDEAAA, 0xB5554000, 0x00000000 }
fc_t3, fx.lshift(46) = (out = 0xD556AAAB), { 0x000017AB, 0x6FBBD555, 0x6AAA8000, 0x00000000 }
fc_t3, fx.lshift(47) = (out = 0xAAAD5556), { 0x00001F56, 0xDF77AAAA, 0xD5550000, 0x00000000 }
fc_t3, fx.lshift(48) = (out = 0xD55AAAAD), { 0x00001EAD, 0xBEEF5555, 0xAAAA0000, 0x00000000 }
fc_t3, fx.lshift(49) = (out = 0xAAB5555B), { 0x00001D5B, 0x7DDEAAAB, 0x55540000, 0x00000000 }
fc_t3, fx.lshift(50) = (out = 0xD56AAAB7), { 0x00001AB6, 0xFBBD5556, 0xAAA80000, 0x00000000 }
fc_t3, fx.lshift(51) = (out = 0xAAD5556F), { 0x0000156D, 0xF77AAAAD, 0x55500000, 0x00000000 }
fc_t3, fx.lshift(52) = (out = 0xD5AAAADE), { 0x00001ADB, 0xEEF5555A, 0xAAA00000, 0x00000000 }
fc_t3, fx.lshift(53) = (out = 0xAB5555BD), { 0x000015B7, 0xDDEAAAB5, 0x55400000, 0x00000000 }
fc_t3, fx.lshift(54) = (out = 0xD6AAAB7A), { 0x00001B6F, 0xBBD5556A, 0xAA800000, 0x00000000 }
fc_t3, fx.lshift(55) = (out = 0xAD5556F5), { 0x000016DF, 0x77AAAAD5, 0x55000000, 0x00000000 }
fc_t3, fx.lshift(56) = (out = 0xDAAAADEA), { 0x00001DBE, 0xEF5555AA, 0xAA000000, 0x00000000 }
fc_t3, fx.lshift(57) = (out = 0xB5555BD5), { 0x00001B7D, 0xDEAAAB55, 0x54000000, 0x00000000 }
fc_t3, fx.lshift(58) = (out = 0xEAAAB7AB), { 0x000016FB, 0xBD5556AA, 0xA8000000, 0x00000000 }
fc_t3, fx.lshift(59) = (out = 0xD5556F56), { 0x00001DF7, 0x7AAAAD55, 0x50000000, 0x00000000 }
fc_t3, fx.lshift(60) = (out = 0xAAAADEAD), { 0x00001BEE, 0xF5555AAA, 0xA0000000, 0x00000000 }
fc_t3, fx.lshift(61) = (out = 0xD555BD5B), { 0x000017DD, 0xEAAAB555, 0x40000000, 0x00000000 }
fc_t3, fx.lshift(62) = (out = 0xAAAB7AB6), { 0x00001FBB, 0xD5556AAA, 0x80000000, 0x00000000 }
fc_t3, fx.lshift(63) = (out = 0xD556F56D), { 0x00001F77, 0xAAAAD555, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(64) = (out = 0xAAADEADB), { 0x00001EEF, 0x5555AAAA, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(65) = (out = 0xD55BD5B7), { 0x00001DDE, 0xAAAB5554, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(66) = (out = 0xAAB7AB6F), { 0x00001BBD, 0x5556AAA8, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(67) = (out = 0xD56F56DF), { 0x0000177A, 0xAAAD5550, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(68) = (out = 0xAADEADBE), { 0x00001EF5, 0x555AAAA0, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(69) = (out = 0xD5BD5B7D), { 0x00001DEA, 0xAAB55540, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(70) = (out = 0xAB7AB6FB), { 0x00001BD5, 0x556AAA80, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(71) = (out = 0xD6F56DF7), { 0x000017AA, 0xAAD55500, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(72) = (out = 0xADEADBEE), { 0x00001F55, 0x55AAAA00, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(73) = (out = 0xDBD5B7DD), { 0x00001EAA, 0xAB555400, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(74) = (out = 0xB7AB6FBB), { 0x00001D55, 0x56AAA800, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(75) = (out = 0xEF56DF77), { 0x00001AAA, 0xAD555000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(76) = (out = 0xDEADBEEF), { 0x00001555, 0x5AAAA000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(77) = (out = 0xBD5B7DDE), { 0x00001AAA, 0xB5554000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(78) = (out = 0xFAB6FBBD), { 0x00001555, 0x6AAA8000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(79) = (out = 0xF56DF77A), { 0x00001AAA, 0xD5550000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(80) = (out = 0xEADBEEF5), { 0x00001555, 0xAAAA0000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(81) = (out = 0xD5B7DDEA), { 0x00001AAB, 0x55540000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(82) = (out = 0xAB6FBBD5), { 0x00001556, 0xAAA80000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(83) = (out = 0xD6DF77AA), { 0x00001AAD, 0x55500000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(84) = (out = 0xADBEEF55), { 0x0000155A, 0xAAA00000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(85) = (out = 0xDB7DDEAA), { 0x00001AB5, 0x55400000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(86) = (out = 0xB6FBBD55), { 0x0000156A, 0xAA800000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(87) = (out = 0xEDF77AAA), { 0x00001AD5, 0x55000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(88) = (out = 0xDBEEF555), { 0x000015AA, 0xAA000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(89) = (out = 0xB7DDEAAA), { 0x00001B55, 0x54000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(90) = (out = 0xEFBBD555), { 0x000016AA, 0xA8000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(91) = (out = 0xDF77AAAA), { 0x00001D55, 0x50000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(92) = (out = 0xBEEF5555), { 0x00001AAA, 0xA0000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(93) = (out = 0xFDDEAAAB), { 0x00001555, 0x40000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(94) = (out = 0xFBBD5556), { 0x00001AAA, 0x80000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(95) = (out = 0xF77AAAAD), { 0x00001555, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(96) = (out = 0xEEF5555A), { 0x00001AAA, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(97) = (out = 0xDDEAAAB5), { 0x00001554, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(98) = (out = 0xBBD5556A), { 0x00001AA8, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(99) = (out = 0xF7AAAAD5), { 0x00001550, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(100) = (out = 0xEF5555AA), { 0x00001AA0, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(101) = (out = 0xDEAAAB55), { 0x00001540, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(102) = (out = 0xBD5556AA), { 0x00001A80, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(103) = (out = 0xFAAAAD55), { 0x00001500, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(104) = (out = 0xF5555AAA), { 0x00001A00, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(105) = (out = 0xEAAAB555), { 0x00001400, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(106) = (out = 0xD5556AAA), { 0x00001800, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(107) = (out = 0xAAAAD555), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(108) = (out = 0xD555AAAA), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(109) = (out = 0xAAAB5554), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(110) = (out = 0xD556AAA8), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(111) = (out = 0xAAAD5550), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(112) = (out = 0xD55AAAA0), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(113) = (out = 0xAAB55540), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(114) = (out = 0xD56AAA80), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(115) = (out = 0xAAD55500), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(116) = (out = 0xD5AAAA00), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(117) = (out = 0xAB555400), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(118) = (out = 0xD6AAA800), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(119) = (out = 0xAD555000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(120) = (out = 0xDAAAA000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(121) = (out = 0xB5554000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(122) = (out = 0xEAAA8000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(123) = (out = 0xD5550000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(124) = (out = 0xAAAA0000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(125) = (out = 0xD5540000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(126) = (out = 0xAAA80000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(127) = (out = 0xD5500000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(128) = (out = 0xAAA00000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(129) = (out = 0xD5400000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(130) = (out = 0xAA800000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(131) = (out = 0xD5000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(132) = (out = 0xAA000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(133) = (out = 0xD4000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(134) = (out = 0xA8000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(135) = (out = 0xD0000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(136) = (out = 0xA0000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(137) = (out = 0xC0000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(138) = (out = 0x80000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(139) = (out = 0x80000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.lshift(140) = (out = 0x80000000), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(0) = (out = 0x00000000), { 0x00001EEF, 0x5555AAAA, 0xDEADBEEF, 0x5555AAAA }
fc_t3, fx.rshift(1) = (out = 0x00000000), { 0x00001777, 0xAAAAD555, 0x6F56DF77, 0xAAAAD555 }
fc_t3, fx.rshift(2) = (out = 0x80000000), { 0x000013BB, 0xD5556AAA, 0xB7AB6FBB, 0xD5556AAA }
fc_t3, fx.rshift(3) = (out = 0x40000000), { 0x000011DD, 0xEAAAB555, 0x5BD5B7DD, 0xEAAAB555 }
fc_t3, fx.rshift(4) = (out = 0xA0000000), { 0x000010EE, 0xF5555AAA, 0xADEADBEE, 0xF5555AAA }
fc_t3, fx.rshift(5) = (out = 0x50000000), { 0x00001077, 0x7AAAAD55, 0x56F56DF7, 0x7AAAAD55 }
fc_t3, fx.rshift(6) = (out = 0xA8000000), { 0x0000103B, 0xBD5556AA, 0xAB7AB6FB, 0xBD5556AA }
fc_t3, fx.rshift(7) = (out = 0x54000000), { 0x0000101D, 0xDEAAAB55, 0x55BD5B7D, 0xDEAAAB55 }
fc_t3, fx.rshift(8) = (out = 0xAA000000), { 0x0000100E, 0xEF5555AA, 0xAADEADBE, 0xEF5555AA }
fc_t3, fx.rshift(9) = (out = 0x55000000), { 0x00001007, 0x77AAAAD5, 0x556F56DF, 0x77AAAAD5 }
fc_t3, fx.rshift(10) = (out = 0xAA800000), { 0x00001003, 0xBBD5556A, 0xAAB7AB6F, 0xBBD5556A }
fc_t3, fx.rshift(11) = (out = 0x55400000), { 0x00001001, 0xDDEAAAB5, 0x555BD5B7, 0xDDEAAAB5 }
fc_t3, fx.rshift(12) = (out = 0xAAA00000), { 0x00001000, 0xEEF5555A, 0xAAADEADB, 0xEEF5555A }
fc_t3, fx.rshift(13) = (out = 0x55500000), { 0x00001000, 0x777AAAAD, 0x5556F56D, 0xF77AAAAD }
fc_t3, fx.rshift(14) = (out = 0xAAA80000), { 0x00001000, 0x3BBD5556, 0xAAAB7AB6, 0xFBBD5556 }
fc_t3, fx.rshift(15) = (out = 0x55540000), { 0x00001000, 0x1DDEAAAB, 0x5555BD5B, 0x7DDEAAAB }
fc_t3, fx.rshift(16) = (out = 0xAAAA0000), { 0x00001000, 0x0EEF5555, 0xAAAADEAD, 0xBEEF5555 }
fc_t3, fx.rshift(17) = (out = 0xD5550000), { 0x00001000, 0x0777AAAA, 0xD5556F56, 0xDF77AAAA }
fc_t3, fx.rshift(18) = (out = 0x6AAA8000), { 0x00001000, 0x03BBD555, 0x6AAAB7AB, 0x6FBBD555 }
fc_t3, fx.rshift(19) = (out = 0xB5554000), { 0x00001000, 0x01DDEAAA, 0xB5555BD5, 0xB7DDEAAA }
fc_t3, fx.rshift(20) = (out = 0x5AAAA000), { 0x00001000, 0x00EEF555, 0x5AAAADEA, 0xDBEEF555 }
fc_t3, fx.rshift(21) = (out = 0xAD555000), { 0x00001000, 0x00777AAA, 0xAD5556F5, 0x6DF77AAA }
fc_t3, fx.rshift(22) = (out = 0x56AAA800), { 0x00001000, 0x003BBD55, 0x56AAAB7A, 0xB6FBBD55 }
fc_t3, fx.rshift(23) = (out = 0xAB555400), { 0x00001000, 0x001DDEAA, 0xAB5555BD, 0x5B7DDEAA }
fc_t3, fx.rshift(24) = (out = 0x55AAAA00), { 0x00001000, 0x000EEF55, 0x55AAAADE, 0xADBEEF55 }
fc_t3, fx.rshift(25) = (out = 0xAAD55500), { 0x00001000, 0x000777AA, 0xAAD5556F, 0x56DF77AA }
fc_t3, fx.rshift(26) = (out = 0x556AAA80), { 0x00001000, 0x0003BBD5, 0x556AAAB7, 0xAB6FBBD5 }
fc_t3, fx.rshift(27) = (out = 0xAAB55540), { 0x00001000, 0x0001DDEA, 0xAAB5555B, 0xD5B7DDEA }
fc_t3, fx.rshift(28) = (out = 0x555AAAA0), { 0x00001000, 0x0000EEF5, 0x555AAAAD, 0xEADBEEF5 }
fc_t3, fx.rshift(29) = (out = 0xAAAD5550), { 0x00001000, 0x0000777A, 0xAAAD5556, 0xF56DF77A }
fc_t3, fx.rshift(30) = (out = 0x5556AAA8), { 0x00001000, 0x00003BBD, 0x5556AAAB, 0x7AB6FBBD }
fc_t3, fx.rshift(31) = (out = 0xAAAB5554), { 0x00001000, 0x00001DDE, 0xAAAB5555, 0xBD5B7DDE }
fc_t3, fx.rshift(32) = (out = 0x5555AAAA), { 0x00001000, 0x00000EEF, 0x5555AAAA, 0xDEADBEEF }
fc_t3, fx.rshift(33) = (out = 0xAAAAD555), { 0x00001000, 0x00000777, 0xAAAAD555, 0x6F56DF77 }
fc_t3, fx.rshift(34) = (out = 0xD5556AAB), { 0x00001000, 0x000003BB, 0xD5556AAA, 0xB7AB6FBB }
fc_t3, fx.rshift(35) = (out = 0xEAAAB555), { 0x00001000, 0x000001DD, 0xEAAAB555, 0x5BD5B7DD }
fc_t3, fx.rshift(36) = (out = 0xF5555AAB), { 0x00001000, 0x000000EE, 0xF5555AAA, 0xADEADBEE }
fc_t3, fx.rshift(37) = (out = 0x7AAAAD55), { 0x00001000, 0x00000077, 0x7AAAAD55, 0x56F56DF7 }
fc_t3, fx.rshift(38) = (out = 0xBD5556AB), { 0x00001000, 0x0000003B, 0xBD5556AA, 0xAB7AB6FB }
fc_t3, fx.rshift(39) = (out = 0xDEAAAB55), { 0x00001000, 0x0000001D, 0xDEAAAB55, 0x55BD5B7D }
fc_t3, fx.rshift(40) = (out = 0xEF5555AB), { 0x00001000, 0x0000000E, 0xEF5555AA, 0xAADEADBE }
fc_t3, fx.rshift(41) = (out = 0x77AAAAD5), { 0x00001000, 0x00000007, 0x77AAAAD5, 0x556F56DF }
fc_t3, fx.rshift(42) = (out = 0xBBD5556B), { 0x00001000, 0x00000003, 0xBBD5556A, 0xAAB7AB6F }
fc_t3, fx.rshift(43) = (out = 0xDDEAAAB5), { 0x00001000, 0x00000001, 0xDDEAAAB5, 0x555BD5B7 }
fc_t3, fx.rshift(44) = (out = 0xEEF5555B), { 0x00001000, 0x00000000, 0xEEF5555A, 0xAAADEADB }
fc_t3, fx.rshift(45) = (out = 0xF77AAAAD), { 0x00001000, 0x00000000, 0x777AAAAD, 0x5556F56D }
fc_t3, fx.rshift(46) = (out = 0xFBBD5557), { 0x00001000, 0x00000000, 0x3BBD5556, 0xAAAB7AB6 }
fc_t3, fx.rshift(47) = (out = 0x7DDEAAAB), { 0x00001000, 0x00000000, 0x1DDEAAAB, 0x5555BD5B }
fc_t3, fx.rshift(48) = (out = 0xBEEF5555), { 0x00001000, 0x00000000, 0x0EEF5555, 0xAAAADEAD }
fc_t3, fx.rshift(49) = (out = 0xDF77AAAB), { 0x00001000, 0x00000000, 0x0777AAAA, 0xD5556F56 }
fc_t3, fx.rshift(50) = (out = 0x6FBBD555), { 0x00001000, 0x00000000, 0x03BBD555, 0x6AAAB7AB }
fc_t3, fx.rshift(51) = (out = 0xB7DDEAAB), { 0x00001000, 0x00000000, 0x01DDEAAA, 0xB5555BD5 }
fc_t3, fx.rshift(52) = (out = 0xDBEEF555), { 0x00001000, 0x00000000, 0x00EEF555, 0x5AAAADEA }
fc_t3, fx.rshift(53) = (out = 0x6DF77AAB), { 0x00001000, 0x00000000, 0x00777AAA, 0xAD5556F5 }
fc_t3, fx.rshift(54) = (out = 0xB6FBBD55), { 0x00001000, 0x00000000, 0x003BBD55, 0x56AAAB7A }
fc_t3, fx.rshift(55) = (out = 0x5B7DDEAB), { 0x00001000, 0x00000000, 0x001DDEAA, 0xAB5555BD }
fc_t3, fx.rshift(56) = (out = 0xADBEEF55), { 0x00001000, 0x00000000, 0x000EEF55, 0x55AAAADE }
fc_t3, fx.rshift(57) = (out = 0x56DF77AB), { 0x00001000, 0x00000000, 0x000777AA, 0xAAD5556F }
fc_t3, fx.rshift(58) = (out = 0xAB6FBBD5), { 0x00001000, 0x00000000, 0x0003BBD5, 0x556AAAB7 }
fc_t3, fx.rshift(59) = (out = 0xD5B7DDEB), { 0x00001000, 0x00000000, 0x0001DDEA, 0xAAB5555B }
fc_t3, fx.rshift(60) = (out = 0xEADBEEF5), { 0x00001000, 0x00000000, 0x0000EEF5, 0x555AAAAD }
fc_t3, fx.rshift(61) = (out = 0xF56DF77B), { 0x00001000, 0x00000000, 0x0000777A, 0xAAAD5556 }
fc_t3, fx.rshift(62) = (out = 0x7AB6FBBD), { 0x00001000, 0x00000000, 0x00003BBD, 0x5556AAAB }
fc_t3, fx.rshift(63) = (out = 0xBD5B7DDF), { 0x00001000, 0x00000000, 0x00001DDE, 0xAAAB5555 }
fc_t3, fx.rshift(64) = (out = 0xDEADBEEF), { 0x00001000, 0x00000000, 0x00000EEF, 0x5555AAAA }
fc_t3, fx.rshift(65) = (out = 0x6F56DF77), { 0x00001000, 0x00000000, 0x00000777, 0xAAAAD555 }
fc_t3, fx.rshift(66) = (out = 0xB7AB6FBB), { 0x00001000, 0x00000000, 0x000003BB, 0xD5556AAA }
fc_t3, fx.rshift(67) = (out = 0x5BD5B7DD), { 0x00001000, 0x00000000, 0x000001DD, 0xEAAAB555 }
fc_t3, fx.rshift(68) = (out = 0xADEADBEF), { 0x00001000, 0x00000000, 0x000000EE, 0xF5555AAA }
fc_t3, fx.rshift(69) = (out = 0x56F56DF7), { 0x00001000, 0x00000000, 0x00000077, 0x7AAAAD55 }
fc_t3, fx.rshift(70) = (out = 0xAB7AB6FB), { 0x00001000, 0x00000000, 0x0000003B, 0xBD5556AA }
fc_t3, fx.rshift(71) = (out = 0x55BD5B7D), { 0x00001000, 0x00000000, 0x0000001D, 0xDEAAAB55 }
fc_t3, fx.rshift(72) = (out = 0xAADEADBF), { 0x00001000, 0x00000000, 0x0000000E, 0xEF5555AA }
fc_t3, fx.rshift(73) = (out = 0x556F56DF), { 0x00001000, 0x00000000, 0x00000007, 0x77AAAAD5 }
fc_t3, fx.rshift(74) = (out = 0xAAB7AB6F), { 0x00001000, 0x00000000, 0x00000003, 0xBBD5556A }
fc_t3, fx.rshift(75) = (out = 0x555BD5B7), { 0x00001000, 0x00000000, 0x00000001, 0xDDEAAAB5 }
fc_t3, fx.rshift(76) = (out = 0xAAADEADB), { 0x00001000, 0x00000000, 0x00000000, 0xEEF5555A }
fc_t3, fx.rshift(77) = (out = 0x5556F56D), { 0x00001000, 0x00000000, 0x00000000, 0x777AAAAD }
fc_t3, fx.rshift(78) = (out = 0xAAAB7AB7), { 0x00001000, 0x00000000, 0x00000000, 0x3BBD5556 }
fc_t3, fx.rshift(79) = (out = 0x5555BD5B), { 0x00001000, 0x00000000, 0x00000000, 0x1DDEAAAB }
fc_t3, fx.rshift(80) = (out = 0xAAAADEAD), { 0x00001000, 0x00000000, 0x00000000, 0x0EEF5555 }
fc_t3, fx.rshift(81) = (out = 0xD5556F57), { 0x00001000, 0x00000000, 0x00000000, 0x0777AAAA }
fc_t3, fx.rshift(82) = (out = 0x6AAAB7AB), { 0x00001000, 0x00000000, 0x00000000, 0x03BBD555 }
fc_t3, fx.rshift(83) = (out = 0xB5555BD5), { 0x00001000, 0x00000000, 0x00000000, 0x01DDEAAA }
fc_t3, fx.rshift(84) = (out = 0x5AAAADEB), { 0x00001000, 0x00000000, 0x00000000, 0x00EEF555 }
fc_t3, fx.rshift(85) = (out = 0xAD5556F5), { 0x00001000, 0x00000000, 0x00000000, 0x00777AAA }
fc_t3, fx.rshift(86) = (out = 0x56AAAB7B), { 0x00001000, 0x00000000, 0x00000000, 0x003BBD55 }
fc_t3, fx.rshift(87) = (out = 0xAB5555BD), { 0x00001000, 0x00000000, 0x00000000, 0x001DDEAA }
fc_t3, fx.rshift(88) = (out = 0x55AAAADF), { 0x00001000, 0x00000000, 0x00000000, 0x000EEF55 }
fc_t3, fx.rshift(89) = (out = 0xAAD5556F), { 0x00001000, 0x00000000, 0x00000000, 0x000777AA }
fc_t3, fx.rshift(90) = (out = 0x556AAAB7), { 0x00001000, 0x00000000, 0x00000000, 0x0003BBD5 }
fc_t3, fx.rshift(91) = (out = 0xAAB5555B), { 0x00001000, 0x00000000, 0x00000000, 0x0001DDEA }
fc_t3, fx.rshift(92) = (out = 0x555AAAAD), { 0x00001000, 0x00000000, 0x00000000, 0x0000EEF5 }
fc_t3, fx.rshift(93) = (out = 0xAAAD5557), { 0x00001000, 0x00000000, 0x00000000, 0x0000777A }
fc_t3, fx.rshift(94) = (out = 0x5556AAAB), { 0x00001000, 0x00000000, 0x00000000, 0x00003BBD }
fc_t3, fx.rshift(95) = (out = 0xAAAB5555), { 0x00001000, 0x00000000, 0x00000000, 0x00001DDE }
fc_t3, fx.rshift(96) = (out = 0x5555AAAB), { 0x00001000, 0x00000000, 0x00000000, 0x00000EEF }
fc_t3, fx.rshift(97) = (out = 0xAAAAD555), { 0x00001000, 0x00000000, 0x00000000, 0x00000777 }
fc_t3, fx.rshift(98) = (out = 0xD5556AAB), { 0x00001000, 0x00000000, 0x00000000, 0x000003BB }
fc_t3, fx.rshift(99) = (out = 0xEAAAB555), { 0x00001000, 0x00000000, 0x00000000, 0x000001DD }
fc_t3, fx.rshift(100) = (out = 0xF5555AAB), { 0x00001000, 0x00000000, 0x00000000, 0x000000EE }
fc_t3, fx.rshift(101) = (out = 0x7AAAAD55), { 0x00001000, 0x00000000, 0x00000000, 0x00000077 }
fc_t3, fx.rshift(102) = (out = 0xBD5556AB), { 0x00001000, 0x00000000, 0x00000000, 0x0000003B }
fc_t3, fx.rshift(103) = (out = 0xDEAAAB55), { 0x00001000, 0x00000000, 0x00000000, 0x0000001D }
fc_t3, fx.rshift(104) = (out = 0xEF5555AB), { 0x00001000, 0x00000000, 0x00000000, 0x0000000E }
fc_t3, fx.rshift(105) = (out = 0x77AAAAD5), { 0x00001000, 0x00000000, 0x00000000, 0x00000007 }
fc_t3, fx.rshift(106) = (out = 0xBBD5556B), { 0x00001000, 0x00000000, 0x00000000, 0x00000003 }
fc_t3, fx.rshift(107) = (out = 0xDDEAAAB5), { 0x00001000, 0x00000000, 0x00000000, 0x00000001 }
fc_t3, fx.rshift(108) = (out = 0xEEF5555B), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(109) = (out = 0x777AAAAD), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(110) = (out = 0x3BBD5557), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(111) = (out = 0x1DDEAAAB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(112) = (out = 0x0EEF5555), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(113) = (out = 0x0777AAAB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(114) = (out = 0x03BBD555), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(115) = (out = 0x01DDEAAB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(116) = (out = 0x00EEF555), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(117) = (out = 0x00777AAB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(118) = (out = 0x003BBD55), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(119) = (out = 0x001DDEAB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(120) = (out = 0x000EEF55), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(121) = (out = 0x000777AB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(122) = (out = 0x0003BBD5), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(123) = (out = 0x0001DDEB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(124) = (out = 0x0000EEF5), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(125) = (out = 0x0000777B), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(126) = (out = 0x00003BBD), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(127) = (out = 0x00001DDF), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(128) = (out = 0x00000EEF), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(129) = (out = 0x00000777), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(130) = (out = 0x000003BB), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(131) = (out = 0x000001DD), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(132) = (out = 0x000000EF), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(133) = (out = 0x00000077), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(134) = (out = 0x0000003B), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(135) = (out = 0x0000001D), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(136) = (out = 0x0000000F), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(137) = (out = 0x00000007), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(138) = (out = 0x00000003), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(139) = (out = 0x00000001), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
fc_t3, fx.rshift(140) = (out = 0x00000001), { 0x00001000, 0x00000000, 0x00000000, 0x00000000 }
Testing semi-numerical operations
y = { 0x00000000, 0x00000000 } (0)
fint(y, 0) -> { 0x00000000, 0x00000000 } (0)
fint(y, 0) = 0
y = { 0x3FD00000, 0x00000000 } (  2.5000000000000000E-01)
fint(y, 0) -> { 0x00000000, 0x00000000 } (0)
fint(y, 0) = 1
y = { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
fint(y, 0) -> { 0x00000000, 0x00000000 } (0)
fint(y, 0) = 1
y = { 0x3FE80000, 0x00000000 } (  7.5000000000000000E-01)
fint(y, 0) -> { 0x00000000, 0x00000000 } (0)
fint(y, 0) = 1
y = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 0) -> { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x3FF40000, 0x00000000 } (  1.2500000000000000E+00)
fint(y, 0) -> { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x3FF80000, 0x00000000 } (  1.5000000000000000E+00)
fint(y, 0) -> { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x3FFC0000, 0x00000000 } (  1.7500000000000000E+00)
fint(y, 0) -> { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 0) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x40020000, 0x00000000 } (  2.2500000000000000E+00)
fint(y, 0) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40040000, 0x00000000 } (  2.5000000000000000E+00)
fint(y, 0) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40060000, 0x00000000 } (  2.7500000000000000E+00)
fint(y, 0) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 0) -> { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x400A0000, 0x00000000 } (  3.2500000000000000E+00)
fint(y, 0) -> { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x400C0000, 0x00000000 } (  3.5000000000000000E+00)
fint(y, 0) -> { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x400E0000, 0x00000000 } (  3.7500000000000000E+00)
fint(y, 0) -> { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 0) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x40110000, 0x00000000 } (  4.2500000000000000E+00)
fint(y, 0) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40120000, 0x00000000 } (  4.5000000000000000E+00)
fint(y, 0) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40130000, 0x00000000 } (  4.7500000000000000E+00)
fint(y, 0) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 0) -> { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x40150000, 0x00000000 } (  5.2500000000000000E+00)
fint(y, 0) -> { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40160000, 0x00000000 } (  5.5000000000000000E+00)
fint(y, 0) -> { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40170000, 0x00000000 } (  5.7500000000000000E+00)
fint(y, 0) -> { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 0) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x40190000, 0x00000000 } (  6.2500000000000000E+00)
fint(y, 0) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x401A0000, 0x00000000 } (  6.5000000000000000E+00)
fint(y, 0) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x401B0000, 0x00000000 } (  6.7500000000000000E+00)
fint(y, 0) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 0) -> { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x401D0000, 0x00000000 } (  7.2500000000000000E+00)
fint(y, 0) -> { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x401E0000, 0x00000000 } (  7.5000000000000000E+00)
fint(y, 0) -> { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x401F0000, 0x00000000 } (  7.7500000000000000E+00)
fint(y, 0) -> { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 0) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x40208000, 0x00000000 } (  8.2500000000000000E+00)
fint(y, 0) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40210000, 0x00000000 } (  8.5000000000000000E+00)
fint(y, 0) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40218000, 0x00000000 } (  8.7500000000000000E+00)
fint(y, 0) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 0) -> { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 0) = 0
y = { 0x40228000, 0x00000000 } (  9.2500000000000000E+00)
fint(y, 0) -> { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40230000, 0x00000000 } (  9.5000000000000000E+00)
fint(y, 0) -> { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40238000, 0x00000000 } (  9.7500000000000000E+00)
fint(y, 0) -> { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 0) = 1
y = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fint(y, 0) -> { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fint(y, 0) = 0
y = { 0x00000000, 0x00000000 } (0)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 0
y = { 0x3FD00000, 0x00000000 } (  2.5000000000000000E-01)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x3FE80000, 0x00000000 } (  7.5000000000000000E-01)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x3FF40000, 0x00000000 } (  1.2500000000000000E+00)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x3FF80000, 0x00000000 } (  1.5000000000000000E+00)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x3FFC0000, 0x00000000 } (  1.7500000000000000E+00)
fint(y, -1) -> { 0x00000000, 0x00000000 } (0)
fint(y, -1) = 1
y = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 0
y = { 0x40020000, 0x00000000 } (  2.2500000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40040000, 0x00000000 } (  2.5000000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40060000, 0x00000000 } (  2.7500000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x400A0000, 0x00000000 } (  3.2500000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x400C0000, 0x00000000 } (  3.5000000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x400E0000, 0x00000000 } (  3.7500000000000000E+00)
fint(y, -1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 0
y = { 0x40110000, 0x00000000 } (  4.2500000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40120000, 0x00000000 } (  4.5000000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40130000, 0x00000000 } (  4.7500000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40150000, 0x00000000 } (  5.2500000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40160000, 0x00000000 } (  5.5000000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40170000, 0x00000000 } (  5.7500000000000000E+00)
fint(y, -1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 0
y = { 0x40190000, 0x00000000 } (  6.2500000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x401A0000, 0x00000000 } (  6.5000000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x401B0000, 0x00000000 } (  6.7500000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x401D0000, 0x00000000 } (  7.2500000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x401E0000, 0x00000000 } (  7.5000000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x401F0000, 0x00000000 } (  7.7500000000000000E+00)
fint(y, -1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 0
y = { 0x40208000, 0x00000000 } (  8.2500000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40210000, 0x00000000 } (  8.5000000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40218000, 0x00000000 } (  8.7500000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40228000, 0x00000000 } (  9.2500000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40230000, 0x00000000 } (  9.5000000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40238000, 0x00000000 } (  9.7500000000000000E+00)
fint(y, -1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, -1) = 1
y = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fint(y, -1) -> { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fint(y, -1) = 0
y = { 0x00000000, 0x00000000 } (0)
fint(y, 1) -> { 0x00000000, 0x00000000 } (0)
fint(y, 1) = 0
y = { 0x3FD00000, 0x00000000 } (  2.5000000000000000E-01)
fint(y, 1) -> { 0x00000000, 0x00000000 } (0)
fint(y, 1) = 1
y = { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
fint(y, 1) -> { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
fint(y, 1) = 0
y = { 0x3FE80000, 0x00000000 } (  7.5000000000000000E-01)
fint(y, 1) -> { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
fint(y, 1) = 1
y = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 1) -> { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x3FF40000, 0x00000000 } (  1.2500000000000000E+00)
fint(y, 1) -> { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x3FF80000, 0x00000000 } (  1.5000000000000000E+00)
fint(y, 1) -> { 0x3FF80000, 0x00000000 } (  1.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x3FFC0000, 0x00000000 } (  1.7500000000000000E+00)
fint(y, 1) -> { 0x3FF80000, 0x00000000 } (  1.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x40020000, 0x00000000 } (  2.2500000000000000E+00)
fint(y, 1) -> { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x40040000, 0x00000000 } (  2.5000000000000000E+00)
fint(y, 1) -> { 0x40040000, 0x00000000 } (  2.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x40060000, 0x00000000 } (  2.7500000000000000E+00)
fint(y, 1) -> { 0x40040000, 0x00000000 } (  2.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 1) -> { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x400A0000, 0x00000000 } (  3.2500000000000000E+00)
fint(y, 1) -> { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x400C0000, 0x00000000 } (  3.5000000000000000E+00)
fint(y, 1) -> { 0x400C0000, 0x00000000 } (  3.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x400E0000, 0x00000000 } (  3.7500000000000000E+00)
fint(y, 1) -> { 0x400C0000, 0x00000000 } (  3.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x40110000, 0x00000000 } (  4.2500000000000000E+00)
fint(y, 1) -> { 0x40100000, 0x00000000 } (  4.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x40120000, 0x00000000 } (  4.5000000000000000E+00)
fint(y, 1) -> { 0x40120000, 0x00000000 } (  4.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x40130000, 0x00000000 } (  4.7500000000000000E+00)
fint(y, 1) -> { 0x40120000, 0x00000000 } (  4.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 1) -> { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x40150000, 0x00000000 } (  5.2500000000000000E+00)
fint(y, 1) -> { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x40160000, 0x00000000 } (  5.5000000000000000E+00)
fint(y, 1) -> { 0x40160000, 0x00000000 } (  5.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x40170000, 0x00000000 } (  5.7500000000000000E+00)
fint(y, 1) -> { 0x40160000, 0x00000000 } (  5.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x40190000, 0x00000000 } (  6.2500000000000000E+00)
fint(y, 1) -> { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x401A0000, 0x00000000 } (  6.5000000000000000E+00)
fint(y, 1) -> { 0x401A0000, 0x00000000 } (  6.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x401B0000, 0x00000000 } (  6.7500000000000000E+00)
fint(y, 1) -> { 0x401A0000, 0x00000000 } (  6.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 1) -> { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x401D0000, 0x00000000 } (  7.2500000000000000E+00)
fint(y, 1) -> { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x401E0000, 0x00000000 } (  7.5000000000000000E+00)
fint(y, 1) -> { 0x401E0000, 0x00000000 } (  7.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x401F0000, 0x00000000 } (  7.7500000000000000E+00)
fint(y, 1) -> { 0x401E0000, 0x00000000 } (  7.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x40208000, 0x00000000 } (  8.2500000000000000E+00)
fint(y, 1) -> { 0x40200000, 0x00000000 } (  8.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x40210000, 0x00000000 } (  8.5000000000000000E+00)
fint(y, 1) -> { 0x40210000, 0x00000000 } (  8.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x40218000, 0x00000000 } (  8.7500000000000000E+00)
fint(y, 1) -> { 0x40210000, 0x00000000 } (  8.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 1) -> { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 1) = 0
y = { 0x40228000, 0x00000000 } (  9.2500000000000000E+00)
fint(y, 1) -> { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
fint(y, 1) = 1
y = { 0x40230000, 0x00000000 } (  9.5000000000000000E+00)
fint(y, 1) -> { 0x40230000, 0x00000000 } (  9.5000000000000000E+00)
fint(y, 1) = 0
y = { 0x40238000, 0x00000000 } (  9.7500000000000000E+00)
fint(y, 1) -> { 0x40230000, 0x00000000 } (  9.5000000000000000E+00)
fint(y, 1) = 1
y = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fint(y, 1) -> { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fint(y, 1) = 0
Testing basic math operations
fa = { 0x00000000, 0x00000000 } (0)
fa.add(f200); fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fa.add(Float(1)) = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
Float(2) = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
Float(2).add(Float(3)) = { 0x40140000, 0x00000000 } (  5.0000000000000000E+00)
Float(13) = { 0x402A0000, 0x00000000 } (  1.3000000000000000E+01)
Float(13).add(Float(13)) = { 0x403A0000, 0x00000000 } (  2.6000000000000000E+01)
Float(1) = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
n <- n + n + 1 = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
n <- n + n + 1 = { 0x401C0000, 0x00000000 } (  7.0000000000000000E+00)
n <- n + n + 1 = { 0x402E0000, 0x00000000 } (  1.5000000000000000E+01)
n <- n + n + 1 = { 0x403F0000, 0x00000000 } (  3.1000000000000000E+01)
n <- n + n + 1 = { 0x404F8000, 0x00000000 } (  6.3000000000000000E+01)
n <- n + n + 1 = { 0x405FC000, 0x00000000 } (  1.2700000000000000E+02)
n <- n + n + 1 = { 0x406FE000, 0x00000000 } (  2.5500000000000000E+02)
n <- n + n + 1 = { 0x407FF000, 0x00000000 } (  5.1100000000000000E+02)
n <- n + n + 1 = { 0x408FF800, 0x00000000 } (  1.0230000000000000E+03)
n <- n + n + 1 = { 0x409FFC00, 0x00000000 } (  2.0470000000000000E+03)
n <- n + n + 1 = { 0x40AFFE00, 0x00000000 } (  4.0950000000000000E+03)
n <- n + n + 1 = { 0x40BFFF00, 0x00000000 } (  8.1910000000000000E+03)
n <- n + n + 1 = { 0x40CFFF80, 0x00000000 } (  1.6383000000000000E+04)
n <- n + n + 1 = { 0x40DFFFC0, 0x00000000 } (  3.2767000000000000E+04)
n <- n + n + 1 = { 0x40EFFFE0, 0x00000000 } (  6.5535000000000000E+04)
n <- n + n + 1 = { 0x40FFFFF0, 0x00000000 } (  1.3107100000000000E+05)
n <- n + n + 1 = { 0x410FFFF8, 0x00000000 } (  2.6214300000000000E+05)
n <- n + n + 1 = { 0x411FFFFC, 0x00000000 } (  5.2428700000000000E+05)
n <- n + n + 1 = { 0x412FFFFE, 0x00000000 } (  1.0485750000000000E+06)
n <- n + n + 1 = { 0x413FFFFF, 0x00000000 } (  2.0971510000000000E+06)
n <- n + n + 1 = { 0x414FFFFF, 0x80000000 } (  4.1943030000000000E+06)
n <- n + n + 1 = { 0x415FFFFF, 0xC0000000 } (  8.3886070000000000E+06)
n <- n + n + 1 = { 0x416FFFFF, 0xE0000000 } (  1.6777215000000000E+07)
n <- n + n + 1 = { 0x417FFFFF, 0xF0000000 } (  3.3554431000000000E+07)
n <- n + n + 1 = { 0x418FFFFF, 0xF8000000 } (  6.7108863000000000E+07)
n <- n + n + 1 = { 0x419FFFFF, 0xFC000000 } (  1.3421772700000000E+08)
n <- n + n + 1 = { 0x41AFFFFF, 0xFE000000 } (  2.6843545500000000E+08)
n <- n + n + 1 = { 0x41BFFFFF, 0xFF000000 } (  5.3687091100000000E+08)
n <- n + n + 1 = { 0x41CFFFFF, 0xFF800000 } (  1.0737418230000000E+09)
n <- n + n + 1 = { 0x41DFFFFF, 0xFFC00000 } (  2.1474836470000000E+09)
n <- n + n + 1 = { 0x41EFFFFF, 0xFFE00000 } (  4.2949672950000000E+09)
n <- n + n + 1 = { 0x41FFFFFF, 0xFFF00000 } (  8.5899345910000000E+09)
n <- n + n + 1 = { 0x420FFFFF, 0xFFF80000 } (  1.7179869183000000E+10)
n <- n + n + 1 = { 0x421FFFFF, 0xFFFC0000 } (  3.4359738367000000E+10)
n <- n + n + 1 = { 0x422FFFFF, 0xFFFE0000 } (  6.8719476735000000E+10)
n <- n + n + 1 = { 0x423FFFFF, 0xFFFF0000 } (  1.3743895347100000E+11)
n <- n + n + 1 = { 0x424FFFFF, 0xFFFF8000 } (  2.7487790694300000E+11)
n <- n + n + 1 = { 0x425FFFFF, 0xFFFFC000 } (  5.4975581388700000E+11)
n <- n + n + 1 = { 0x426FFFFF, 0xFFFFE000 } (  1.0995116277750000E+12)
n <- n + n + 1 = { 0x427FFFFF, 0xFFFFF000 } (  2.1990232555510000E+12)
n <- n + n + 1 = { 0x428FFFFF, 0xFFFFF800 } (  4.3980465111030000E+12)
n <- n + n + 1 = { 0x429FFFFF, 0xFFFFFC00 } (  8.7960930222070000E+12)
n <- n + n + 1 = { 0x42AFFFFF, 0xFFFFFE00 } (  1.7592186044415000E+13)
n <- n + n + 1 = { 0x42BFFFFF, 0xFFFFFF00 } (  3.5184372088831000E+13)
n <- n + n + 1 = { 0x42CFFFFF, 0xFFFFFF80 } (  7.0368744177663000E+13)
n <- n + n + 1 = { 0x42DFFFFF, 0xFFFFFFC0 } (  1.4073748835532700E+14)
n <- n + n + 1 = { 0x42EFFFFF, 0xFFFFFFE0 } (  2.8147497671065500E+14)
n <- n + n + 1 = { 0x42FFFFFF, 0xFFFFFFF0 } (  5.6294995342131100E+14)
n <- n + n + 1 = { 0x430FFFFF, 0xFFFFFFF8 } (  1.1258999068426230E+15)
n <- n + n + 1 = { 0x431FFFFF, 0xFFFFFFFC } (  2.2517998136852470E+15)
n <- n + n + 1 = { 0x432FFFFF, 0xFFFFFFFE } (  4.5035996273704950E+15)
n <- n + n + 1 = { 0x433FFFFF, 0xFFFFFFFF } (  9.0071992547409910E+15)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43500000, 0x00000000 } (  1.8014398509481984E+16)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43500000, 0x00000000 } (  1.8014398509481984E+16)
n <- n + n + 1 = { 0x43500000, 0x00000000 } (  1.8014398509481984E+16)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43600000, 0x00000000 } (  3.6028797018963968E+16)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43600000, 0x00000000 } (  3.6028797018963968E+16)
n <- n + n + 1 = { 0x43600000, 0x00000000 } (  3.6028797018963968E+16)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43700000, 0x00000000 } (  7.2057594037927936E+16)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43700000, 0x00000000 } (  7.2057594037927936E+16)
n <- n + n + 1 = { 0x43700000, 0x00000000 } (  7.2057594037927936E+16)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43800000, 0x00000000 } (  1.4411518807585587E+17)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43800000, 0x00000000 } (  1.4411518807585587E+17)
n <- n + n + 1 = { 0x43800000, 0x00000000 } (  1.4411518807585587E+17)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43900000, 0x00000000 } (  2.8823037615171174E+17)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43900000, 0x00000000 } (  2.8823037615171174E+17)
n <- n + n + 1 = { 0x43900000, 0x00000000 } (  2.8823037615171174E+17)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43A00000, 0x00000000 } (  5.7646075230342349E+17)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43A00000, 0x00000000 } (  5.7646075230342349E+17)
n <- n + n + 1 = { 0x43A00000, 0x00000000 } (  5.7646075230342349E+17)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43B00000, 0x00000000 } (  1.1529215046068470E+18)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43B00000, 0x00000000 } (  1.1529215046068470E+18)
n <- n + n + 1 = { 0x43B00000, 0x00000000 } (  1.1529215046068470E+18)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x43C00000, 0x00000000 } (  2.3058430092136940E+18)
	b = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
	r = { 0x43C00000, 0x00000000 } (  2.3058430092136940E+18)
n <- n + n + 1 = { 0x43C00000, 0x00000000 } (  2.3058430092136940E+18)
Trap: type = FormatMismatch, op = Addition, status = 0x21
	a = { 0x40000000 } ( 2.0000000E+00)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x7F800001 } (QNaN)
Float(fcsingle, 2) + Float(fc, 3) = { 0x7F800001 } (QNaN)
Trap: type = InvalidOperation, op = Addition, status = 0x02
	a = { 0x7FF00000, 0x00000002 } (NaN)
	b = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
NaN + 20 = { 0x7FF00000, 0x00000001 } (QNaN)
QNaN + 20 = { 0x7FF00000, 0x00000001 } (QNaN)
PInf + 20 = { 0x7FF00000, 0x00000000 } (+Inf)
NInf + 20 = { 0xFFF00000, 0x00000000 } (-Inf)
+0 + 20 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
-0 + 20 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
Trap: type = InvalidOperation, op = Addition, status = 0x02
	a = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
	b = { 0x7FF00000, 0x00000002 } (NaN)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
20 + NaN = { 0x7FF00000, 0x00000001 } (QNaN)
20 + QNaN = { 0x7FF00000, 0x00000001 } (QNaN)
20 + PInf = { 0x7FF00000, 0x00000000 } (+Inf)
20 + NInf = { 0xFFF00000, 0x00000000 } (-Inf)
20 + 0 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
20 + -0 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
-20 + 200 = { 0x40668000, 0x00000000 } (  1.8000000000000000E+02)
20 + 200 = { 0x406B8000, 0x00000000 } (  2.2000000000000000E+02)
200 + 20 = { 0x406B8000, 0x00000000 } (  2.2000000000000000E+02)
0x0F000002 + 0x0F000004 = { 0x0F800003 } ( 1.2621779E-29)
0x00000001 + 0x00000002 = { 0x00000003 } ( 4.2038954E-45)
0x00401000 + 0x00400000 = { 0x00801000 } ( 1.1760683E-38)
0x10401000 + 0x10400000 = { 0x10C00800 } ( 7.5742973E-29)
0x7F7FFFFE + 0x74000000 = { 0x7F800000 } (+Inf)
0x7F7FFFFF + 0x73800000 = { 0x7F800000 } (+Inf)
0x7F7FFFFF + 0x73FFFFFF = { 0x7F800000 } (+Inf)
fa = { 0x00000000, 0x00000000 } (0)
fa.sub(f200); fa = { 0xC0690000, 0x00000000 } ( -2.0000000000000000E+02)
fa = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fa.sub(Float(1)) = { 0x00000000, 0x00000000 } (0)
Float(2) = { 0x40000000, 0x00000000 } (  2.0000000000000000E+00)
Float(2).sub(Float(3)) = { 0xBFF00000, 0x00000000 } ( -1.0000000000000000E+00)
Float(13) = { 0x402A0000, 0x00000000 } (  1.3000000000000000E+01)
Float(13).sub(Float(13)) = { 0x00000000, 0x00000000 } (0)
Trap: type = FormatMismatch, op = ReverseSubtraction, status = 0x21
	a = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	b = { 0x40000000 } ( 2.0000000E+00)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
Float(fcsingle, 2) - Float(fc, 3) = { 0x7FF00000, 0x00000001 } (QNaN)
Trap: type = InvalidOperation, op = Subtraction, status = 0x02
	a = { 0x7FF00000, 0x00000002 } (NaN)
	b = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
NaN - 20 = { 0x7FF00000, 0x00000001 } (QNaN)
QNaN - 20 = { 0x7FF00000, 0x00000001 } (QNaN)
PInf - 20 = { 0x7FF00000, 0x00000000 } (+Inf)
NInf - 20 = { 0xFFF00000, 0x00000000 } (-Inf)
+0 - 20 = { 0xC0340000, 0x00000000 } ( -2.0000000000000000E+01)
-0 - 20 = { 0xC0340000, 0x00000000 } ( -2.0000000000000000E+01)
Trap: type = InvalidOperation, op = Subtraction, status = 0x02
	a = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
	b = { 0x7FF00000, 0x00000002 } (NaN)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
20 - NaN = { 0x7FF00000, 0x00000001 } (QNaN)
20 - QNaN = { 0x7FF00000, 0x00000001 } (QNaN)
20 - PInf = { 0xFFF00000, 0x00000000 } (-Inf)
20 - NInf = { 0x7FF00000, 0x00000000 } (+Inf)
20 - 0 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
20 - -0 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
-20 - 200 = { 0xC06B8000, 0x00000000 } ( -2.2000000000000000E+02)
20 - 200 = { 0xC0668000, 0x00000000 } ( -1.8000000000000000E+02)
200 - 20 = { 0x40668000, 0x00000000 } (  1.8000000000000000E+02)
0x0F000002 - 0x0F000004 = { 0x84000000 } (-1.5046328E-36)
0x0F000004 - 0x0F000002 = { 0x04000000 } ( 1.5046328E-36)
0x00000001 - 0x00000002 = { 0x80000001 } (-1.4012985E-45)
0x00000002 - 0x00000001 = { 0x00000001 } ( 1.4012985E-45)
0x00401000 - 0x00400000 = { 0x00001000 } ( 5.7397185E-42)
0x00400000 - 0x00401000 = { 0x80001000 } (-5.7397185E-42)
0x10401000 - 0x10400000 = { 0x0A800000 } ( 1.2325952E-32)
0x10400000 - 0x10401000 = { 0x8A800000 } (-1.2325952E-32)
0x7F7FFFFE - 0x74000000 = { 0x7F7FFFFC } ( 3.4028229E+38)
0x74000000 - 0x7F7FFFFE = { 0xFF7FFFFC } (-3.4028229E+38)
0x7F7FFFFF - 0x73800000 = { 0x7F7FFFFE } ( 3.4028233E+38)
0x73800000 - 0x7F7FFFFF = { 0xFF7FFFFE } (-3.4028233E+38)
0x7F7FFFFF - 0x73FFFFFF = { 0x7F7FFFFD } ( 3.4028231E+38)
0x73FFFFFF - 0x7F7FFFFF = { 0xFF7FFFFD } (-3.4028231E+38)
0x3FF00000 0x0 - 0x3FF00000 0x0 = { 0x80000000, 0x00000000 } (-0)
0x3FF00000 0x0 - 0x3FE00000 0x0 = { 0x3FE00000, 0x00000000 } (  5.0000000000000000E-01)
0x3FF00000 0x0 - 0x3FD00000 0x0 = { 0x3FE80000, 0x00000000 } (  7.5000000000000000E-01)
0x3FF00000 0x0 - 0x3FC00000 0x0 = { 0x3FEC0000, 0x00000000 } (  8.7500000000000000E-01)
0x3FF00000 0x0 - 0x3FB00000 0x0 = { 0x3FEE0000, 0x00000000 } (  9.3750000000000000E-01)
0x3FF00000 0x0 - 0x3F700000 0x0 = { 0x3FEFE000, 0x00000000 } (  9.9609375000000000E-01)
0x3FF00000 0x0 - 0x3F300000 0x0 = { 0x3FEFFE00, 0x00000000 } (  9.9975585937500000E-01)
0x3FF00000 0x0 - 0x3EF00000 0x0 = { 0x3FEFFFE0, 0x00000000 } (  9.9998474121093750E-01)
0x3FF00000 0x0 - 0x3EB00000 0x0 = { 0x3FEFFFFE, 0x00000000 } (  9.9999904632568359E-01)
0x3FF00000 0x0 - 0x3EA00000 0x0 = { 0x3FEFFFFF, 0x00000000 } (  9.9999952316284180E-01)
0x3FF00000 0x0 - 0x3E700000 0x0 = { 0x3FEFFFFF, 0xE0000000 } (  9.9999994039535522E-01)
0x3FF00000 0x0 - 0x3E300000 0x0 = { 0x3FEFFFFF, 0xFE000000 } (  9.9999999627470970E-01)
0x3FF00000 0x0 - 0x3DF00000 0x0 = { 0x3FEFFFFF, 0xFFE00000 } (  9.9999999976716936E-01)
0x3FF00000 0x0 - 0x3DB00000 0x0 = { 0x3FEFFFFF, 0xFFFE0000 } (  9.9999999998544808E-01)
0x3FF00000 0x0 - 0x3D700000 0x0 = { 0x3FEFFFFF, 0xFFFFE000 } (  9.9999999999909051E-01)
0x3FF00000 0x0 - 0x3D300000 0x0 = { 0x3FEFFFFF, 0xFFFFFE00 } (  9.9999999999994316E-01)
0x3FF00000 0x0 - 0x3CF00000 0x0 = { 0x3FEFFFFF, 0xFFFFFFE0 } (  9.9999999999999645E-01)
0x3FF00000 0x0 - 0x3CB00000 0x0 = { 0x3FEFFFFF, 0xFFFFFFFE } (  9.9999999999999978E-01)
0x3FF00000 0x0 - 0x3CA00000 0x0 = { 0x3FEFFFFF, 0xFFFFFFFF } (  9.9999999999999989E-01)
0x3FF00000 0x0 - 0x3C900000 0x0 = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
0x3FF00000 0x0 + 0x3CA00000 0x00000002 = { 0x3FF00000, 0x00000001 } (  1.0000000000000002E+00)
0x3FF00000 0x0 + 0x3C9FFFFF 0xFFFFFFFC = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
0x3FF00000 0x0 - 0x3C900000 0x00000002 = { 0x3FEFFFFF, 0xFFFFFFFF } (  9.9999999999999989E-01)
0x3FF00000 0x0 - 0x3C8FFFFF 0xFFFFFFFC = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
fa = { 0x00000000, 0x00000000 } (0)
fa.sub(f200); fa = { 0xC0690000, 0x00000000 } ( -2.0000000000000000E+02)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa.neg(); fa = { 0xC0690000, 0x00000000 } ( -2.0000000000000000E+02)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa.mult(f200); fa = { 0x40AF4000, 0x00000000 } (  4.0000000000000000E+03)
f200 = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
f200.mult(f20) = { 0x40AF4000, 0x00000000 } (  4.0000000000000000E+03)
Float(3) = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
n <- n * 3 = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
n <- n * 3 = { 0x40220000, 0x00000000 } (  9.0000000000000000E+00)
n <- n * 3 = { 0x403B0000, 0x00000000 } (  2.7000000000000000E+01)
n <- n * 3 = { 0x40544000, 0x00000000 } (  8.1000000000000000E+01)
n <- n * 3 = { 0x406E6000, 0x00000000 } (  2.4300000000000000E+02)
n <- n * 3 = { 0x4086C800, 0x00000000 } (  7.2900000000000000E+02)
n <- n * 3 = { 0x40A11600, 0x00000000 } (  2.1870000000000000E+03)
n <- n * 3 = { 0x40B9A100, 0x00000000 } (  6.5610000000000000E+03)
n <- n * 3 = { 0x40D338C0, 0x00000000 } (  1.9683000000000000E+04)
n <- n * 3 = { 0x40ECD520, 0x00000000 } (  5.9049000000000000E+04)
n <- n * 3 = { 0x41059FD8, 0x00000000 } (  1.7714700000000000E+05)
n <- n * 3 = { 0x412037E2, 0x00000000 } (  5.3144100000000000E+05)
n <- n * 3 = { 0x413853D3, 0x00000000 } (  1.5943230000000000E+06)
n <- n * 3 = { 0x41523EDE, 0x40000000 } (  4.7829690000000000E+06)
n <- n * 3 = { 0x416B5E4D, 0x60000000 } (  1.4348907000000000E+07)
n <- n * 3 = { 0x418486BA, 0x08000000 } (  4.3046721000000000E+07)
n <- n * 3 = { 0x419ECA17, 0x0C000000 } (  1.2914016300000000E+08)
n <- n * 3 = { 0x41B71791, 0x49000000 } (  3.8742048900000000E+08)
n <- n * 3 = { 0x41D151AC, 0xF6C00000 } (  1.1622614670000000E+09)
n <- n * 3 = { 0x41E9FA83, 0x72200000 } (  3.4867844010000000E+09)
n <- n * 3 = { 0x42037BE2, 0x95980000 } (  1.0460353203000000E+10)
n <- n * 3 = { 0x421D39D3, 0xE0640000 } (  3.1381059609000000E+10)
n <- n * 3 = { 0x4235EB5E, 0xE84B0000 } (  9.4143178827000000E+10)
n <- n * 3 = { 0x42507087, 0x2E384000 } (  2.8242953648100000E+11)
n <- n * 3 = { 0x4268A8CA, 0xC5546000 } (  8.4728860944300000E+11)
n <- n * 3 = { 0x42827E98, 0x13FF4800 } (  2.5418658283290000E+12)
n <- n * 3 = { 0x429BBDE4, 0x1DFEEC00 } (  7.6255974849870000E+12)
n <- n * 3 = { 0x42B4CE6B, 0x167F3100 } (  2.2876792454961000E+13)
n <- n * 3 = { 0x42CF35A0, 0xA1BEC980 } (  6.8630377364883000E+13)
n <- n * 3 = { 0x42E76838, 0x794F1720 } (  2.0589113209464900E+14)
n <- n * 3 = { 0x43018E2A, 0x5AFB5158 } (  6.1767339628394700E+14)
n <- n * 3 = { 0x431A553F, 0x8878FA04 } (  1.8530201888518410E+15)
n <- n * 3 = { 0x4333BFEF, 0xA65ABB83 } (  5.5590605665555230E+15)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x434D9FE7, 0x79881944 } (  1.6677181699666568E+16)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x434D9FE7, 0x79881944 } (  1.6677181699666568E+16)
n <- n * 3 = { 0x434D9FE7, 0x79881944 } (  1.6677181699666568E+16)
n <- n * 3 = { 0x436637ED, 0x9B2612F3 } (  5.0031545098999704E+16)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x4380A9F2, 0x345C8E36 } (  1.5009463529699910E+17)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x4380A9F2, 0x345C8E36 } (  1.5009463529699910E+17)
n <- n * 3 = { 0x4380A9F2, 0x345C8E36 } (  1.5009463529699910E+17)
n <- n * 3 = { 0x4398FEEB, 0x4E8AD551 } (  4.5028390589099731E+17)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x43B2BF30, 0x7AE81FFD } (  1.3508517176729920E+18)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x43B2BF30, 0x7AE81FFD } (  1.3508517176729920E+18)
n <- n * 3 = { 0x43B2BF30, 0x7AE81FFD } (  1.3508517176729920E+18)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x43CC1EC8, 0xB85C2FFC } (  4.0525551530189763E+18)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x43CC1EC8, 0xB85C2FFC } (  4.0525551530189763E+18)
n <- n * 3 = { 0x43CC1EC8, 0xB85C2FFC } (  4.0525551530189763E+18)
n <- n * 3 = { 0x43E51716, 0x8A4523FD } (  1.2157665459056929E+19)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x43FFA2A1, 0xCF67B5FC } (  3.6472996377170788E+19)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x43FFA2A1, 0xCF67B5FC } (  3.6472996377170788E+19)
n <- n * 3 = { 0x43FFA2A1, 0xCF67B5FC } (  3.6472996377170788E+19)
n <- n * 3 = { 0x4417B9F9, 0x5B8DC87D } (  1.0941898913151237E+20)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x4431CB7B, 0x04AA565E } (  3.2825696739453711E+20)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x4431CB7B, 0x04AA565E } (  3.2825696739453711E+20)
n <- n * 3 = { 0x4431CB7B, 0x04AA565E } (  3.2825696739453711E+20)
n <- n * 3 = { 0x444AB138, 0x86FF818D } (  9.8477090218361133E+20)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x446404EA, 0x653FA12A } (  2.9543127065508341E+21)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x446404EA, 0x653FA12A } (  2.9543127065508341E+21)
n <- n * 3 = { 0x446404EA, 0x653FA12A } (  2.9543127065508341E+21)
n <- n * 3 = { 0x447E075F, 0x97DF71BF } (  8.8629381196525024E+21)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x44968587, 0xB1E7954F } (  2.6588814358957506E+22)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x44968587, 0xB1E7954F } (  2.6588814358957506E+22)
n <- n * 3 = { 0x44968587, 0xB1E7954F } (  2.6588814358957506E+22)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x44B0E425, 0xC56DAFFB } (  7.9766443076872514E+22)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x44B0E425, 0xC56DAFFB } (  7.9766443076872514E+22)
n <- n * 3 = { 0x44B0E425, 0xC56DAFFB } (  7.9766443076872514E+22)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x44C95638, 0xA82487F8 } (  2.3929932923061753E+23)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x44C95638, 0xA82487F8 } (  2.3929932923061753E+23)
n <- n * 3 = { 0x44C95638, 0xA82487F8 } (  2.3929932923061753E+23)
n <- n * 3 = { 0x44E300AA, 0x7E1B65FA } (  7.1789798769185258E+23)
n <- n * 3 = { 0x44FC80FF, 0xBD2918F7 } (  2.1536939630755577E+24)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x451560BF, 0xCDDED2B9 } (  6.4610818892266729E+24)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x451560BF, 0xCDDED2B9 } (  6.4610818892266729E+24)
n <- n * 3 = { 0x451560BF, 0xCDDED2B9 } (  6.4610818892266729E+24)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x4530088F, 0xDA671E0B } (  1.9383245667680020E+25)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x4530088F, 0xDA671E0B } (  1.9383245667680020E+25)
n <- n * 3 = { 0x4530088F, 0xDA671E0B } (  1.9383245667680020E+25)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x45480CD7, 0xC79AAD10 } (  5.8149737003040055E+25)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x45480CD7, 0xC79AAD10 } (  5.8149737003040055E+25)
n <- n * 3 = { 0x45480CD7, 0xC79AAD10 } (  5.8149737003040055E+25)
n <- n * 3 = { 0x456209A1, 0xD5B401CC } (  1.7444921100912017E+26)
n <- n * 3 = { 0x457B0E72, 0xC08E02B2 } (  5.2334763302736050E+26)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x45944AD6, 0x106A8206 } (  1.5700428990820816E+27)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x45944AD6, 0x106A8206 } (  1.5700428990820816E+27)
n <- n * 3 = { 0x45944AD6, 0x106A8206 } (  1.5700428990820816E+27)
n <- n * 3 = { 0x45AE7041, 0x189FC309 } (  4.7101286972462449E+27)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x45C6D430, 0xD277D247 } (  1.4130386091738735E+28)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x45C6D430, 0xD277D247 } (  1.4130386091738735E+28)
n <- n * 3 = { 0x45C6D430, 0xD277D247 } (  1.4130386091738735E+28)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x45E11F24, 0x9DD9DDB5 } (  4.2391158275216204E+28)
	b = { 0x40080000, 0x00000000 } (  3.0000000000000000E+00)
	r = { 0x45E11F24, 0x9DD9DDB5 } (  4.2391158275216204E+28)
n <- n * 3 = { 0x45E11F24, 0x9DD9DDB5 } (  4.2391158275216204E+28)
fnan = { 0x7FF00000, 0x00000002 } (NaN)
Trap: type = InvalidOperation, op = Multiplication, status = 0x02
	a = { 0x7FF00000, 0x00000002 } (NaN)
	b = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
fnan.mult(f20) = { 0x7FF00000, 0x00000001 } (QNaN)
f20 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
Trap: type = InvalidOperation, op = Multiplication, status = 0x02
	a = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
	b = { 0x7FF00000, 0x00000002 } (NaN)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
f20.mult(fnan) = { 0x7FF00000, 0x00000001 } (QNaN)
fqnan = { 0x7FF00000, 0x00000001 } (QNaN)
fqnan.mult(f20) = { 0x7FF00000, 0x00000001 } (QNaN)
f20 = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
f20.mult(fqnan) = { 0x7FF00000, 0x00000001 } (QNaN)
fpinf = { 0x7FF00000, 0x00000000 } (+Inf)
fpinf.mult(fpinf) = { 0x7FF00000, 0x00000000 } (+Inf)
fpinf = { 0x7FF00000, 0x00000000 } (+Inf)
fpinf.mult(fninf) = { 0xFFF00000, 0x00000000 } (-Inf)
fninf = { 0xFFF00000, 0x00000000 } (-Inf)
fninf.mult(fpinf) = { 0xFFF00000, 0x00000000 } (-Inf)
fninf = { 0xFFF00000, 0x00000000 } (-Inf)
fninf.mult(fninf) = { 0x7FF00000, 0x00000000 } (+Inf)
fpinf = { 0x7FF00000, 0x00000000 } (+Inf)
fpinf.mult(f1) = { 0x7FF00000, 0x00000000 } (+Inf)
f1 = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
f1.mult(fpinf) = { 0x7FF00000, 0x00000000 } (+Inf)
fpinf = { 0x7FF00000, 0x00000000 } (+Inf)
Trap: type = InvalidOperation, op = Multiplication, status = 0x02
	a = { 0x7FF00000, 0x00000000 } (+Inf)
	b = { 0x00000000, 0x00000000 } (0)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
fpinf.mult(f0) = { 0x7FF00000, 0x00000001 } (QNaN)
f0 = { 0x00000000, 0x00000000 } (0)
Trap: type = InvalidOperation, op = Multiplication, status = 0x02
	a = { 0x00000000, 0x00000000 } (0)
	b = { 0x7FF00000, 0x00000000 } (+Inf)
	r = { 0x7FF00000, 0x00000001 } (QNaN)
f0.mult(fpinf) = { 0x7FF00000, 0x00000001 } (QNaN)
f1 = { 0x3FF00000, 0x00000000 } (  1.0000000000000000E+00)
f1.mult(f0) = { 0x00000000, 0x00000000 } (0)
f0 = { 0x00000000, 0x00000000 } (0)
f0.mult(f1) = { 0x00000000, 0x00000000 } (0)
f0 = { 0x00000000, 0x00000000 } (0)
f0.mult(f0) = { 0x00000000, 0x00000000 } (0)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa.div(f20); fa = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa.rem(f20); fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa = { 0x00000000, 0x00000000 } (0)
(fa += f20) = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
fa = { 0x00000000, 0x00000000 } (0)
(fa -= f20) = { 0xC0340000, 0x00000000 } ( -2.0000000000000000E+01)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
(fa *= f20) = { 0x40AF4000, 0x00000000 } (  4.0000000000000000E+03)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
(fa /= f20) = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
(fa %%= f20) = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa = { 0x00000000, 0x00000000 } (0)
(fa + f20) = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
fa = { 0x00000000, 0x00000000 } (0)
(fa - f20) = { 0xC0340000, 0x00000000 } ( -2.0000000000000000E+01)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
-fa = { 0xC0690000, 0x00000000 } ( -2.0000000000000000E+02)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
(fa * f20) = { 0x40AF4000, 0x00000000 } (  4.0000000000000000E+03)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
(fa / f20) = { 0x40240000, 0x00000000 } (  1.0000000000000000E+01)
fa = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
(fa %% f20) = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
fa = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
fa++ = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
fa = { 0x40350000, 0x00000000 } (  2.1000000000000000E+01)
fa = { 0x40340000, 0x00000000 } (  2.0000000000000000E+01)
--fa = { 0x40330000, 0x00000000 } (  1.9000000000000000E+01)
fa = { 0x40330000, 0x00000000 } (  1.9000000000000000E+01)
f20.equal(f20) = 1
f20.equal(f200) = 0
(f20 == f20) = 1
(f20 == f200) = 0
(f20 != f20) = 0
(f20 != f200) = 1
f20.lessthan(f20) = 0
f20.lessthan(f200) = 1
f200.lessthan(f20) = 0
(f20 < f20) = 0
(f20 < f200) = 1
(f200 < f20) = 0
(f20 <= f20) = 1
(f20 <= f200) = 1
(f200 <= f20) = 0
(f20 > f20) = 0
(f20 > f200) = 0
(f200 > f20) = 1
(f20 >= f20) = 1
(f20 >= f200) = 0
(f200 >= f20) = 1
f20.isPos() = 1
f20.isNeg() = 0
f20.isZero() = 0
f20.isPZero() = 0
f20.isNZero() = 0
f20.isInf() = 0
f20.isPInf() = 0
f20.isNInf() = 0
f20.isNan() = 0
f20.isSNan() = 0
f20.isQNan() = 0
!f0 = 1
!f20 = 0
f20.finite() = 1
f20.unordered(f200) = 0
f200.unordered(f20) = 0
f0.floattype() = 6
f20.floattype() = 8
f200.copysign(f20) = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
f200.scalb(f20) = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
f200.logb() = { 0x40690000, 0x00000000 } (  2.0000000000000000E+02)
f200.nextafter(f20) = { 0x4068FFFF, 0xFFFFFFFF } (  1.9999999999999997E+02)
sqr(f20) = { 0x40790000, 0x00000000 } (  4.0000000000000000E+02)
sqrt(f20) = { 0x4011E377, 0x9B97F4A8 } (  4.4721359549995796E+00)
Testing logrithmic functions
Trap: type = Inexact, op = Subtraction, status = 0x20
	a = { 0x4068E9D1, 0xBD0105C4 } (  1.9930685281944000E+02)
	b = { 0x3FE62E42, 0xFEFA3BDC } (  6.9314718056000002E-01)
	r = { 0x4068E9D1, 0xBD0105C4 } (  1.9930685281944000E+02)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0x4072089F, 0xC709FC46 } (  2.8853900817776264E+02)
	b = { 0x3FE62E42, 0xFEFA3C79 } (  6.9314718056001745E-01)
	r = { 0x4072089F, 0xC709FC46 } (  2.8853900817776264E+02)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x40690A39, 0xA1D87E45 } (  2.0031953518184505E+02)
	b = { 0x3FE62E42, 0xFEFA3C79 } (  6.9314718056001745E-01)
	r = { 0x40690A39, 0xA1D87E45 } (  2.0031953518184505E+02)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3EBA2367, 0x98A5E929 } (  1.5579640569572781E-06)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0x3EBA2367, 0x98A5E929 } (  1.5579640569572781E-06)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x3FEFF5C8, 0x005DFB45 } (  9.9875259467794619E-01)
	b = { 0x3EAA2367, 0x98A5E929 } (  7.7898202847863905E-07)
	r = { 0x3FEFF5C8, 0x005DFB45 } (  9.9875259467794619E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0xBE20B447, 0x46662EE3 } ( -1.9446262822183711E-09)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0xBE20B447, 0x46662EE3 } ( -1.9446262822183711E-09)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0xBDF645B4, 0x5DDD93D9 } ( -3.2410438036972850E-10)
	b = { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
	r = { 0xBDF645B4, 0x5DDD93D9 } ( -3.2410438036972850E-10)
Trap: type = Inexact, op = Subtraction, status = 0x20
	a = { 0x3FEFF5C8, 0x00316FDC } (  9.9875259435384178E-01)
	b = { 0xBDF645B4, 0x5DDD93D9 } ( -3.2410438036972850E-10)
	r = { 0x3FEFF5C8, 0x00316FDC } (  9.9875259435384178E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3D8559AF, 0x83FAE755 } (  2.4272520027707809E-12)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0x3D8559AF, 0x83FAE755 } (  2.4272520027707809E-12)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0x3D3C7794, 0xAFF93471 } (  1.0113550011544920E-13)
	b = { 0x40380000, 0x00000000 } (  2.4000000000000000E+01)
	r = { 0x3D3C7794, 0xAFF93471 } (  1.0113550011544920E-13)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
	b = { 0x3D3C7794, 0xAFF93471 } (  1.0113550011544920E-13)
	r = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0xBCEB49EA, 0x5638BC91 } ( -3.0296578519106823E-15)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0xBCEB49EA, 0x5638BC91 } ( -3.0296578519106823E-15)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0xBC7D1BA4, 0xA03C84DF } ( -2.5247148765922352E-17)
	b = { 0x405E0000, 0x00000000 } (  1.2000000000000000E+02)
	r = { 0xBC7D1BA4, 0xA03C84DF } ( -2.5247148765922352E-17)
Trap: type = Inexact, op = Subtraction, status = 0x20
	a = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
	b = { 0xBC7D1BA4, 0xA03C84DF } ( -2.5247148765922352E-17)
	r = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3C51707D, 0xD1B9DAE5 } (  3.7815713774944435E-18)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0x3C51707D, 0xD1B9DAE5 } (  3.7815713774944435E-18)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
	b = { 0x3BB8CD7F, 0xBE302640 } (  5.2521824687422827E-21)
	r = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0xBBB64A3F, 0x967341D9 } ( -4.7200980381552385E-21)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0xBBB64A3F, 0x967341D9 } ( -4.7200980381552385E-21)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEFEB93, 0x43C4C741 } (  9.9750674472873169E-01)
	b = { 0x3FEFEB93, 0x43C4C741 } (  9.9750674472873169E-01)
	r = { 0x3FEFEB93, 0x43C4C741 } (  9.9750674472873169E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEFD733, 0x90E6536C } (  9.9501970577931109E-01)
	b = { 0x3FEFD733, 0x90E6536C } (  9.9501970577931109E-01)
	r = { 0x3FEFD733, 0x90E6536C } (  9.9501970577931109E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEFAE9B, 0x25FC7111 } (  9.9006421488914687E-01)
	b = { 0x3FEFAE9B, 0x25FC7111 } (  9.9006421488914687E-01)
	r = { 0x3FEFAE9B, 0x25FC7111 } (  9.9006421488914687E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEF5E05, 0x53C66C89 } (  9.8022714960406276E-01)
	b = { 0x3FEF5E05, 0x53C66C89 } (  9.8022714960406276E-01)
	r = { 0x3FEF5E05, 0x53C66C89 } (  9.8022714960406276E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEEBF3E, 0x919D8310 } (  9.6084526482090560E-01)
	b = { 0x3FEEBF3E, 0x919D8310 } (  9.6084526482090560E-01)
	r = { 0x3FEEBF3E, 0x919D8310 } (  9.6084526482090560E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FED8B0C, 0x446BF4E4 } (  9.2322362292875626E-01)
	b = { 0x3FED8B0C, 0x446BF4E4 } (  9.2322362292875626E-01)
	r = { 0x3FED8B0C, 0x446BF4E4 } (  9.2322362292875626E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEB4662, 0x6E9AC9A0 } (  8.5234185793369832E-01)
	b = { 0x3FEB4662, 0x6E9AC9A0 } (  8.5234185793369832E-01)
	r = { 0x3FEB4662, 0x6E9AC9A0 } (  8.5234185793369832E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FE73F60, 0xEA77E062 } (  7.2648664278586872E-01)
	b = { 0x3FE73F60, 0xEA77E062 } (  7.2648664278586872E-01)
	r = { 0x3FE73F60, 0xEA77E062 } (  7.2648664278586872E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x4793B8B5, 0xB5056E17 } (  6.5536000000000004E+36)
	b = { 0x4793B8B5, 0xB5056E17 } (  6.5536000000000004E+36)
	r = { 0x4793B8B5, 0xB5056E17 } (  6.5536000000000004E+36)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x497D6329, 0xF1C35CA5 } (  1.0485760000000000E+46)
	b = { 0x4793B8B5, 0xB5056E17 } (  6.5536000000000004E+36)
	r = { 0x497D6329, 0xF1C35CA5 } (  1.0485760000000000E+46)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x4F384F03, 0xE93FF9F6 } (  4.2949672960000007E+73)
	b = { 0x4F384F03, 0xE93FF9F6 } (  4.2949672960000007E+73)
	r = { 0x4F384F03, 0xE93FF9F6 } (  4.2949672960000007E+73)
Trap: type = Inexact, op = Subtraction, status = 0x20
	a = { 0x4068E9D1, 0xBD0105C4 } (  1.9930685281944000E+02)
	b = { 0x3FE62E42, 0xFEFA3BDC } (  6.9314718056000002E-01)
	r = { 0x4068E9D1, 0xBD0105C4 } (  1.9930685281944000E+02)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0x4072089F, 0xC709FC46 } (  2.8853900817776264E+02)
	b = { 0x3FE62E42, 0xFEFA3C79 } (  6.9314718056001745E-01)
	r = { 0x4072089F, 0xC709FC46 } (  2.8853900817776264E+02)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x40690A39, 0xA1D87E45 } (  2.0031953518184505E+02)
	b = { 0x3FE62E42, 0xFEFA3C79 } (  6.9314718056001745E-01)
	r = { 0x40690A39, 0xA1D87E45 } (  2.0031953518184505E+02)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3EBA2367, 0x98A5E929 } (  1.5579640569572781E-06)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0x3EBA2367, 0x98A5E929 } (  1.5579640569572781E-06)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x3FEFF5C8, 0x005DFB45 } (  9.9875259467794619E-01)
	b = { 0x3EAA2367, 0x98A5E929 } (  7.7898202847863905E-07)
	r = { 0x3FEFF5C8, 0x005DFB45 } (  9.9875259467794619E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0xBE20B447, 0x46662EE3 } ( -1.9446262822183711E-09)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0xBE20B447, 0x46662EE3 } ( -1.9446262822183711E-09)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0xBDF645B4, 0x5DDD93D9 } ( -3.2410438036972850E-10)
	b = { 0x40180000, 0x00000000 } (  6.0000000000000000E+00)
	r = { 0xBDF645B4, 0x5DDD93D9 } ( -3.2410438036972850E-10)
Trap: type = Inexact, op = Subtraction, status = 0x20
	a = { 0x3FEFF5C8, 0x00316FDC } (  9.9875259435384178E-01)
	b = { 0xBDF645B4, 0x5DDD93D9 } ( -3.2410438036972850E-10)
	r = { 0x3FEFF5C8, 0x00316FDC } (  9.9875259435384178E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3D8559AF, 0x83FAE755 } (  2.4272520027707809E-12)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0x3D8559AF, 0x83FAE755 } (  2.4272520027707809E-12)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0x3D3C7794, 0xAFF93471 } (  1.0113550011544920E-13)
	b = { 0x40380000, 0x00000000 } (  2.4000000000000000E+01)
	r = { 0x3D3C7794, 0xAFF93471 } (  1.0113550011544920E-13)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
	b = { 0x3D3C7794, 0xAFF93471 } (  1.0113550011544920E-13)
	r = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0xBCEB49EA, 0x5638BC91 } ( -3.0296578519106823E-15)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0xBCEB49EA, 0x5638BC91 } ( -3.0296578519106823E-15)
Trap: type = Inexact, op = Division, status = 0x20
	a = { 0xBC7D1BA4, 0xA03C84DF } ( -2.5247148765922352E-17)
	b = { 0x405E0000, 0x00000000 } (  1.2000000000000000E+02)
	r = { 0xBC7D1BA4, 0xA03C84DF } ( -2.5247148765922352E-17)
Trap: type = Inexact, op = Subtraction, status = 0x20
	a = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
	b = { 0xBC7D1BA4, 0xA03C84DF } ( -2.5247148765922352E-17)
	r = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3C51707D, 0xD1B9DAE5 } (  3.7815713774944435E-18)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0x3C51707D, 0xD1B9DAE5 } (  3.7815713774944435E-18)
Trap: type = Inexact, op = Addition, status = 0x20
	a = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
	b = { 0x3BB8CD7F, 0xBE302640 } (  5.2521824687422827E-21)
	r = { 0x3FEFF5C8, 0x0031736B } (  9.9875259435394292E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0xBBB64A3F, 0x967341D9 } ( -4.7200980381552385E-21)
	b = { 0xBF547343, 0xB0FC8A00 } ( -1.2481843040822449E-03)
	r = { 0xBBB64A3F, 0x967341D9 } ( -4.7200980381552385E-21)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEFEB93, 0x43C4C741 } (  9.9750674472873169E-01)
	b = { 0x3FEFEB93, 0x43C4C741 } (  9.9750674472873169E-01)
	r = { 0x3FEFEB93, 0x43C4C741 } (  9.9750674472873169E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEFD733, 0x90E6536C } (  9.9501970577931109E-01)
	b = { 0x3FEFD733, 0x90E6536C } (  9.9501970577931109E-01)
	r = { 0x3FEFD733, 0x90E6536C } (  9.9501970577931109E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEFAE9B, 0x25FC7111 } (  9.9006421488914687E-01)
	b = { 0x3FEFAE9B, 0x25FC7111 } (  9.9006421488914687E-01)
	r = { 0x3FEFAE9B, 0x25FC7111 } (  9.9006421488914687E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEF5E05, 0x53C66C89 } (  9.8022714960406276E-01)
	b = { 0x3FEF5E05, 0x53C66C89 } (  9.8022714960406276E-01)
	r = { 0x3FEF5E05, 0x53C66C89 } (  9.8022714960406276E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEEBF3E, 0x919D8310 } (  9.6084526482090560E-01)
	b = { 0x3FEEBF3E, 0x919D8310 } (  9.6084526482090560E-01)
	r = { 0x3FEEBF3E, 0x919D8310 } (  9.6084526482090560E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FED8B0C, 0x446BF4E4 } (  9.2322362292875626E-01)
	b = { 0x3FED8B0C, 0x446BF4E4 } (  9.2322362292875626E-01)
	r = { 0x3FED8B0C, 0x446BF4E4 } (  9.2322362292875626E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FEB4662, 0x6E9AC9A0 } (  8.5234185793369832E-01)
	b = { 0x3FEB4662, 0x6E9AC9A0 } (  8.5234185793369832E-01)
	r = { 0x3FEB4662, 0x6E9AC9A0 } (  8.5234185793369832E-01)
Trap: type = Inexact, op = Multiplication, status = 0x20
	a = { 0x3FE73F60, 0xEA77E062 } (  7.2648664278586872E-01)
	b = { 0x3FE73F60, 0xEA77E062 } (  7.2648664278586872E-01)
	r = { 0x3FE73F60, 0xEA77E062 } (  7.2648664278586872E-01)
Testing trigonometric functions
Tests complete
